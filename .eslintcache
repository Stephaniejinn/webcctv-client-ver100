[{"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\timeStat.js":"1","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\Peak15.js":"2","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PeakHour.js":"3","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js":"4","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js":"5","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\AvgSpeed.js":"6","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js":"7","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PHF.js":"8","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\searchDownload\\SearchDownloadPage.js":"9","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\comVisualHalf\\ComVisualHalf.js":"10","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\singleRadio\\SingleRadio.js":"11","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\bidirectionalBar\\DayNight.js":"12","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js":"13","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js":"14","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js":"15","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js":"16","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\index.js":"17","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js":"18","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\comVisualOne\\ComVisualOne.js":"19","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js":"20","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js":"21","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\TimeDataVisualization.js":"22","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js":"23","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\dataComparison\\DataComparisonPage.js":"24","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js":"25","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTCnt.js":"26","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTVehicleRatio.js":"27","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\overSpeed.js":"28","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTOverSpeed.js":"29","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js":"30","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js":"31","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js":"32","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js":"33","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js":"34","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js":"35","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\funnelChart\\index.js":"36","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\areaChart\\index.js":"37","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js":"38","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js":"39","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTCnt.js":"40","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js":"41","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js":"42","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchCollapsedTable\\SearchCollapsedTable.js":"43","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\TimeTableCard.js":"44","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\LaneTableCard.js":"45","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTFirstTable.js":"46","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js":"47","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js":"48","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js":"49","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchResultTab\\SearchResultTab.js":"50","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTSecondTable.js":"51","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js":"52","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js":"53","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js":"54","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js":"55","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js":"56","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js":"57","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\PasswordPage.js":"58","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchComparison\\SearchComparison.js":"59","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\slideBarChart\\index.js":"60","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js":"61","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js":"62","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js":"63","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js":"64","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\accountDescription\\AccountDescriptionFrom.js":"65","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js":"66","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js":"67","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\pieChart\\index.js":"68","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\comVisualization\\ComVisualization.js":"69","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js":"70","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js":"71","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js":"72","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js":"73","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js":"74","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\store\\index.js":"75","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\login\\LoginPage.js":"76","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\userInfo.js":"77","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js":"78","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js":"79","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js":"80","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StatContainer.js":"81","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StreamingContainer.js":"82","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js":"83","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTVehicleRatio.js":"84","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\dashLineChart\\DayPedestrians.js":"85","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\dashLineChart\\WeekPedestrians.js":"86","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTConcentrationRatio.js":"87","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTPHF.js":"88","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js":"89","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js":"90","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js":"91","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleRatio.js":"92","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js":"93","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleCnt.js":"94","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js":"95","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MLFirstTable.js":"96","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTCnt.js":"97","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTPCU.js":"98","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTVehicleRatio.js":"99","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTAvgSpeed.js":"100","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js":"101","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WMFlowRate.js":"102","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MonthPeakTime.js":"103","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WeekPeakTime.js":"104","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\location.js":"105","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js":"106"},{"size":9376,"mtime":1614858832895,"results":"107","hashOfConfig":"108"},{"size":486,"mtime":1616236053868,"results":"109","hashOfConfig":"108"},{"size":489,"mtime":1616236116342,"results":"110","hashOfConfig":"108"},{"size":744,"mtime":1616236285700,"results":"111","hashOfConfig":"108"},{"size":3351,"mtime":1616469959870,"results":"112","hashOfConfig":"108"},{"size":1680,"mtime":1616224337965,"results":"113","hashOfConfig":"108"},{"size":1540,"mtime":1616224672586,"results":"114","hashOfConfig":"108"},{"size":453,"mtime":1616236212205,"results":"115","hashOfConfig":"108"},{"size":1764,"mtime":1616459699564,"results":"116","hashOfConfig":"108"},{"size":703,"mtime":1611036002732,"results":"117","hashOfConfig":"108"},{"size":742,"mtime":1615875792743,"results":"118","hashOfConfig":"108"},{"size":2421,"mtime":1616391353177,"results":"119","hashOfConfig":"108"},{"size":4063,"mtime":1616411657890,"results":"120","hashOfConfig":"108"},{"size":2627,"mtime":1616393426777,"results":"121","hashOfConfig":"108"},{"size":2871,"mtime":1616394701586,"results":"122","hashOfConfig":"108"},{"size":1622,"mtime":1616400207822,"results":"123","hashOfConfig":"108"},{"size":764,"mtime":1616059632862,"results":"124","hashOfConfig":"108"},{"size":1921,"mtime":1615791928555,"results":"125","hashOfConfig":"108"},{"size":1119,"mtime":1611043645894,"results":"126","hashOfConfig":"108"},{"size":997,"mtime":1615964214432,"results":"127","hashOfConfig":"108"},{"size":2501,"mtime":1616390825867,"results":"128","hashOfConfig":"108"},{"size":6882,"mtime":1616416763554,"results":"129","hashOfConfig":"108"},{"size":2379,"mtime":1616059484514,"results":"130","hashOfConfig":"108"},{"size":1909,"mtime":1616049387277,"results":"131","hashOfConfig":"108"},{"size":2454,"mtime":1616056417387,"results":"132","hashOfConfig":"108"},{"size":2576,"mtime":1616416302162,"results":"133","hashOfConfig":"108"},{"size":2470,"mtime":1616390956524,"results":"134","hashOfConfig":"108"},{"size":1702,"mtime":1616224489464,"results":"135","hashOfConfig":"108"},{"size":2438,"mtime":1616391084074,"results":"136","hashOfConfig":"108"},{"size":3003,"mtime":1616393405658,"results":"137","hashOfConfig":"108"},{"size":4805,"mtime":1616459787655,"results":"138","hashOfConfig":"108"},{"size":2621,"mtime":1616393398157,"results":"139","hashOfConfig":"108"},{"size":2649,"mtime":1616416306526,"results":"140","hashOfConfig":"108"},{"size":2607,"mtime":1616416390370,"results":"141","hashOfConfig":"108"},{"size":2608,"mtime":1616416472198,"results":"142","hashOfConfig":"108"},{"size":1529,"mtime":1611032852741,"results":"143","hashOfConfig":"108"},{"size":772,"mtime":1610954807169,"results":"144","hashOfConfig":"108"},{"size":1938,"mtime":1615868929555,"results":"145","hashOfConfig":"108"},{"size":7808,"mtime":1616117924426,"results":"146","hashOfConfig":"108"},{"size":2406,"mtime":1616227548724,"results":"147","hashOfConfig":"108"},{"size":2484,"mtime":1616391020011,"results":"148","hashOfConfig":"108"},{"size":4805,"mtime":1611549481286,"results":"149","hashOfConfig":"108"},{"size":12167,"mtime":1616477273645,"results":"150","hashOfConfig":"108"},{"size":3737,"mtime":1616394194101,"results":"151","hashOfConfig":"108"},{"size":936,"mtime":1616394535146,"results":"152","hashOfConfig":"108"},{"size":9218,"mtime":1616318038240,"results":"153","hashOfConfig":"108"},{"size":5679,"mtime":1616229287097,"results":"154","hashOfConfig":"108"},{"size":4039,"mtime":1616469938929,"results":"155","hashOfConfig":"108"},{"size":2390,"mtime":1616230582290,"results":"156","hashOfConfig":"108"},{"size":482,"mtime":1616115594859,"results":"157","hashOfConfig":"108"},{"size":3397,"mtime":1616470547235,"results":"158","hashOfConfig":"108"},{"size":9693,"mtime":1616400678597,"results":"159","hashOfConfig":"108"},{"size":3566,"mtime":1616400757252,"results":"160","hashOfConfig":"108"},{"size":9819,"mtime":1616394885023,"results":"161","hashOfConfig":"108"},{"size":3657,"mtime":1616394831784,"results":"162","hashOfConfig":"108"},{"size":2610,"mtime":1616470320516,"results":"163","hashOfConfig":"108"},{"size":5458,"mtime":1616477908874,"results":"164","hashOfConfig":"108"},{"size":986,"mtime":1616421973718,"results":"165","hashOfConfig":"108"},{"size":2006,"mtime":1614056265112,"results":"166","hashOfConfig":"108"},{"size":849,"mtime":1610954836943,"results":"167","hashOfConfig":"108"},{"size":1922,"mtime":1616233012392,"results":"168","hashOfConfig":"108"},{"size":410,"mtime":1613529006303,"results":"169","hashOfConfig":"108"},{"size":1166,"mtime":1615870386258,"results":"170","hashOfConfig":"108"},{"size":3461,"mtime":1616322220797,"results":"171","hashOfConfig":"108"},{"size":605,"mtime":1611541951425,"results":"172","hashOfConfig":"108"},{"size":654,"mtime":1615877296950,"results":"173","hashOfConfig":"108"},{"size":2222,"mtime":1616059346692,"results":"174","hashOfConfig":"108"},{"size":1302,"mtime":1611016634488,"results":"175","hashOfConfig":"108"},{"size":2156,"mtime":1616390433201,"results":"176","hashOfConfig":"108"},{"size":193,"mtime":1610931090625,"results":"177","hashOfConfig":"108"},{"size":949,"mtime":1616421978327,"results":"178","hashOfConfig":"108"},{"size":4066,"mtime":1612503366509,"results":"179","hashOfConfig":"108"},{"size":2683,"mtime":1616310498141,"results":"180","hashOfConfig":"108"},{"size":648,"mtime":1616117735924,"results":"181","hashOfConfig":"108"},{"size":708,"mtime":1616056842816,"results":"182","hashOfConfig":"108"},{"size":879,"mtime":1616056575935,"results":"183","hashOfConfig":"108"},{"size":506,"mtime":1616059413331,"results":"184","hashOfConfig":"108"},{"size":609,"mtime":1616059442526,"results":"185","hashOfConfig":"108"},{"size":286,"mtime":1616469792219,"results":"186","hashOfConfig":"108"},{"size":2064,"mtime":1616222304031,"results":"187","hashOfConfig":"108"},{"size":410,"mtime":1616232271503,"results":"188","hashOfConfig":"108"},{"size":1516,"mtime":1616232424928,"results":"189","hashOfConfig":"108"},{"size":6483,"mtime":1616475606541,"results":"190","hashOfConfig":"108"},{"size":2911,"mtime":1616390932741,"results":"191","hashOfConfig":"108"},{"size":2438,"mtime":1616391250392,"results":"192","hashOfConfig":"108"},{"size":2823,"mtime":1616399757518,"results":"193","hashOfConfig":"108"},{"size":1987,"mtime":1616399591451,"results":"194","hashOfConfig":"108"},{"size":1881,"mtime":1616399873989,"results":"195","hashOfConfig":"108"},{"size":5679,"mtime":1616387636372,"results":"196","hashOfConfig":"108"},{"size":2299,"mtime":1616390583041,"results":"197","hashOfConfig":"108"},{"size":2661,"mtime":1616390710029,"results":"198","hashOfConfig":"108"},{"size":2778,"mtime":1616390664723,"results":"199","hashOfConfig":"108"},{"size":2414,"mtime":1616388122937,"results":"200","hashOfConfig":"108"},{"size":2564,"mtime":1616390690366,"results":"201","hashOfConfig":"108"},{"size":2055,"mtime":1616475711879,"results":"202","hashOfConfig":"108"},{"size":5685,"mtime":1616394847422,"results":"203","hashOfConfig":"108"},{"size":2402,"mtime":1616395452722,"results":"204","hashOfConfig":"108"},{"size":2505,"mtime":1616395464305,"results":"205","hashOfConfig":"108"},{"size":2470,"mtime":1616395708352,"results":"206","hashOfConfig":"108"},{"size":2484,"mtime":1616395852943,"results":"207","hashOfConfig":"108"},{"size":2438,"mtime":1616395958685,"results":"208","hashOfConfig":"108"},{"size":1904,"mtime":1616400153765,"results":"209","hashOfConfig":"108"},{"size":2307,"mtime":1616421588250,"results":"210","hashOfConfig":"108"},{"size":2499,"mtime":1616421690909,"results":"211","hashOfConfig":"108"},{"size":446,"mtime":1616033614053,"results":"212","hashOfConfig":"108"},{"size":2048,"mtime":1616477789973,"results":"213","hashOfConfig":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12xqqm0",{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"243"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"256"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"287"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"296"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"287"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"287"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"287"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"331"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"243"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"356"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"372"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"305"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"259"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"243"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"296"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"443","messages":"444","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"243"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"452","messages":"453","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"256"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\timeStat.js",["459","460","461","462","463","464","465","466"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\Peak15.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PeakHour.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js",["467"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\AvgSpeed.js",["468"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js",["469"],"import React, { useEffect, useState } from \"react\";\r\nimport { Gauge } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst AvgSpeedGauge = (props) => {\r\n\tconst { trafficData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoadingData, setLoadingData] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingData(true);\r\n\t\tparseData();\r\n\t}, [trafficData]);\r\n\r\n\tconst parseData = () => {\r\n\t\tsetData(trafficData[0][\"totalVehicleAvgSpeed\"] / 100);\r\n\t\tsetLoadingData(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tpercent: Data,\r\n\t\trange: {\r\n\t\t\tticks: [0, 1 / 3, 2 / 3, 1],\r\n\t\t\tcolor: [\"#F4664A\", \"#FAAD14\", \"#30BF78\"],\r\n\t\t},\r\n\t\tindicator: {\r\n\t\t\tpointer: { style: { stroke: \"#D0D0D0\", lineWidth: 2 } },\r\n\t\t\t// pin: { style: { stroke: '#D0D0D0', lineWidth:0.5 } },\r\n\t\t\tpin: null,\r\n\t\t},\r\n\t\taxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn Number(v) * 100;\r\n\t\t\t\t},\r\n\t\t\t\tstyle: { fontSize: 10 },\r\n\t\t\t},\r\n\t\t\t// subTickLine: { count: 3 },\r\n\t\t},\r\n\t\tstatistic: {\r\n\t\t\tcontent: {\r\n\t\t\t\tformatter: function formatter(_ref) {\r\n\t\t\t\t\treturn (_ref.percent * 100).toFixed(2) + \" km/h\";\r\n\t\t\t\t},\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfontSize: \"14px\",\r\n\t\t\t\t\tlineHeight: \"30px\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoadingData ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Gauge {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AvgSpeedGauge;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PHF.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\searchDownload\\SearchDownloadPage.js",["470","471","472"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\comVisualHalf\\ComVisualHalf.js",[],["473","474"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\singleRadio\\SingleRadio.js",["475"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\bidirectionalBar\\DayNight.js",["476"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js",["477"],"import React, { useState, useEffect } from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../redux/actions\";\r\n\r\nimport TimeTableCard from \"../../../molecules/tableCard/TimeTableCard\";\r\nimport TimeDataVisualization from \"../../../molecules/dataVisualization/TimeDataVisualization\";\r\nimport \"./style.less\";\r\n\r\nconst TimeVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcameraCode,\r\n\t\tcamLanes,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t} = props;\r\n\tconst { TabPane } = Tabs;\r\n\r\n\tconst [isLoadingTrafficTotal, setLoadingTrafficTotal] = useState(true);\r\n\r\n\tconst [totalLaneArr, setTotalLaneArr] = useState([]);\r\n\tconst [currentLaneNum, setCurrentLaneNum] = useState(\"0\");\r\n\tconst [activeVisualKey, setActiveVisualKey] = useState(\"1\");\r\n\r\n\tconst [trafficTotalData, setTrafficTotalData] = useState([]);\r\n\r\n\tconst periodURL =\r\n\t\tperiod === \"DAY\" ? \"/daily\" : period === \"WEEK\" ? \"/weekly\" : \"/monthly\";\r\n\r\n\tconst currentURL =\r\n\t\tperiod === \"DAY\"\r\n\t\t\t? `${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=time&laneNumber=${currentLaneNum}`\r\n\t\t\t: `${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=time&laneNumber=${currentLaneNum}&weekOption=ALL`;\r\n\r\n\tuseEffect(() => {\r\n\t\tvar tabLaneNum = [\"구간 전체\"];\r\n\t\tfor (let idx = 1; idx <= camLanes; idx++) {\r\n\t\t\ttabLaneNum.push(`${idx} 차선`);\r\n\t\t}\r\n\t\tsetTotalLaneArr(tabLaneNum);\r\n\t}, [camLanes]);\r\n\r\n\tuseEffect(() => {\r\n\t\taxiosAsync();\r\n\t}, [cameraCode, startDate, endTime, currentLaneNum]);\r\n\r\n\tconst axiosAsync = () => {\r\n\t\taxios\r\n\t\t\t.get(`${currentURL}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetTrafficTotalData(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetLoadingTrafficTotal(false);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction callback(key) {\r\n\t\tsetCurrentLaneNum(key);\r\n\t\tconsole.log(\"key\", key);\r\n\t}\r\n\treturn (\r\n\t\t<Tabs defaultActiveKey=\"0\" activeKey={currentLaneNum} onChange={callback}>\r\n\t\t\t{!isLoadingTrafficTotal\r\n\t\t\t\t? totalLaneArr.map((tabName, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TabPane tab={tabName} key={index.toString()}>\r\n\t\t\t\t\t\t\t\t{/* <TabPane tab=\"{tabName}\" key=\"0\"> */}\r\n\t\t\t\t\t\t\t\t<TimeDataVisualization\r\n\t\t\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\t\t\tcurrentLaneNum={currentLaneNum}\r\n\t\t\t\t\t\t\t\t\tsetCurrentLaneNum={setCurrentLaneNum}\r\n\t\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t\t\tsetActiveVisualKey={setActiveVisualKey}\r\n\t\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<TimeTableCard\r\n\t\t\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\t\t\ttableKey=\"first\"\r\n\t\t\t\t\t\t\t\t\tcurrentLaneNum={currentLaneNum}\r\n\t\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<TimeTableCard\r\n\t\t\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\t\t\ttableKey=\"overSpeed\"\r\n\t\t\t\t\t\t\t\t\tcurrentLaneNum={currentLaneNum}\r\n\t\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<TimeTableCard\r\n\t\t\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\t\t\ttableKey=\"second\"\r\n\t\t\t\t\t\t\t\t\tcurrentLaneNum={currentLaneNum}\r\n\t\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t  })\r\n\t\t\t\t: null}\r\n\t\t</Tabs>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tcamLanes: state.locationCode.camLanes,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationCodeInfo: () => {\r\n\t\t\tdispatch(actions.getLocationCode());\r\n\t\t},\r\n\t\tgetBaseURL: () => {\r\n\t\t\tdispatch(actions.getURL());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeVisualization);\r\n",["478","479"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js",["480"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\comVisualOne\\ComVisualOne.js",[],["481","482"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js",[],["483","484"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js",["485"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst PCULine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar PCUTotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 PCU parse\");\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordTime,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tlet tempTotal = {};\r\n\t\t\tconst Time = moment(recordTime).format(\"HH:mm\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehiclePassengerCarUnit;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tPCUTotalData.push(tempCar);\r\n\t\t\tPCUTotalData.push(tempBus);\r\n\t\t\tPCUTotalData.push(tempTruck);\r\n\t\t\tPCUTotalData.push(tempMotor);\r\n\t\t\tPCUTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(PCUTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\t// xAxis: { type: \"time\" },\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PCULine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\TimeDataVisualization.js",["486"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js",["487"],"import React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./redux/actions\";\n\nimport RealtimeStreamingPage from \"./components/pages/realtimeStreaming/RealtimeStreamingPage\";\nimport RealtimeStatisticPage from \"./components/pages/realtimeStatistic/RealtimeStatisticPage\";\nimport DayStatPage from \"./components/pages/statisticAnalysis/DayStatPage\";\nimport WeekStatPage from \"./components/pages/statisticAnalysis/WeekStatPage\";\nimport MonthStatPage from \"./components/pages/statisticAnalysis/MonthStatPage\";\nimport SearchDownloadPage from \"./components/pages/searchDownload/SearchDownloadPage\";\nimport DataComparisonPage from \"./components/pages/dataComparison/DataComparisonPage\";\nimport PasswordPage from \"./components/pages/account/PasswordPage\";\nimport SignupPage from \"./components/pages/account/SignupPage\";\nimport LoginPage from \"./components/pages/login/LoginPage\";\n\nconst App = (props) => {\n\tconst { isloggedIn } = props;\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t{isloggedIn ? (\n\t\t\t\t<Switch>\n\t\t\t\t\t{console.log(isloggedIn)}\n\t\t\t\t\t{/* <Route path=\"/login\" render={() => <LoginPage />} /> */}\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/realtime/streaming\"\n\t\t\t\t\t\trender={() => <RealtimeStreamingPage />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/realtime/statistic\"\n\t\t\t\t\t\trender={() => <RealtimeStatisticPage />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/statistic/day\" render={() => <DayStatPage />} />\n\t\t\t\t\t<Route path=\"/statistic/week\" render={() => <WeekStatPage />} />\n\t\t\t\t\t<Route path=\"/statistic/month\" render={() => <MonthStatPage />} />\n\t\t\t\t\t<Route path=\"/search\" render={() => <SearchDownloadPage />} />\n\t\t\t\t\t<Route path=\"/comparison\" render={() => <DataComparisonPage />} />\n\t\t\t\t\t<Route path=\"/password\" render={() => <PasswordPage />} />\n\t\t\t\t\t<Route path=\"/signup\" render={() => <SignupPage />} />\n\t\t\t\t\t<Redirect path=\"*\" to=\"/realtime/streaming\" />\n\t\t\t\t</Switch>\n\t\t\t) : (\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"*\" render={() => <LoginPage />} />\n\t\t\t\t</Switch>\n\t\t\t)}\n\t\t</BrowserRouter>\n\t);\n};\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisloggedIn: state.userInfo.isloggedIn,\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\t// getUserInfo: () => {\n\t\t// \tdispatch(actions.userInfo());\n\t\t// },\n\t};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n// export default App;\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\dataComparison\\DataComparisonPage.js",["488","489"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js",["490"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTCnt.js",["491"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTVehicleRatio.js",["492"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\overSpeed.js",["493"],"import React, { useEffect, useState } from \"react\";\r\nimport { TinyColumn } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst OverSpeedTinyColumn = (props) => {\r\n\tconst { trafficData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoadingData, setLoadingData] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingData(true);\r\n\t\tparseViolationData();\r\n\t}, [trafficData]);\r\n\r\n\tconst parseViolationData = () => {\r\n\t\tvar overSpeedData = [0, 0, 0, 0];\r\n\r\n\t\toverSpeedData[0] = trafficData[0][\"carSpdVolume\"];\r\n\t\toverSpeedData[1] = trafficData[0][\"mBusSpdVolume\"];\r\n\t\toverSpeedData[2] = trafficData[0][\"mTruckSpdVolume\"];\r\n\t\toverSpeedData[3] = trafficData[0][\"motorSpdVolume\"];\r\n\t\tsetData(overSpeedData);\r\n\t\tsetLoadingData(false);\r\n\t};\r\n\r\n\tvar customlabel = [\"승용차\", \"버스\", \"화물차\", \"오토바이\"];\r\n\r\n\tvar config = {\r\n\t\tautoFit: true,\r\n\t\tdata: Data,\r\n\t\ttooltip: {\r\n\t\t\tcustomContent: function customContent(x, data) {\r\n\t\t\t\tvar label = \"car\";\r\n\t\t\t\tvar _data$, _data$$data;\r\n\t\t\t\tif (x !== null) {\r\n\t\t\t\t\tlabel = customlabel[x];\r\n\t\t\t\t}\r\n\t\t\t\treturn label\r\n\t\t\t\t\t.concat(\": \")\r\n\t\t\t\t\t.concat(\r\n\t\t\t\t\t\t(_data$ = data[0]) === null || _data$ === void 0\r\n\t\t\t\t\t\t\t? void 0\r\n\t\t\t\t\t\t\t: (_data$$data = _data$.data) === null || _data$$data === void 0\r\n\t\t\t\t\t\t\t? void 0\r\n\t\t\t\t\t\t\t: _data$$data.y,\r\n\t\t\t\t\t\t\"대\"\r\n\t\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoadingData ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<TinyColumn {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default OverSpeedTinyColumn;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTOverSpeed.js",["494"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js",["495","496"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js",[],["497","498"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js",["499"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTPCU = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 PCU 그래프 parse\");\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tlet tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehiclePassengerCarUnit;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlegend: true,\r\n\t\tseriesField: \"key\",\r\n\t\tstepType: \"hvh\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTPCU;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js",["500"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js",["501","502"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTOverSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 시간별 과속 parse\");\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = motorSpdVolume;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tseriesField: \"key\",\r\n\t\tstepType: \"hvh\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTOverSpeed;\r\n",["503","504"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\funnelChart\\index.js",[],["505","506"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\areaChart\\index.js",[],["507","508"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js",[],["509","510"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js",["511"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTCnt.js",["512"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js",["513"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js",["514"],"import React, { useState } from \"react\";\r\nimport { Form, Input, Checkbox, Button, Modal, Alert, message } from \"antd\";\r\nimport { BankOutlined } from \"@ant-design/icons\";\r\n\r\n// import { useRecoilValue } from \"recoil\";\r\n// import { globalLocationHierarchyState } from \"../../../states/signup\";\r\n// import { SIGNUP_API_URL } from \"../../../constants\";\r\n// import axios from \"axios\";\r\n// import useClippy from \"use-clippy\";\r\nimport Cascader from \"../../atoms/cascader/Cascader\";\r\nimport AccountDescriptionForm from \"../../atoms/accountDescription/AccountDescriptionFrom\";\r\n\r\nconst formItemLayout = {\r\n\tlabelCol: {\r\n\t\txs: {\r\n\t\t\tspan: 24,\r\n\t\t},\r\n\t\tsm: {\r\n\t\t\tspan: 8,\r\n\t\t},\r\n\t},\r\n\twrapperCol: {\r\n\t\txs: {\r\n\t\t\tspan: 24,\r\n\t\t},\r\n\t\tsm: {\r\n\t\t\tspan: 16,\r\n\t\t},\r\n\t},\r\n};\r\nconst tailFormItemLayout = {\r\n\twrapperCol: {\r\n\t\txs: {\r\n\t\t\tspan: 24,\r\n\t\t\toffset: 0,\r\n\t\t},\r\n\t\tsm: {\r\n\t\t\tspan: 16,\r\n\t\t\toffset: 8,\r\n\t\t},\r\n\t},\r\n};\r\n\r\nconst SignupForm = () => {\r\n\tconst [form] = Form.useForm();\r\n\tconst [modalVisible, setModalVisible] = useState(false);\r\n\tconst [signupInfo, setSignupInfo] = useState({\r\n\t\tusername: \"\",\r\n\t\tpassword: \"\",\r\n\t\tassgined: \"\",\r\n\t\tpermission: [],\r\n\t});\r\n\t// const location = useRecoilValue(globalLocationHierarchyState);\r\n\t// const [clipboard, setClipboard] = useClippy();\r\n\r\n\tconst handleModalClose = () => {\r\n\t\tsetModalVisible(false);\r\n\t};\r\n\tconst handleCopy = () => {\r\n\t\t// setClipboard(\r\n\t\t// \t`아이디: ${signupInfo.username} 비밀번호: ${signupInfo.password}`\r\n\t\t// );\r\n\t\tmessage.success(\"클립보드에 복사되었습니다\");\r\n\t};\r\n\tconst signUp = (values) => {\r\n\t\tsetModalVisible(true);\r\n\r\n\t\t// const { affiliation, permission, signupPassword } = values;\r\n\t\t// const apiURL = SIGNUP_API_URL;\r\n\t\t// axios\r\n\t\t// \t.post(\r\n\t\t// \t\tapiURL,\r\n\t\t// \t\tJSON.stringify({\r\n\t\t// \t\t\taffiliation,\r\n\t\t// \t\t\tpermission,\r\n\t\t// \t\t\tsignupPassword,\r\n\t\t// \t\t}),\r\n\t\t// \t\t{\r\n\t\t// \t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t// \t\t}\r\n\t\t// \t)\r\n\t\t// \t.then((res) => {\r\n\t\t// \t\tconsole.log(res.data);\r\n\t\t// \t\tsetModalVisible(res.data.success);\r\n\t\t// \t\tsetSignupInfo({\r\n\t\t// \t\t\tusername: res.data.username,\r\n\t\t// \t\t\tpassword: res.data.password,\r\n\t\t// \t\t\taffiliation,\r\n\t\t// \t\t\tpermission: res.data.permission,\r\n\t\t// \t\t});\r\n\t\t// \t})\r\n\t\t// \t.catch((err) => {\r\n\t\t// \t\tsetModalVisible(false);\r\n\t\t// \t\tif (err.response.status === 401) {\r\n\t\t// \t\t\tmessage.error(\"관리자 비밀번호가 잘못되었습니다\");\r\n\t\t// \t\t}\r\n\t\t// \t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tlabelCol={formItemLayout.labelCol}\r\n\t\t\twrapperCol={formItemLayout.wrapperCol}\r\n\t\t\tform={form}\r\n\t\t\tname=\"register\"\r\n\t\t\tonFinish={signUp}\r\n\t\t\tscrollToFirstError\r\n\t\t\tsize=\"large\"\r\n\t\t>\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"affiliation\"\r\n\t\t\t\tlabel=\"소속\"\r\n\t\t\t\trules={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"발급 대상의 소속을 입력하세요.\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<Input prefix={<BankOutlined className=\"site-form-item-icon\" />} />\r\n\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"permission\"\r\n\t\t\t\tlabel=\"권한\"\r\n\t\t\t\trules={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: \"array\",\r\n\t\t\t\t\t\t// required: true,\r\n\t\t\t\t\t\trequired: false,\r\n\t\t\t\t\t\tmessage: \"발급 대상의 권한을 선택하세요.\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t{/* <Cascader disabled options={location} placeholder=\"권한을 선택하세요\" /> */}\r\n\t\t\t\t<Cascader />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"signupPassword\"\r\n\t\t\t\tlabel=\"관리자 비밀번호\"\r\n\t\t\t\trules={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"관리자 비밀번호를 입력하세요.\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<Input.Password />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"confirm\"\r\n\t\t\t\tvaluePropName=\"checked\"\r\n\t\t\t\trules={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalidator: (_, value) =>\r\n\t\t\t\t\t\t\tvalue\r\n\t\t\t\t\t\t\t\t? Promise.resolve()\r\n\t\t\t\t\t\t\t\t: Promise.reject(\"담당자임을 확인해주세요.\"),\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\twrapperCol={tailFormItemLayout.wrapperCol}\r\n\t\t\t\tstyle={{ marginBottom: 6 }}\r\n\t\t\t>\r\n\t\t\t\t<Checkbox>글로벌브릿지 담당자임을 확인합니다.</Checkbox>\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item wrapperCol={tailFormItemLayout.wrapperCol}>\r\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" size=\"large\">\r\n\t\t\t\t\t발급\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\ttitle={<Alert message=\"발급성공\" type=\"success\" showIcon />}\r\n\t\t\t\t\tvisible={modalVisible}\r\n\t\t\t\t\tclosable={false}\r\n\t\t\t\t\tfooter={\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Button key=\"copy\" type=\"default\" onClick={handleCopy}>\r\n\t\t\t\t\t\t\t\t복사\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button key=\"confirm\" type=\"primary\" onClick={handleModalClose}>\r\n\t\t\t\t\t\t\t\t확인\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonCancel={handleModalClose}\r\n\t\t\t\t>\r\n\t\t\t\t\t<AccountDescriptionForm\r\n\t\t\t\t\t\tusername={signupInfo.username}\r\n\t\t\t\t\t\tpassword={signupInfo.password}\r\n\t\t\t\t\t\taffiliation={signupInfo.affiliation}\r\n\t\t\t\t\t\tpermission={signupInfo.permission}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Form.Item>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default SignupForm;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchCollapsedTable\\SearchCollapsedTable.js",["515","516","517","518","519","520","521"],"import React, { useEffect, useState } from \"react\";\r\nimport { Collapse, Typography, Divider, Spin, message } from \"antd\";\r\nimport { EyeOutlined, DownloadOutlined } from \"@ant-design/icons\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport moment from \"moment\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nimport FirstTable from \"../../molecules/StatisticsTable/searchTable/SearchFirstTable\";\r\nimport SecondTable from \"../../molecules/StatisticsTable/searchTable/SearchSecondTable\";\r\nimport SearchOverSpeedTable from \"../../molecules/StatisticsTable/searchTable/SearchOverSpeed\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst SearchCollapsedTable = (props) => {\r\n\tconst { startDate, endTime, camera, cameraCode, baseURL, trafficURL } = props;\r\n\tconst { Panel } = Collapse;\r\n\tconst { Title } = Typography;\r\n\r\n\tconst [trafficTotalData, setTrafficTotalData] = useState([]);\r\n\tconst [isLoadingTrafficTotal, setLoadingTrafficTotal] = useState(true);\r\n\tconst [errorMsg, setMsg] = useState(false);\r\n\r\n\tconst [firstData, setFirstData] = useState([]);\r\n\tconst [secondData, setSecondData] = useState([]);\r\n\tconst [overSpeedData, setOverSpeedData] = useState([]);\r\n\r\n\tconst [isLoadingFirst, setLoadingFirst] = useState(true);\r\n\tconst [isLoadingSecond, setLoadingSecond] = useState(true);\r\n\tconst [isLoadingOverSpeed, setLoadingOverSpeed] = useState(true);\r\n\tvar firstDataTotal = [];\r\n\tvar secondDataTotal = [];\r\n\tvar OverSpeedTotalData = [];\r\n\tvar countCol;\r\n\tvar countOverSpeedCol;\r\n\r\n\tuseEffect(() => {\r\n\t\tcountCol = 0;\r\n\t\tcountOverSpeedCol = 0;\r\n\t\tsetLoadingFirst(true);\r\n\t\tsetLoadingSecond(true);\r\n\t\taxiosAsyncFS();\r\n\t\taxiosOverSpeedData();\r\n\t}, [cameraCode, startDate, endTime]);\r\n\r\n\tconst axiosAsyncFS = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${trafficURL}/daily?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=time&laneNumber=0`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetTrafficTotalData(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetMsg(false);\r\n\t\t\t\t\tres.data.some((eachData, index) => {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\trecordTime,\r\n\t\t\t\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\t\t\t\tcarVolume,\r\n\t\t\t\t\t\t\tcarAvgSpeed,\r\n\t\t\t\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\t\t\t\tcarVehicleRatio,\r\n\t\t\t\t\t\t\tcarSpdVolume,\r\n\t\t\t\t\t\t\tmBusVolume,\r\n\t\t\t\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\t\t\t\tmBusSpdVolume,\r\n\t\t\t\t\t\t\tmTruckVolume,\r\n\t\t\t\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\t\t\t\tmotorVolume,\r\n\t\t\t\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\t\t\t\tmotorSpdVolume,\r\n\t\t\t\t\t\t\tpedestrianVolume,\r\n\t\t\t\t\t\t\tjaywalkVolume,\r\n\t\t\t\t\t\t\ttotalVehicleDayNightRatio,\r\n\t\t\t\t\t\t\ttotalVehiclePeakHourFactor,\r\n\t\t\t\t\t\t\ttotalVehiclePeakHourConcentrationRatio,\r\n\t\t\t\t\t\t\ttotalVehiclePeakHourFlowRate,\r\n\t\t\t\t\t\t\tcarDayNightRatio,\r\n\t\t\t\t\t\t\tmBusDayNightRatio,\r\n\t\t\t\t\t\t\tmTruckDayNightRatio,\r\n\t\t\t\t\t\t\tmotorDayNightRatio,\r\n\t\t\t\t\t\t} = eachData;\r\n\t\t\t\t\t\tif (recordTime === \"ALL\") {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (countCol === 6) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcountCol += 1;\r\n\t\t\t\t\t\tlet firstDataTemp = {};\r\n\r\n\t\t\t\t\t\tfirstDataTemp[\"key\"] = index + 1;\r\n\t\t\t\t\t\tfirstDataTemp[\"time\"] = moment(recordTime).format(\r\n\t\t\t\t\t\t\t\"YYYY년 MM월 DD일 HH:mm:ss\"\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tfirstDataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\t\t\t\tfirstDataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\t\t\t\tfirstDataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\t\t\t\tfirstDataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\t\t\t\tfirstDataTemp[\"carCount\"] = carVolume;\r\n\t\t\t\t\t\tfirstDataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\t\t\t\tfirstDataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\t\t\t\tfirstDataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\t\t\t\tfirstDataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\t\t\t\tfirstDataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\t\t\t\tfirstDataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\t\t\t\tfirstDataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\t\t\t\tfirstDataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\t\t\t\tfirstDataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\t\t\t\tfirstDataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\t\t\t\tfirstDataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\t\t\t\tfirstDataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\t\t\t\tfirstDataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\t\t\t\tfirstDataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\t\t\t\tfirstDataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\t\t\t\tfirstDataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\t\t\t\tfirstDataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\t\t\t\tfirstDataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\t\t\t\tfirstDataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\t\t\t\tfirstDataTemp[\"person\"] = pedestrianVolume;\r\n\t\t\t\t\t\tfirstDataTemp[\"jaywalk\"] = jaywalkVolume;\r\n\r\n\t\t\t\t\t\tfirstDataTotal.push(firstDataTemp);\r\n\r\n\t\t\t\t\t\tlet secondDataTemp = {};\r\n\t\t\t\t\t\tsecondDataTemp[\"key\"] = index + 1;\r\n\t\t\t\t\t\tsecondDataTemp[\"time\"] = moment(recordTime).format(\r\n\t\t\t\t\t\t\t\"YYYY년 MM월 DD일 HH:mm:ss\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tsecondDataTemp[\"totalDayNightRatio\"] = totalVehicleDayNightRatio;\r\n\t\t\t\t\t\tsecondDataTemp[\"totalPHF\"] = totalVehiclePeakHourFactor;\r\n\t\t\t\t\t\tsecondDataTemp[\"totalPeekHourCnt\"] = totalVehiclePeakHourFlowRate;\r\n\t\t\t\t\t\tsecondDataTemp[\r\n\t\t\t\t\t\t\t\"totalVehiclePeakHourConcentrationRatio\"\r\n\t\t\t\t\t\t] = totalVehiclePeakHourConcentrationRatio;\r\n\r\n\t\t\t\t\t\tsecondDataTemp[\"carDayNightRatio\"] = carDayNightRatio;\r\n\t\t\t\t\t\tsecondDataTemp[\"busDayNightRatio\"] = mBusDayNightRatio;\r\n\t\t\t\t\t\tsecondDataTemp[\"truckDayNightRatio\"] = mTruckDayNightRatio;\r\n\t\t\t\t\t\tsecondDataTemp[\"motorDayNightRatio\"] = motorDayNightRatio;\r\n\t\t\t\t\t\tsecondDataTotal.push(secondDataTemp);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetFirstData(firstDataTotal);\r\n\t\t\t\t\tsetSecondData(secondDataTotal);\r\n\t\t\t\t\tsetLoadingFirst(false);\r\n\t\t\t\t\tsetLoadingSecond(false);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tsetMsg(true);\r\n\t\t\t\tmessage.error(\"최대 31일 조회 가능합니다\");\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\tconst axiosOverSpeedData = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}/violations/speeding/records?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&limit=0&offset=0`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"count search overspeed axios\");\r\n\t\t\t\tres.data.some((eachData, index) => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\trecordTime,\r\n\t\t\t\t\t\tvehicleType,\r\n\t\t\t\t\t\tlicenseNumber,\r\n\t\t\t\t\t\tspeed,\r\n\t\t\t\t\t\timageLink,\r\n\t\t\t\t\t} = eachData;\r\n\t\t\t\t\tif (countOverSpeedCol === 5) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcountOverSpeedCol += 1;\r\n\r\n\t\t\t\t\tlet overSpeedDataTemp = {};\r\n\t\t\t\t\toverSpeedDataTemp[\"key\"] = index;\r\n\t\t\t\t\toverSpeedDataTemp[\"time\"] = moment(recordTime).format(\r\n\t\t\t\t\t\t\"YYYY년 MM월 DD일 HH:mm:ss\"\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\toverSpeedDataTemp[\"vehicleType\"] = vehicleType;\r\n\t\t\t\t\toverSpeedDataTemp[\"licenseNumber\"] = licenseNumber;\r\n\t\t\t\t\toverSpeedDataTemp[\"speed\"] = speed;\r\n\t\t\t\t\toverSpeedDataTemp[\"imageLink\"] = imageLink;\r\n\t\t\t\t\tOverSpeedTotalData.push(overSpeedDataTemp);\r\n\t\t\t\t});\r\n\t\t\t\tsetOverSpeedData(OverSpeedTotalData);\r\n\t\t\t\tsetLoadingOverSpeed(false);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst collapseHeaderFirst = (\r\n\t\t<div className=\"table-collapse-header\">\r\n\t\t\t1차 데이터\r\n\t\t\t<Divider type=\"vertical\" />\r\n\t\t\t{moment(startDate).format(\"LL\")} ~ {moment(endTime).format(\"LL\")}\r\n\t\t\t<Divider type=\"vertical\" />\r\n\t\t\t전체 및 특정 차선 데이터 <Divider type=\"vertical\" />\r\n\t\t\t15분 단위\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst collapseHeaderSecond = (\r\n\t\t<div className=\"table-collapse-header\">\r\n\t\t\t2차 데이터\r\n\t\t\t<Divider type=\"vertical\" />\r\n\t\t\t{moment(startDate).format(\"LL\")} ~ {moment(endTime).format(\"LL\")}\r\n\t\t\t<Divider type=\"vertical\" />\r\n\t\t\t전체 데이터 <Divider type=\"vertical\" />\r\n\t\t\t하루 단위\r\n\t\t</div>\r\n\t);\r\n\tconst collapseHeaderOverSpeed = (\r\n\t\t<div className=\"table-collapse-header\">\r\n\t\t\t과속 데이터\r\n\t\t\t<Divider type=\"vertical\" />\r\n\t\t\t{moment(startDate).format(\"LL\")} ~ {moment(endTime).format(\"LL\")}\r\n\t\t\t<Divider type=\"vertical\" />\r\n\t\t\t전체 데이터\r\n\t\t</div>\r\n\t);\r\n\tconst genExtra = (tableIdx) => (\r\n\t\t<div\r\n\t\t\tonClick={(event) => {\r\n\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\tconsole.log(tableIdx);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{tableIdx === \"FIRST\" ? (\r\n\t\t\t\t<CSVLink data={firstData}>\r\n\t\t\t\t\t{console.log(firstData)}\r\n\t\t\t\t\t<DownloadOutlined />\r\n\t\t\t\t\t다운로드\r\n\t\t\t\t</CSVLink>\r\n\t\t\t) : tableIdx === \"SECOND\" ? (\r\n\t\t\t\t<CSVLink data={secondData}>\r\n\t\t\t\t\t{console.log(secondData)}\r\n\t\t\t\t\t<DownloadOutlined />\r\n\t\t\t\t\t다운로드\r\n\t\t\t\t</CSVLink>\r\n\t\t\t) : (\r\n\t\t\t\t<CSVLink data={overSpeedData}>\r\n\t\t\t\t\t{console.log(overSpeedData)}\r\n\t\t\t\t\t<DownloadOutlined />\r\n\t\t\t\t\t다운로드\r\n\t\t\t\t</CSVLink>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{errorMsg ? null : (\r\n\t\t\t\t<div className=\"table-collapse\">\r\n\t\t\t\t\t<Title level={5} style={{ marginTop: 10 }}>\r\n\t\t\t\t\t\t{camera} 데이터 조회 결과\r\n\t\t\t\t\t</Title>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t{isLoadingSecond ? (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\taccordion\r\n\t\t\t\t\t\t\t\texpandIconPosition=\"right\"\r\n\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t// <EyeOutlined style={{ fontSize: 16, marginTop: -2 }} />\r\n\t\t\t\t\t\t\t\t\t<div style={{ fontSize: 14, marginTop: -2 }}>\r\n\t\t\t\t\t\t\t\t\t\t<EyeOutlined />\r\n\t\t\t\t\t\t\t\t\t\t미리보기\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={collapseHeaderFirst}\r\n\t\t\t\t\t\t\t\t\tkey=\"1\"\r\n\t\t\t\t\t\t\t\t\textra={genExtra(\"FIRST\")}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t데이터 형식 미리보기 (5줄까지)\r\n\t\t\t\t\t\t\t\t\t{isLoadingFirst ? (\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<FirstTable firstData={firstData} />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={collapseHeaderSecond}\r\n\t\t\t\t\t\t\t\t\tkey=\"2\"\r\n\t\t\t\t\t\t\t\t\textra={genExtra(\"SECOND\")}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t데이터 형식 미리보기 (5줄까지)\r\n\t\t\t\t\t\t\t\t\t{isLoadingSecond ? (\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<SecondTable secondData={secondData} />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={collapseHeaderOverSpeed}\r\n\t\t\t\t\t\t\t\t\tkey=\"3\"\r\n\t\t\t\t\t\t\t\t\textra={genExtra(\"OVERSPEED\")}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t데이터 형식 미리보기 (5줄까지)\r\n\t\t\t\t\t\t\t\t\t{isLoadingOverSpeed ? (\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<SearchOverSpeedTable overSpeedData={overSpeedData} />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tcamera: state.location.camera,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationCodeInfo: () => {\r\n\t\t\tdispatch(actions.getLocationCode());\r\n\t\t},\r\n\t\tgetBaseURL: () => {\r\n\t\t\tdispatch(actions.getURL());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(SearchCollapsedTable);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\TimeTableCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\LaneTableCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTFirstTable.js",["522"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\n// import axios from \"axios\";\r\n// import { connect } from \"react-redux\";\r\n// import * as actions from \"../../../../redux/actions\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst DTFisrtTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tvar FristRow;\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tFristRow = true;\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tvar columns;\r\n\tif (currentLaneNum === 0) {\r\n\t\tcolumns = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"시간\",\r\n\t\t\t\tdataIndex: \"time\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"전체\",\r\n\t\t\t\tdataIndex: \"Total\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"버스\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"보행자\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"수(명)\",\r\n\t\t\t\t\t\tdataIndex: \"person\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"무단횡단(명)\",\r\n\t\t\t\t\t\tdataIndex: \"jaywalk\",\r\n\t\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t];\r\n\t} else {\r\n\t\tcolumns = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"시간\",\r\n\t\t\t\tdataIndex: \"time\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"전체\",\r\n\t\t\t\tdataIndex: \"Total\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"버스\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t];\r\n\t}\r\n\r\n\tconst axiosData = () => {\r\n\t\tconsole.log(\"count table axios\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordTime,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t\tpedestrianVolume,\r\n\t\t\t\tjaywalkVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (FristRow) {\r\n\t\t\t\tdataTemp[\"time\"] = \"전체\";\r\n\t\t\t\tFristRow = false;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tif (currentLaneNum === 0) {\r\n\t\t\t\tdataTemp[\"person\"] = pedestrianVolume;\r\n\t\t\t\tdataTemp[\"jaywalk\"] = jaywalkVolume;\r\n\t\t\t}\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{Data.length === 0 ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default DTFisrtTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js",["523"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst DLFisrtTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar FristRow;\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tFristRow = true;\r\n\t\tsetLoading(true);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"lane\",\r\n\t\t\twidth: 60,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\tconsole.log(\"count 일간 차선별 1차데이블 parse\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (FristRow) {\r\n\t\t\t\tdataTemp[\"lane\"] = \"전체\";\r\n\t\t\t\tFristRow = false;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"lane\"] = `${laneNumber} 차선`;\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default DLFisrtTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js",["524","525"],"import React, { useEffect, useState } from \"react\";\r\nimport { Layout, message } from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport RealtimeStatUpper from \"../../organisms/realtimeStatUpper/RealtimeStatUpper\";\r\nimport StatContainer from \"../../organisms/videoContainer/StatContainer\";\r\nimport GeneralVisualization from \"../../organisms/generalVisualization/GeneralVisualization\";\r\nimport TimeTableCard from \"../../molecules/tableCard/TimeTableCard\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst RealtimeStatisticPage = (props) => {\r\n\tconst { camAddress, camera, cameraCode, baseURL, trafficURL } = props;\r\n\tconst { Content } = Layout;\r\n\r\n\tconst [trafficTotalData, setTrafficTotalData] = useState([]);\r\n\r\n\tconst [currTime, setCurrTime] = useState(moment(new Date()));\r\n\tconst [refresh, setRefresh] = useState(false);\r\n\t// const date = moment(new Date()).format(\"YYYY-MM-DD\");\r\n\t// const date = moment(\"2020-03-11 00:00:00\").format(\"YYYY-MM-DD\");\r\n\tconst date = \"2021-03-16\";\r\n\r\n\tvar cameraAddress = \"\";\r\n\tvar camName = \"\";\r\n\tif (camAddress.length === 0 || camera.length === 0) {\r\n\t\tcameraAddress =\r\n\t\t\t\"https://globalbridge.synology.me:4000/m3u8VideoStream.m3u8\";\r\n\t\tcamName = \"수인사거리-1 [하행]\";\r\n\t} else {\r\n\t\tcameraAddress = camAddress;\r\n\t\tcamName = camera;\r\n\t}\r\n\tvar camCode = cameraCode.length === 0 ? \"0001\" : cameraCode;\r\n\t// var camCode = cameraCode.length === 0 ? \"0004\" : cameraCode;\r\n\tvar currTimeStr = currTime.format(\"HH:mm:ss\");\r\n\t// console.log(typeof currTimeStr);\r\n\tuseEffect(() => {\r\n\t\taxiosAsync();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"refresh\", refresh);\r\n\t\tif (refresh) {\r\n\t\t\taxiosAsync();\r\n\t\t}\r\n\t}, [refresh]);\r\n\r\n\tconst axiosAsync = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${trafficURL}/daily?camCode=${camCode}&startDate=${date}&endTime=${date} ${currTimeStr}&axis=time&laneNumber=0`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetTrafficTotalData(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tmessage.success(\"Refresh 성공\");\r\n\t\t\t\tsetRefresh(false);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"realtime-statistic-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<RealtimeStatUpper\r\n\t\t\t\t\t\t\tcurrTime={currTime}\r\n\t\t\t\t\t\t\tsetCurrTime={setCurrTime}\r\n\t\t\t\t\t\t\tsetRefresh={setRefresh}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"realtime-statistic-video-and-graph\">\r\n\t\t\t\t\t\t\t<StatContainer camName={camName} httpAddress={cameraAddress} />\r\n\t\t\t\t\t\t\t<div className=\"realtime-statistic-graph\">\r\n\t\t\t\t\t\t\t\t<GeneralVisualization\r\n\t\t\t\t\t\t\t\t\tpage=\"REALSTATISTIC\"\r\n\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\tstartDate={date}\r\n\t\t\t\t\t\t\t\t\tendTime={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currTimeStr}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TimeTableCard\r\n\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\tpage=\"REALSTATISTIC\"\r\n\t\t\t\t\t\t\ttableKey=\"first\"\r\n\t\t\t\t\t\t\tcurrentLaneNum=\"0\"\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\tstartDate={date}\r\n\t\t\t\t\t\t\tendTime={date}\r\n\t\t\t\t\t\t\tcurrentTime={currTime}\r\n\t\t\t\t\t\t\tinterval=\"15M\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcamAddress: state.locationCode.camAddress,\r\n\t\tcamera: state.location.camera,\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationInfo: () => {\r\n\t\t\tdispatch(actions.getLocation());\r\n\t\t},\r\n\t\tgetLocationCodeInfo: () => {\r\n\t\t\tdispatch(actions.getLocationCode());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(RealtimeStatisticPage);\r\n",["526","527"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchResultTab\\SearchResultTab.js",["528","529","530","531"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTSecondTable.js",["532"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js",["533"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js",["534"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst WTSecondTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentLaneNum === 0) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseData();\r\n\t\t}\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t\tkey: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tkey: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"totalDayNightRatio\",\r\n\t\t\t\t\tkey: \"totalNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"totalPHF\",\r\n\t\t\t\t\tkey: \"totalPHF\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"totalPeekHourCnt\",\r\n\t\t\t\t\tkey: \"totalPeekHourCnt\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"집중률\",\r\n\t\t\t\t\tdataIndex: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t\tkey: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tkey: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"carDayNightRatio\",\r\n\t\t\t\t\tkey: \"carNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tkey: \"bus\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"busDayNightRatio\",\r\n\t\t\t\t\tkey: \"busNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tkey: \"truck\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"truckDayNightRatio\",\r\n\t\t\t\t\tkey: \"truckNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tkey: \"motor\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"motorDayNightRatio\",\r\n\t\t\t\t\tkey: \"motorNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\tconst parseData = () => {\r\n\t\tconsole.log(\"count table axios\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\ttotalVehicleDayNightRatio,\r\n\t\t\t\ttotalVehiclePeakHourFactor,\r\n\t\t\t\ttotalVehiclePeakHourConcentrationRatio,\r\n\t\t\t\ttotalVehiclePeakHourFlowRate,\r\n\t\t\t\tcarDayNightRatio,\r\n\t\t\t\tmBusDayNightRatio,\r\n\t\t\t\tmTruckDayNightRatio,\r\n\t\t\t\tmotorDayNightRatio,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tdataTemp[\"time\"] = WeekKey[weekOption];\r\n\t\t\tdataTemp[\"totalDayNightRatio\"] = totalVehicleDayNightRatio;\r\n\t\t\tdataTemp[\"totalPHF\"] = totalVehiclePeakHourFactor;\r\n\t\t\tdataTemp[\"totalPeekHourCnt\"] = totalVehiclePeakHourFlowRate;\r\n\t\t\tdataTemp[\r\n\t\t\t\t\"totalVehiclePeakHourConcentrationRatio\"\r\n\t\t\t] = totalVehiclePeakHourConcentrationRatio;\r\n\r\n\t\t\tdataTemp[\"carDayNightRatio\"] = carDayNightRatio;\r\n\t\t\tdataTemp[\"busDayNightRatio\"] = mBusDayNightRatio;\r\n\t\t\tdataTemp[\"truckDayNightRatio\"] = mTruckDayNightRatio;\r\n\t\t\tdataTemp[\"motorDayNightRatio\"] = motorDayNightRatio;\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTSecondTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js",["535"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js",["536"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst MTSecondTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tvar TotalData = [];\r\n\r\n\tvar countCol;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentLaneNum === 0) {\r\n\t\t\tcountCol = 0;\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseData();\r\n\t\t}\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"totalDayNightRatio\",\r\n\t\t\t\t\tkey: \"totalNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"totalPHF\",\r\n\t\t\t\t\tkey: \"totalPHF\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"totalPeekHourCnt\",\r\n\t\t\t\t\tkey: \"totalPeekHourCnt\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"집중률\",\r\n\t\t\t\t\tdataIndex: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t\tkey: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tkey: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"carDayNightRatio\",\r\n\t\t\t\t\tkey: \"carNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tkey: \"bus\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"busDayNightRatio\",\r\n\t\t\t\t\tkey: \"busNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tkey: \"truck\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"truckDayNightRatio\",\r\n\t\t\t\t\tkey: \"truckNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tkey: \"motor\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"motorDayNightRatio\",\r\n\t\t\t\t\tkey: \"motorNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\tconst parseData = () => {\r\n\t\tconsole.log(\"count table axios\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordTime,\r\n\t\t\t\ttotalVehicleDayNightRatio,\r\n\t\t\t\ttotalVehiclePeakHourFactor,\r\n\t\t\t\ttotalVehiclePeakHourConcentrationRatio,\r\n\t\t\t\ttotalVehiclePeakHourFlowRate,\r\n\t\t\t\tcarDayNightRatio,\r\n\t\t\t\tmBusDayNightRatio,\r\n\t\t\t\tmTruckDayNightRatio,\r\n\t\t\t\tmotorDayNightRatio,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (countCol < 3) {\r\n\t\t\t\tif (countCol === 0) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"월간전체\";\r\n\t\t\t\t} else if (countCol === 1) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"평일전체\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"주말전체\";\r\n\t\t\t\t}\r\n\t\t\t\tcountCol += 1;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"time\"] = moment(recordTime).format(\"YYYY년 MM월 DD일\");\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalDayNightRatio\"] = totalVehicleDayNightRatio;\r\n\t\t\tdataTemp[\"totalPHF\"] = totalVehiclePeakHourFactor;\r\n\t\t\tdataTemp[\"totalPeekHourCnt\"] = totalVehiclePeakHourFlowRate;\r\n\t\t\tdataTemp[\r\n\t\t\t\t\"totalVehiclePeakHourConcentrationRatio\"\r\n\t\t\t] = totalVehiclePeakHourConcentrationRatio;\r\n\r\n\t\t\tdataTemp[\"carDayNightRatio\"] = carDayNightRatio;\r\n\t\t\tdataTemp[\"busDayNightRatio\"] = mBusDayNightRatio;\r\n\t\t\tdataTemp[\"truckDayNightRatio\"] = mTruckDayNightRatio;\r\n\t\t\tdataTemp[\"motorDayNightRatio\"] = motorDayNightRatio;\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MTSecondTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js",["537","538"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\PasswordPage.js",["539"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchComparison\\SearchComparison.js",[],["540","541"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\slideBarChart\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js",["542"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\accountDescription\\AccountDescriptionFrom.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js",["543"],"import React, { useState } from \"react\";\r\nimport { Radio, Typography } from \"antd\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst TimeFilter = (props) => {\r\n\tconst { value, setValue } = props;\r\n\tconst { Text } = Typography;\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetValue(e.target.value);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"multi-radio-body\">\r\n\t\t\t<Text strong style={{ marginRight: 10, minWidth: 60 }}>\r\n\t\t\t\t선택사항\r\n\t\t\t</Text>\r\n\t\t\t<Radio.Group onChange={onChange} value={value}>\r\n\t\t\t\t<Radio value=\"ALL\">전체</Radio>\r\n\t\t\t\t<Radio value=\"DAY\">평일</Radio>\r\n\t\t\t\t<Radio value=\"END\">주말</Radio>\r\n\t\t\t</Radio.Group>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TimeFilter;\r\n",["544","545"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\pieChart\\index.js",["546","547"],"import React, { useEffect } from \"react\";\r\nimport { Pie } from \"@ant-design/charts\";\r\nconst DemoPie = () => {\r\n\tlet ref;\r\n\tvar data = [\r\n\t\t{\r\n\t\t\ttype: \"分类一\",\r\n\t\t\tvalue: 27,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: \"分类二\",\r\n\t\t\tvalue: 25,\r\n\t\t},\r\n\t\t// {\r\n\t\t// \ttype: \"分类三\",\r\n\t\t// \tvalue: 18,\r\n\t\t// },\r\n\t\t// {\r\n\t\t// \ttype: \"分类四\",\r\n\t\t// \tvalue: 15,\r\n\t\t// },\r\n\t\t// {\r\n\t\t// \ttype: \"分类五\",\r\n\t\t// \tvalue: 10,\r\n\t\t// },\r\n\t\t// {\r\n\t\t// \ttype: \"其他\",\r\n\t\t// \tvalue: 5,\r\n\t\t// },\r\n\t];\r\n\tvar config = {\r\n\t\tappendPadding: 10,\r\n\t\tdata: data,\r\n\t\tangleField: \"value\",\r\n\t\tcolorField: \"type\",\r\n\t\tradius: 0.6,\r\n\t\tlegend: false,\r\n\t\tlabel: {\r\n\t\t\ttype: \"inner\",\r\n\t\t\toffset: \"-30%\",\r\n\t\t\tcontent: \"{name}\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfontSize: 12,\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tstate: {\r\n\t\t\tactive: {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tlineWidth: 0,\r\n\t\t\t\t\tfillOpacity: 0.65,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tinteractions: [{ type: \"element-selected\" }, { type: \"element-active\" }],\r\n\t};\r\n\t// useEffect(() => {\r\n\t// \tif (ref) {\r\n\t// \t\tref.setState(\"active\", (data) => data.type === \"分类一\");\r\n\t// \t\tref.setState(\r\n\t// \t\t\t\"selected\",\r\n\t// \t\t\t(data) => data.type === \"分类一\" || data.type === \"分类二\"\r\n\t// \t\t);\r\n\t// \t}\r\n\t// }, []);\r\n\treturn <Pie {...config} chartRef={(chartRef) => (ref = chartRef)} />;\r\n};\r\nexport default DemoPie;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\comVisualization\\ComVisualization.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js",["548"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js",["549","550","551"],"import React from \"react\";\r\n// import axios from \"axios\";\r\nimport { Form, Input, message, Button } from \"antd\";\r\nimport { BankOutlined, UserOutlined } from \"@ant-design/icons\";\r\n\r\nimport Cascader from \"../../atoms/cascader/Cascader\";\r\n\r\n// import { useRecoilValue, useSetRecoilState } from \"recoil\";\r\n// import { isLoginState } from \"../../../states/app\";\r\n// import { userInfoState } from \"../../../states/ui\";\r\n// import { CHANGE_PASSWORD_API_URL } from \"../../../constants/url\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst formItemLayout = {\r\n\tlabelCol: {\r\n\t\txs: {\r\n\t\t\tspan: 24,\r\n\t\t},\r\n\t\tsm: {\r\n\t\t\tspan: 8,\r\n\t\t},\r\n\t},\r\n\twrapperCol: {\r\n\t\txs: {\r\n\t\t\tspan: 24,\r\n\t\t},\r\n\t\tsm: {\r\n\t\t\tspan: 16,\r\n\t\t},\r\n\t},\r\n};\r\nconst tailFormItemLayout = {\r\n\twrapperCol: {\r\n\t\txs: {\r\n\t\t\tspan: 24,\r\n\t\t\toffset: 0,\r\n\t\t},\r\n\t\tsm: {\r\n\t\t\tspan: 16,\r\n\t\t\toffset: 8,\r\n\t\t},\r\n\t},\r\n};\r\n\r\nconst PasswordForm = () => {\r\n\tconst [form] = Form.useForm();\r\n\t// const { username, affiliation, permission } = useRecoilValue(userInfoState);\r\n\t// const setIsLoggedIn = useSetRecoilState(isLoginState);\r\n\r\n\tconst changePassword = (values) => {\r\n\t\t// console.log('Received values of form: ', values);\r\n\t\tconst { oldPassword, newPassword } = values;\r\n\r\n\t\t// axios\r\n\t\t// \t.post(\r\n\t\t// \t\tCHANGE_PASSWORD_API_URL,\r\n\t\t// \t\tJSON.stringify({\r\n\t\t// \t\t\tusername,\r\n\t\t// \t\t\toldPassword,\r\n\t\t// \t\t\tnewPassword,\r\n\t\t// \t\t}),\r\n\t\t// \t\t{ headers: { \"Content-Type\": \"application/json\" } }\r\n\t\t// \t)\r\n\t\t// \t.then((res) => {\r\n\t\t// \t\tif (res.status === 200) {\r\n\t\t// \t\t\tmessage.success(res.data.message);\r\n\t\t// \t\t\tsetIsLoggedIn(false);\r\n\t\t// \t\t}\r\n\t\t// \t\t// redirect\r\n\t\t// \t})\r\n\t\t// \t.catch((err) => {\r\n\t\t// \t\tif (err.response.status === 401) {\r\n\t\t// \t\t\tmessage.error(err.response.data.message);\r\n\t\t// \t\t} else {\r\n\t\t// \t\t\tmessage.error(\"Unknown error\");\r\n\t\t// \t\t}\r\n\t\t// \t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\t{...formItemLayout}\r\n\t\t\tform={form}\r\n\t\t\tname=\"register\"\r\n\t\t\tonFinish={changePassword}\r\n\t\t\tinitialValues={{\r\n\t\t\t\tregion: [\"인천광역시\", \"중구\", \"수인사거리\"],\r\n\t\t\t}}\r\n\t\t\tscrollToFirstError\r\n\t\t\tsize=\"large\"\r\n\t\t>\r\n\t\t\t<Form.Item name=\"username\" label=\"계정\" initialValue=\"username\">\r\n\t\t\t\t<Input\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t\tprefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item name=\"affiliation\" label=\"소속\" initialValue=\"affiliation\">\r\n\t\t\t\t<Input\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t\tprefix={<BankOutlined className=\"site-form-item-icon\" />}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item name=\"permission\" label=\"권한\" initialValue=\"permission\">\r\n\t\t\t\t<Cascader />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"oldPassword\"\r\n\t\t\t\tlabel=\"현재 비밀번호\"\r\n\t\t\t\trules={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"현재 비밀번호를 입력하세요\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\thasFeedback\r\n\t\t\t>\r\n\t\t\t\t<Input.Password />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"newPassword\"\r\n\t\t\t\tlabel=\"새 비밀번호\"\r\n\t\t\t\trules={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"새 비밀번호를 입력하세요\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\thasFeedback\r\n\t\t\t>\r\n\t\t\t\t<Input.Password />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"confirm\"\r\n\t\t\t\tlabel=\"비밀번호 확인\"\r\n\t\t\t\tdependencies={[\"password\"]}\r\n\t\t\t\thasFeedback\r\n\t\t\t\trules={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"새 비밀번호를 다시 한번 입력하세요\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t({ getFieldValue }) => ({\r\n\t\t\t\t\t\tvalidator(rule, value) {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t!value ||\r\n\t\t\t\t\t\t\t\t(getFieldValue(\"newPassword\") === value &&\r\n\t\t\t\t\t\t\t\t\tgetFieldValue(\"oldPassword\") !== value)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (getFieldValue(\"newPassword\") !== value) {\r\n\t\t\t\t\t\t\t\treturn Promise.reject(\"비밀번호 확인이 올바르지 않습니다\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn Promise.reject(\r\n\t\t\t\t\t\t\t\t\"현재 비밀번호와 다른 비밀번호를 입력해주세요\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}),\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<Input.Password />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item {...tailFormItemLayout}>\r\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\t\t확인\r\n\t\t\t\t</Button>\r\n\t\t\t</Form.Item>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default PasswordForm;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js",["552"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\store\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\login\\LoginPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\userInfo.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js",["553"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StatContainer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StreamingContainer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js",["554"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTVehicleRatio.js",["555"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\dashLineChart\\DayPedestrians.js",["556"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\dashLineChart\\WeekPedestrians.js",["557"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTConcentrationRatio.js",["558"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTPHF.js",["559"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js",["560"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js",["561"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst AvgSpeedLine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar avgSpeedTotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 차선별 평균속도 parse\");\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\r\n\t\t\ttempCar[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\tavgSpeedTotalData.push(tempCar);\r\n\t\t\tavgSpeedTotalData.push(tempBus);\r\n\t\t\tavgSpeedTotalData.push(tempTruck);\r\n\t\t\tavgSpeedTotalData.push(tempMotor);\r\n\t\t});\r\n\t\tsetData(avgSpeedTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"lane\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default AvgSpeedLine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js",["562","563"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport { act } from \"react-dom/cjs/react-dom-test-utils.production.min\";\r\n\r\nconst OverSpeedCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar cntCar = [];\r\n\tvar cntBus = [];\r\n\tvar cntTruck = [];\r\n\tvar cntMotor = [];\r\n\tvar cntTotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 차선별 과속 parse\");\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\r\n\t\t\ttempCar[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\t\t\tcntCar.push(tempCar);\r\n\t\t\tcntBus.push(tempBus);\r\n\t\t\tcntTruck.push(tempTruck);\r\n\t\t\tcntMotor.push(tempMotor);\r\n\t\t});\r\n\t\tcntTotalData = cntCar.concat(cntBus.concat(cntTruck.concat(cntMotor)));\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"laneNum\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default OverSpeedCnt;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleRatio.js",["564"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js",["565"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleCnt.js",["566"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MLFirstTable.js",["567"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTCnt.js",["568"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTPCU.js",["569"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTVehicleRatio.js",["570"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTAvgSpeed.js",["571"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js",["572"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WMFlowRate.js",["573"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst WMFlowRate = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"8\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 시간별 PHF parse\");\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehiclePeakHourFlowRate,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tconst temp = {};\r\n\t\t\tif (weekOption) {\r\n\t\t\t\ttemp[\"type\"] = WeekKey[weekOption];\r\n\t\t\t}\r\n\t\t\tif (recordDate) {\r\n\t\t\t\ttemp[\"type\"] = moment(recordDate).format(\"MM-DD\");\r\n\t\t\t}\r\n\t\t\ttemp[\"value\"] = totalVehiclePeakHourFlowRate;\r\n\r\n\t\t\tTotalData.push(temp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"type\",\r\n\t\tyField: \"value\",\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfill: \"#FFFFFF\",\r\n\t\t\t\topacity: 0.6,\r\n\t\t\t},\r\n\t\t},\r\n\t\tmeta: {\r\n\t\t\ttype: { alias: \"요일\" },\r\n\t\t\tvalue: { alias: \"첨두유율\" },\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WMFlowRate;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MonthPeakTime.js",["574"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WeekPeakTime.js",["575","576"],"import React, { useEffect, useState } from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport moment from \"moment\";\r\n\r\nconst WeekPeakTime = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"7\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseTotalData();\r\n\t\t\tconsole.log(trafficTotalData);\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tvar TotalData = [];\r\n\r\n\tconst parseTotalData = () => {\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst { weekOption, totalVehiclePeak15MinuteTime } = TrafficData;\r\n\t\t\tlet temp = {};\r\n\t\t\ttemp[\"date\"] = WeekKey[weekOption];\r\n\t\t\ttemp[\"value\"] = new Date(totalVehiclePeak15MinuteTime).getHours();\r\n\t\t\ttemp[\"test\"] = new Date(totalVehiclePeak15MinuteTime).getMinutes();\r\n\t\t\tTotalData.push(temp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"date\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: false,\r\n\r\n\t\tlabel: {\r\n\t\t\tformatter: function formatter(v) {\r\n\t\t\t\tlet timeStr = v[\"value\"] + \":\" + v[\"test\"];\r\n\t\t\t\treturn \"\"\r\n\t\t\t\t\t.concat(timeStr)\r\n\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t},\r\n\t\tpoint: {\r\n\t\t\tsize: 5,\r\n\t\t\tshape: \"diamond\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfill: \"white\",\r\n\t\t\t\tstroke: \"#5B8FF9\",\r\n\t\t\t\tlineWidth: 2,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: false,\r\n\r\n\t\tstate: {\r\n\t\t\tactive: {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tshadowColor: \"yellow\",\r\n\t\t\t\t\tshadowBlur: 4,\r\n\t\t\t\t\tstroke: \"transparent\",\r\n\t\t\t\t\tfill: \"red\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\ttheme: {\r\n\t\t\tgeometries: {\r\n\t\t\t\tpoint: {\r\n\t\t\t\t\tdiamond: {\r\n\t\t\t\t\t\tactive: {\r\n\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\tshadowColor: \"#FCEBB9\",\r\n\t\t\t\t\t\t\t\tshadowBlur: 2,\r\n\t\t\t\t\t\t\t\tstroke: \"#F6BD16\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tinteractions: [{ type: \"marker-active\" }],\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WeekPeakTime;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\location.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js",[],{"ruleId":"577","severity":1,"message":"578","line":17,"column":3,"nodeType":"579","messageId":"580","endLine":17,"endColumn":11},{"ruleId":"577","severity":1,"message":"581","line":18,"column":3,"nodeType":"579","messageId":"580","endLine":18,"endColumn":13},{"ruleId":"577","severity":1,"message":"582","line":26,"column":9,"nodeType":"579","messageId":"580","endLine":26,"endColumn":26},{"ruleId":"577","severity":1,"message":"583","line":27,"column":9,"nodeType":"579","messageId":"580","endLine":27,"endColumn":27},{"ruleId":"577","severity":1,"message":"584","line":27,"column":29,"nodeType":"579","messageId":"580","endLine":27,"endColumn":48},{"ruleId":"577","severity":1,"message":"585","line":39,"column":24,"nodeType":"579","messageId":"580","endLine":39,"endColumn":40},{"ruleId":"577","severity":1,"message":"586","line":57,"column":8,"nodeType":"579","messageId":"580","endLine":57,"endColumn":20},{"ruleId":"587","severity":1,"message":"588","line":69,"column":5,"nodeType":"589","endLine":69,"endColumn":7,"suggestions":"590"},{"ruleId":"587","severity":1,"message":"591","line":39,"column":5,"nodeType":"589","endLine":39,"endColumn":34,"suggestions":"592"},{"ruleId":"587","severity":1,"message":"593","line":14,"column":5,"nodeType":"589","endLine":14,"endColumn":18,"suggestions":"594"},{"ruleId":"587","severity":1,"message":"595","line":14,"column":5,"nodeType":"589","endLine":14,"endColumn":18,"suggestions":"596"},{"ruleId":"577","severity":1,"message":"597","line":2,"column":18,"nodeType":"579","messageId":"580","endLine":2,"endColumn":22},{"ruleId":"577","severity":1,"message":"598","line":8,"column":8,"nodeType":"579","messageId":"580","endLine":8,"endColumn":23},{"ruleId":"577","severity":1,"message":"599","line":18,"column":9,"nodeType":"579","messageId":"580","endLine":18,"endColumn":14},{"ruleId":"600","replacedBy":"601"},{"ruleId":"602","replacedBy":"603"},{"ruleId":"577","severity":1,"message":"604","line":7,"column":10,"nodeType":"579","messageId":"580","endLine":7,"endColumn":14},{"ruleId":"587","severity":1,"message":"605","line":39,"column":5,"nodeType":"589","endLine":39,"endColumn":40,"suggestions":"606"},{"ruleId":"587","severity":1,"message":"607","line":49,"column":5,"nodeType":"589","endLine":49,"endColumn":53,"suggestions":"608"},{"ruleId":"600","replacedBy":"609"},{"ruleId":"602","replacedBy":"610"},{"ruleId":"587","severity":1,"message":"611","line":38,"column":5,"nodeType":"589","endLine":38,"endColumn":55,"suggestions":"612"},{"ruleId":"600","replacedBy":"613"},{"ruleId":"602","replacedBy":"614"},{"ruleId":"600","replacedBy":"615"},{"ruleId":"602","replacedBy":"616"},{"ruleId":"587","severity":1,"message":"605","line":18,"column":5,"nodeType":"589","endLine":18,"endColumn":40,"suggestions":"617"},{"ruleId":"577","severity":1,"message":"618","line":1,"column":17,"nodeType":"579","messageId":"580","endLine":1,"endColumn":25},{"ruleId":"577","severity":1,"message":"619","line":4,"column":13,"nodeType":"579","messageId":"580","endLine":4,"endColumn":20},{"ruleId":"577","severity":1,"message":"620","line":12,"column":9,"nodeType":"579","messageId":"580","endLine":12,"endColumn":18},{"ruleId":"577","severity":1,"message":"621","line":13,"column":9,"nodeType":"579","messageId":"580","endLine":13,"endColumn":16},{"ruleId":"577","severity":1,"message":"622","line":10,"column":10,"nodeType":"579","messageId":"580","endLine":10,"endColumn":15},{"ruleId":"587","severity":1,"message":"605","line":28,"column":5,"nodeType":"589","endLine":28,"endColumn":40,"suggestions":"623"},{"ruleId":"587","severity":1,"message":"605","line":24,"column":5,"nodeType":"589","endLine":24,"endColumn":40,"suggestions":"624"},{"ruleId":"587","severity":1,"message":"625","line":14,"column":5,"nodeType":"589","endLine":14,"endColumn":18,"suggestions":"626"},{"ruleId":"587","severity":1,"message":"605","line":19,"column":5,"nodeType":"589","endLine":19,"endColumn":40,"suggestions":"627"},{"ruleId":"577","severity":1,"message":"628","line":1,"column":27,"nodeType":"579","messageId":"580","endLine":1,"endColumn":36},{"ruleId":"577","severity":1,"message":"629","line":3,"column":8,"nodeType":"579","messageId":"580","endLine":3,"endColumn":13},{"ruleId":"600","replacedBy":"630"},{"ruleId":"602","replacedBy":"631"},{"ruleId":"587","severity":1,"message":"605","line":28,"column":5,"nodeType":"589","endLine":28,"endColumn":40,"suggestions":"632"},{"ruleId":"587","severity":1,"message":"605","line":28,"column":5,"nodeType":"589","endLine":28,"endColumn":40,"suggestions":"633"},{"ruleId":"587","severity":1,"message":"605","line":28,"column":5,"nodeType":"589","endLine":28,"endColumn":40,"suggestions":"634"},{"ruleId":"577","severity":1,"message":"635","line":39,"column":5,"nodeType":"579","messageId":"580","endLine":39,"endColumn":26},{"ruleId":"600","replacedBy":"636"},{"ruleId":"602","replacedBy":"637"},{"ruleId":"600","replacedBy":"638"},{"ruleId":"602","replacedBy":"639"},{"ruleId":"600","replacedBy":"640"},{"ruleId":"602","replacedBy":"641"},{"ruleId":"600","replacedBy":"642"},{"ruleId":"602","replacedBy":"643"},{"ruleId":"587","severity":1,"message":"644","line":39,"column":5,"nodeType":"589","endLine":39,"endColumn":7,"suggestions":"645"},{"ruleId":"587","severity":1,"message":"605","line":18,"column":5,"nodeType":"589","endLine":18,"endColumn":40,"suggestions":"646"},{"ruleId":"587","severity":1,"message":"605","line":19,"column":5,"nodeType":"589","endLine":19,"endColumn":40,"suggestions":"647"},{"ruleId":"577","severity":1,"message":"648","line":47,"column":21,"nodeType":"579","messageId":"580","endLine":47,"endColumn":34},{"ruleId":"577","severity":1,"message":"649","line":22,"column":9,"nodeType":"579","messageId":"580","endLine":22,"endColumn":25},{"ruleId":"577","severity":1,"message":"650","line":23,"column":9,"nodeType":"579","messageId":"580","endLine":23,"endColumn":30},{"ruleId":"577","severity":1,"message":"651","line":23,"column":32,"nodeType":"579","messageId":"580","endLine":23,"endColumn":54},{"ruleId":"587","severity":1,"message":"652","line":40,"column":14,"nodeType":"653","endLine":40,"endColumn":15},{"ruleId":"587","severity":1,"message":"654","line":41,"column":23,"nodeType":"653","endLine":41,"endColumn":24},{"ruleId":"655","severity":1,"message":"656","line":64,"column":38,"nodeType":"657","messageId":"658","endLine":64,"endColumn":40},{"ruleId":"655","severity":1,"message":"656","line":192,"column":37,"nodeType":"657","messageId":"658","endLine":192,"endColumn":39},{"ruleId":"587","severity":1,"message":"659","line":19,"column":14,"nodeType":"653","endLine":19,"endColumn":18},{"ruleId":"587","severity":1,"message":"659","line":15,"column":14,"nodeType":"653","endLine":15,"endColumn":18},{"ruleId":"587","severity":1,"message":"607","line":45,"column":5,"nodeType":"589","endLine":45,"endColumn":7,"suggestions":"660"},{"ruleId":"587","severity":1,"message":"607","line":52,"column":5,"nodeType":"589","endLine":52,"endColumn":14,"suggestions":"661"},{"ruleId":"600","replacedBy":"662"},{"ruleId":"602","replacedBy":"663"},{"ruleId":"577","severity":1,"message":"620","line":9,"column":10,"nodeType":"579","messageId":"580","endLine":9,"endColumn":19},{"ruleId":"577","severity":1,"message":"621","line":9,"column":21,"nodeType":"579","messageId":"580","endLine":9,"endColumn":28},{"ruleId":"577","severity":1,"message":"664","line":10,"column":10,"nodeType":"579","messageId":"580","endLine":10,"endColumn":17},{"ruleId":"577","severity":1,"message":"665","line":12,"column":8,"nodeType":"579","messageId":"580","endLine":12,"endColumn":16},{"ruleId":"587","severity":1,"message":"666","line":16,"column":5,"nodeType":"589","endLine":16,"endColumn":23,"suggestions":"667"},{"ruleId":"587","severity":1,"message":"668","line":27,"column":5,"nodeType":"589","endLine":27,"endColumn":23,"suggestions":"669"},{"ruleId":"587","severity":1,"message":"666","line":30,"column":5,"nodeType":"589","endLine":30,"endColumn":23,"suggestions":"670"},{"ruleId":"587","severity":1,"message":"652","line":17,"column":14,"nodeType":"653","endLine":17,"endColumn":15},{"ruleId":"587","severity":1,"message":"652","line":18,"column":15,"nodeType":"653","endLine":18,"endColumn":16},{"ruleId":"587","severity":1,"message":"652","line":30,"column":15,"nodeType":"653","endLine":30,"endColumn":16},{"ruleId":"655","severity":1,"message":"656","line":161,"column":37,"nodeType":"657","messageId":"658","endLine":161,"endColumn":39},{"ruleId":"577","severity":1,"message":"618","line":1,"column":17,"nodeType":"579","messageId":"580","endLine":1,"endColumn":25},{"ruleId":"600","replacedBy":"671"},{"ruleId":"602","replacedBy":"672"},{"ruleId":"577","severity":1,"message":"673","line":6,"column":2,"nodeType":"579","messageId":"580","endLine":6,"endColumn":18},{"ruleId":"577","severity":1,"message":"618","line":1,"column":17,"nodeType":"579","messageId":"580","endLine":1,"endColumn":25},{"ruleId":"600","replacedBy":"674"},{"ruleId":"602","replacedBy":"675"},{"ruleId":"577","severity":1,"message":"628","line":1,"column":17,"nodeType":"579","messageId":"580","endLine":1,"endColumn":26},{"ruleId":"577","severity":1,"message":"676","line":66,"column":51,"nodeType":"579","messageId":"580","endLine":66,"endColumn":54},{"ruleId":"577","severity":1,"message":"618","line":1,"column":17,"nodeType":"579","messageId":"580","endLine":1,"endColumn":25},{"ruleId":"577","severity":1,"message":"677","line":3,"column":23,"nodeType":"579","messageId":"580","endLine":3,"endColumn":30},{"ruleId":"577","severity":1,"message":"678","line":53,"column":11,"nodeType":"579","messageId":"580","endLine":53,"endColumn":22},{"ruleId":"577","severity":1,"message":"679","line":53,"column":24,"nodeType":"579","messageId":"580","endLine":53,"endColumn":35},{"ruleId":"587","severity":1,"message":"591","line":28,"column":5,"nodeType":"589","endLine":28,"endColumn":42,"suggestions":"680"},{"ruleId":"587","severity":1,"message":"681","line":13,"column":5,"nodeType":"589","endLine":13,"endColumn":18,"suggestions":"682"},{"ruleId":"577","severity":1,"message":"683","line":3,"column":8,"nodeType":"579","messageId":"580","endLine":3,"endColumn":14},{"ruleId":"587","severity":1,"message":"605","line":33,"column":5,"nodeType":"589","endLine":33,"endColumn":40,"suggestions":"684"},{"ruleId":"587","severity":1,"message":"605","line":20,"column":5,"nodeType":"589","endLine":20,"endColumn":40,"suggestions":"685"},{"ruleId":"587","severity":1,"message":"605","line":30,"column":5,"nodeType":"589","endLine":30,"endColumn":40,"suggestions":"686"},{"ruleId":"587","severity":1,"message":"605","line":32,"column":5,"nodeType":"589","endLine":32,"endColumn":40,"suggestions":"687"},{"ruleId":"587","severity":1,"message":"605","line":31,"column":5,"nodeType":"589","endLine":31,"endColumn":40,"suggestions":"688"},{"ruleId":"587","severity":1,"message":"659","line":15,"column":14,"nodeType":"653","endLine":15,"endColumn":18},{"ruleId":"587","severity":1,"message":"605","line":18,"column":5,"nodeType":"589","endLine":18,"endColumn":40,"suggestions":"689"},{"ruleId":"577","severity":1,"message":"690","line":4,"column":10,"nodeType":"579","messageId":"580","endLine":4,"endColumn":13},{"ruleId":"587","severity":1,"message":"605","line":23,"column":5,"nodeType":"589","endLine":23,"endColumn":40,"suggestions":"691"},{"ruleId":"587","severity":1,"message":"605","line":21,"column":5,"nodeType":"589","endLine":21,"endColumn":40,"suggestions":"692"},{"ruleId":"587","severity":1,"message":"605","line":22,"column":5,"nodeType":"589","endLine":22,"endColumn":40,"suggestions":"693"},{"ruleId":"587","severity":1,"message":"605","line":22,"column":5,"nodeType":"589","endLine":22,"endColumn":40,"suggestions":"694"},{"ruleId":"587","severity":1,"message":"659","line":15,"column":14,"nodeType":"653","endLine":15,"endColumn":18},{"ruleId":"587","severity":1,"message":"605","line":18,"column":5,"nodeType":"589","endLine":18,"endColumn":40,"suggestions":"695"},{"ruleId":"587","severity":1,"message":"605","line":18,"column":5,"nodeType":"589","endLine":18,"endColumn":40,"suggestions":"696"},{"ruleId":"587","severity":1,"message":"605","line":24,"column":5,"nodeType":"589","endLine":24,"endColumn":40,"suggestions":"697"},{"ruleId":"587","severity":1,"message":"605","line":19,"column":5,"nodeType":"589","endLine":19,"endColumn":40,"suggestions":"698"},{"ruleId":"587","severity":1,"message":"605","line":19,"column":5,"nodeType":"589","endLine":19,"endColumn":40,"suggestions":"699"},{"ruleId":"587","severity":1,"message":"605","line":31,"column":5,"nodeType":"589","endLine":31,"endColumn":40,"suggestions":"700"},{"ruleId":"587","severity":1,"message":"605","line":18,"column":5,"nodeType":"589","endLine":18,"endColumn":40,"suggestions":"701"},{"ruleId":"577","severity":1,"message":"683","line":4,"column":8,"nodeType":"579","messageId":"580","endLine":4,"endColumn":14},{"ruleId":"587","severity":1,"message":"605","line":28,"column":5,"nodeType":"589","endLine":28,"endColumn":40,"suggestions":"702"},"no-unused-vars","'interval' is assigned a value but never used.","Identifier","unusedVar","'cameraCode' is assigned a value but never used.","'isLoadingTrafficH' is assigned a value but never used.","'isLoadingOverSpeed' is assigned a value but never used.","'setLoadingOverSpeed' is assigned a value but never used.","'setOverSpeedData' is assigned a value but never used.","'violationURL' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getLaneNum', 'getPeakData', 'getPedestriansData', 'getTrafficHData', 'getTrafficLaneData', and 'getTrafficTotalData'. Either include them or remove the dependency array.","ArrayExpression",["703"],"React Hook useEffect has a missing dependency: 'getTrafficData'. Either include it or remove the dependency array.",["704"],"React Hook useEffect has a missing dependency: 'parseTrafficData'. Either include it or remove the dependency array.",["705"],"React Hook useEffect has a missing dependency: 'parseData'. Either include it or remove the dependency array.",["706"],"'Spin' is defined but never used.","'SearchResultTab' is defined but never used.","'count' is assigned a value but never used.","no-native-reassign",["707"],"no-negated-in-lhs",["708"],"'page' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'parseTotalData'. Either include it or remove the dependency array.",["709"],"React Hook useEffect has a missing dependency: 'axiosAsync'. Either include it or remove the dependency array.",["710"],["707"],["708"],"React Hook useEffect has a missing dependency: 'getTrafficTotalData'. Either include it or remove the dependency array.",["711"],["707"],["708"],["707"],["708"],["712"],"'useState' is defined but never used.","'actions' is defined but never used.","'startDate' is assigned a value but never used.","'endTime' is assigned a value but never used.","'Title' is assigned a value but never used.",["713"],["714"],"React Hook useEffect has a missing dependency: 'parseViolationData'. Either include it or remove the dependency array.",["715"],["716"],"'useEffect' is defined but never used.","'axios' is defined but never used.",["707"],["708"],["717"],["718"],["719"],"'totalVehicleSpdVolume' is assigned a value but never used.",["707"],["708"],["707"],["708"],["707"],["708"],["707"],["708"],"React Hook useEffect has a missing dependency: 'getOptions'. Either include it or remove the dependency array.",["720"],["721"],["722"],"'setSignupInfo' is assigned a value but never used.","'trafficTotalData' is assigned a value but never used.","'isLoadingTrafficTotal' is assigned a value but never used.","'setLoadingTrafficTotal' is assigned a value but never used.","Assignments to the 'countCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Assignments to the 'countOverSpeedCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Assignments to the 'FristRow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.",["723"],["724"],["707"],["708"],"'TabPane' is assigned a value but never used.","'callback' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentLaneNum' and 'parseData'. Either include them or remove the dependency array.",["725"],"React Hook useEffect has a missing dependency: 'axiosData'. Either include it or remove the dependency array.",["726"],["727"],["707"],["708"],"'PieChartOutlined' is defined but never used.",["707"],["708"],"'ref' is assigned a value but never used.","'message' is defined but never used.","'oldPassword' is assigned a value but never used.","'newPassword' is assigned a value but never used.",["728"],"React Hook useEffect has a missing dependency: 'parseTraffic'. Either include it or remove the dependency array.",["729"],"'moment' is defined but never used.",["730"],["731"],["732"],["733"],["734"],["735"],"'act' is defined but never used.",["736"],["737"],["738"],["739"],["740"],["741"],["742"],["743"],["744"],["745"],["746"],["747"],{"desc":"748","fix":"749"},{"desc":"750","fix":"751"},{"desc":"752","fix":"753"},{"desc":"754","fix":"755"},"no-global-assign","no-unsafe-negation",{"desc":"756","fix":"757"},{"desc":"758","fix":"759"},{"desc":"760","fix":"761"},{"desc":"756","fix":"762"},{"desc":"756","fix":"763"},{"desc":"756","fix":"764"},{"desc":"765","fix":"766"},{"desc":"756","fix":"767"},{"desc":"756","fix":"768"},{"desc":"756","fix":"769"},{"desc":"756","fix":"770"},{"desc":"771","fix":"772"},{"desc":"756","fix":"773"},{"desc":"756","fix":"774"},{"desc":"775","fix":"776"},{"desc":"777","fix":"778"},{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},{"desc":"779","fix":"783"},{"desc":"784","fix":"785"},{"desc":"786","fix":"787"},{"desc":"756","fix":"788"},{"desc":"756","fix":"789"},{"desc":"756","fix":"790"},{"desc":"756","fix":"791"},{"desc":"756","fix":"792"},{"desc":"756","fix":"793"},{"desc":"756","fix":"794"},{"desc":"756","fix":"795"},{"desc":"756","fix":"796"},{"desc":"756","fix":"797"},{"desc":"756","fix":"798"},{"desc":"756","fix":"799"},{"desc":"756","fix":"800"},{"desc":"756","fix":"801"},{"desc":"756","fix":"802"},{"desc":"756","fix":"803"},{"desc":"756","fix":"804"},{"desc":"756","fix":"805"},"Update the dependencies array to be: [getLaneNum, getPeakData, getPedestriansData, getTrafficHData, getTrafficLaneData, getTrafficTotalData]",{"range":"806","text":"807"},"Update the dependencies array to be: [camCode, startDate, endTime, getTrafficData]",{"range":"808","text":"809"},"Update the dependencies array to be: [parseTrafficData, trafficData]",{"range":"810","text":"811"},"Update the dependencies array to be: [parseData, trafficData]",{"range":"812","text":"813"},"Update the dependencies array to be: [trafficTotalData, activeVisualKey, parseTotalData]",{"range":"814","text":"815"},"Update the dependencies array to be: [cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",{"range":"816","text":"817"},"Update the dependencies array to be: [cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",{"range":"818","text":"819"},{"range":"820","text":"815"},{"range":"821","text":"815"},{"range":"822","text":"815"},"Update the dependencies array to be: [parseViolationData, trafficData]",{"range":"823","text":"824"},{"range":"825","text":"815"},{"range":"826","text":"815"},{"range":"827","text":"815"},{"range":"828","text":"815"},"Update the dependencies array to be: [getOptions]",{"range":"829","text":"830"},{"range":"831","text":"815"},{"range":"832","text":"815"},"Update the dependencies array to be: [axiosAsync]",{"range":"833","text":"834"},"Update the dependencies array to be: [axiosAsync, refresh]",{"range":"835","text":"836"},"Update the dependencies array to be: [currentLaneNum, parseData, trafficTotalData]",{"range":"837","text":"838"},"Update the dependencies array to be: [axiosData, trafficTotalData]",{"range":"839","text":"840"},{"range":"841","text":"838"},"Update the dependencies array to be: [realtimeCamCode, startDate, endTime, getTrafficData]",{"range":"842","text":"843"},"Update the dependencies array to be: [parseTraffic, trafficData]",{"range":"844","text":"845"},{"range":"846","text":"815"},{"range":"847","text":"815"},{"range":"848","text":"815"},{"range":"849","text":"815"},{"range":"850","text":"815"},{"range":"851","text":"815"},{"range":"852","text":"815"},{"range":"853","text":"815"},{"range":"854","text":"815"},{"range":"855","text":"815"},{"range":"856","text":"815"},{"range":"857","text":"815"},{"range":"858","text":"815"},{"range":"859","text":"815"},{"range":"860","text":"815"},{"range":"861","text":"815"},{"range":"862","text":"815"},{"range":"863","text":"815"},[2496,2498],"[getLaneNum, getPeakData, getPedestriansData, getTrafficHData, getTrafficLaneData, getTrafficTotalData]",[1209,1238],"[camCode, startDate, endTime, getTrafficData]",[383,396],"[parseTrafficData, trafficData]",[366,379],"[parseData, trafficData]",[778,813],"[trafficTotalData, activeVisualKey, parseTotalData]",[1613,1661],"[cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",[1254,1304],"[cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",[470,505],[612,647],[601,636],[386,399],"[parseViolationData, trafficData]",[477,512],[609,644],[614,649],[615,650],[921,923],"[getOptions]",[470,505],[480,515],[1718,1720],"[axiosAsync]",[1827,1836],"[axiosAsync, refresh]",[400,418],"[currentLaneNum, parseData, trafficTotalData]",[559,577],"[axiosData, trafficTotalData]",[600,618],[794,831],"[realtimeCamCode, startDate, endTime, getTrafficData]",[364,377],"[parseTraffic, trafficData]",[713,748],[480,515],[656,691],[696,731],[645,680],[452,487],[603,638],[537,572],[520,555],[527,562],[468,503],[472,507],[601,636],[480,515],[477,512],[650,685],[486,521],[657,692]]