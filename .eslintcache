[{"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js":"1","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\comVisualHalf\\ComVisualHalf.js":"2","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTCnt.js":"3","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js":"4","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js":"5","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js":"6","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js":"7","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js":"8","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StatContainer.js":"9","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js":"10","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js":"11","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\AvgSpeed.js":"12","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTVehicleRatio.js":"13","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTCnt.js":"14","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js":"15","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js":"16","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\store\\index.js":"17","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js":"18","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js":"19","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js":"20","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js":"21","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js":"22","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\Peak15.js":"23","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTCnt.js":"24","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js":"25","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js":"26","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js":"27","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js":"28","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js":"29","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\date.js":"30","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js":"31","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\index.js":"32","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js":"33","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js":"34","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js":"35","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js":"36","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\pieChart\\index.js":"37","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js":"38","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js":"39","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js":"40","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js":"41","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js":"42","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\searchDownload\\SearchDownloadPage.js":"43","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js":"44","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\userInfo.js":"45","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StreamingContainer.js":"46","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MonthPeakTime.js":"47","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js":"48","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js":"49","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\header\\index.js":"50","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchComparison\\SearchComparison.js":"51","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js":"52","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WeekPeakTime.js":"53","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTVehicleRatio.js":"54","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\accountDescription\\AccountDescriptionFrom.js":"55","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\TimeDataVisualization.js":"56","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js":"57","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\dataComparison\\DataComparisonPage.js":"58","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js":"59","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\bidirectionalBar\\DayNight.js":"60","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PeakHour.js":"61","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js":"62","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js":"63","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js":"64","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js":"65","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\PasswordPage.js":"66","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\login\\LoginPage.js":"67","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\overSpeed.js":"68","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\dashLineChart\\WeekPedestrians.js":"69","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js":"70","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js":"71","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js":"72","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js":"73","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js":"74","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTAvgSpeed.js":"75","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js":"76"},{"size":832,"mtime":1617066324590,"results":"77","hashOfConfig":"78"},{"size":703,"mtime":1611036002732,"results":"79","hashOfConfig":"78"},{"size":2402,"mtime":1616395452722,"results":"80","hashOfConfig":"78"},{"size":2501,"mtime":1616390825867,"results":"81","hashOfConfig":"78"},{"size":6483,"mtime":1616475606541,"results":"82","hashOfConfig":"78"},{"size":997,"mtime":1615964214432,"results":"83","hashOfConfig":"78"},{"size":341,"mtime":1617609700185,"results":"84","hashOfConfig":"78"},{"size":2715,"mtime":1617693485333,"results":"85","hashOfConfig":"78"},{"size":410,"mtime":1616232271503,"results":"86","hashOfConfig":"78"},{"size":2055,"mtime":1616475711879,"results":"87","hashOfConfig":"78"},{"size":5679,"mtime":1616229287097,"results":"88","hashOfConfig":"78"},{"size":1680,"mtime":1616224337965,"results":"89","hashOfConfig":"78"},{"size":2911,"mtime":1616390932741,"results":"90","hashOfConfig":"78"},{"size":2406,"mtime":1616227548724,"results":"91","hashOfConfig":"78"},{"size":5308,"mtime":1617342494183,"results":"92","hashOfConfig":"78"},{"size":1160,"mtime":1617065111083,"results":"93","hashOfConfig":"78"},{"size":732,"mtime":1617611066840,"results":"94","hashOfConfig":"78"},{"size":4199,"mtime":1617693392073,"results":"95","hashOfConfig":"78"},{"size":6447,"mtime":1617065942524,"results":"96","hashOfConfig":"78"},{"size":3657,"mtime":1616394831784,"results":"97","hashOfConfig":"78"},{"size":2661,"mtime":1616390710029,"results":"98","hashOfConfig":"78"},{"size":654,"mtime":1615877296950,"results":"99","hashOfConfig":"78"},{"size":486,"mtime":1616236053868,"results":"100","hashOfConfig":"78"},{"size":2576,"mtime":1616416302162,"results":"101","hashOfConfig":"78"},{"size":1240,"mtime":1617695212432,"results":"102","hashOfConfig":"78"},{"size":1927,"mtime":1616548661791,"results":"103","hashOfConfig":"78"},{"size":9693,"mtime":1616400678597,"results":"104","hashOfConfig":"78"},{"size":2649,"mtime":1616416306526,"results":"105","hashOfConfig":"78"},{"size":2414,"mtime":1616388122937,"results":"106","hashOfConfig":"78"},{"size":920,"mtime":1616735288812,"results":"107","hashOfConfig":"78"},{"size":652,"mtime":1616735276373,"results":"108","hashOfConfig":"78"},{"size":764,"mtime":1616059632862,"results":"109","hashOfConfig":"78"},{"size":2607,"mtime":1616416390370,"results":"110","hashOfConfig":"78"},{"size":2693,"mtime":1617676080949,"results":"111","hashOfConfig":"78"},{"size":3670,"mtime":1617066244048,"results":"112","hashOfConfig":"78"},{"size":3566,"mtime":1616400757252,"results":"113","hashOfConfig":"78"},{"size":1302,"mtime":1611016634488,"results":"114","hashOfConfig":"78"},{"size":2655,"mtime":1617065346560,"results":"115","hashOfConfig":"78"},{"size":4104,"mtime":1617693468972,"results":"116","hashOfConfig":"78"},{"size":2492,"mtime":1617065503078,"results":"117","hashOfConfig":"78"},{"size":3425,"mtime":1617065580102,"results":"118","hashOfConfig":"78"},{"size":4036,"mtime":1617238256203,"results":"119","hashOfConfig":"78"},{"size":1691,"mtime":1617693534237,"results":"120","hashOfConfig":"78"},{"size":12469,"mtime":1617094144925,"results":"121","hashOfConfig":"78"},{"size":459,"mtime":1617066391537,"results":"122","hashOfConfig":"78"},{"size":1516,"mtime":1616232424928,"results":"123","hashOfConfig":"78"},{"size":2307,"mtime":1616421588250,"results":"124","hashOfConfig":"78"},{"size":2064,"mtime":1616222304031,"results":"125","hashOfConfig":"78"},{"size":2872,"mtime":1617238271976,"results":"126","hashOfConfig":"78"},{"size":1392,"mtime":1617693219716,"results":"127","hashOfConfig":"78"},{"size":2006,"mtime":1614056265112,"results":"128","hashOfConfig":"78"},{"size":5679,"mtime":1616387636372,"results":"129","hashOfConfig":"78"},{"size":2499,"mtime":1616421690909,"results":"130","hashOfConfig":"78"},{"size":2470,"mtime":1616390956524,"results":"131","hashOfConfig":"78"},{"size":595,"mtime":1617698868099,"results":"132","hashOfConfig":"78"},{"size":6878,"mtime":1616421699583,"results":"133","hashOfConfig":"78"},{"size":1540,"mtime":1616224672586,"results":"134","hashOfConfig":"78"},{"size":1909,"mtime":1616049387277,"results":"135","hashOfConfig":"78"},{"size":2438,"mtime":1616395958685,"results":"136","hashOfConfig":"78"},{"size":2421,"mtime":1616391353177,"results":"137","hashOfConfig":"78"},{"size":489,"mtime":1616236116342,"results":"138","hashOfConfig":"78"},{"size":2335,"mtime":1617693321590,"results":"139","hashOfConfig":"78"},{"size":2040,"mtime":1617693204634,"results":"140","hashOfConfig":"78"},{"size":3097,"mtime":1617693509105,"results":"141","hashOfConfig":"78"},{"size":2721,"mtime":1617693522080,"results":"142","hashOfConfig":"78"},{"size":1126,"mtime":1617693544733,"results":"143","hashOfConfig":"78"},{"size":943,"mtime":1617610651752,"results":"144","hashOfConfig":"78"},{"size":1702,"mtime":1616224489464,"results":"145","hashOfConfig":"78"},{"size":2823,"mtime":1616399757518,"results":"146","hashOfConfig":"78"},{"size":6208,"mtime":1617697499337,"results":"147","hashOfConfig":"78"},{"size":2390,"mtime":1616422335755,"results":"148","hashOfConfig":"78"},{"size":4681,"mtime":1617698850286,"results":"149","hashOfConfig":"78"},{"size":7919,"mtime":1617696349831,"results":"150","hashOfConfig":"78"},{"size":410,"mtime":1613529006303,"results":"151","hashOfConfig":"78"},{"size":2484,"mtime":1616395852943,"results":"152","hashOfConfig":"78"},{"size":2484,"mtime":1616391020011,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"12xqqm0",{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"177"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"177"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"156"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"177"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"168"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"164"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"223"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"223"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js",[],["331","332"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\comVisualHalf\\ComVisualHalf.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTCnt.js",["333"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js",["334"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst PCULine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar PCUTotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 PCU parse\");\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordTime,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tlet tempTotal = {};\r\n\t\t\tconst Time = moment(recordTime).format(\"HH:mm\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehiclePassengerCarUnit;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tPCUTotalData.push(tempCar);\r\n\t\t\tPCUTotalData.push(tempBus);\r\n\t\t\tPCUTotalData.push(tempTruck);\r\n\t\t\tPCUTotalData.push(tempMotor);\r\n\t\t\tPCUTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(PCUTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\t// xAxis: { type: \"time\" },\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PCULine;\r\n",["335","336"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js",["337"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst SearchFisrtTable = (props) => {\r\n\tconst { firstData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData(firstData);\r\n\t}, [firstData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t\tkey: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tkey: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tkey: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tkey: \"bus\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tkey: \"truck\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tkey: \"motor\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"motorpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"보행자\",\r\n\t\t\tkey: \"totalPerson\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"수(명)\",\r\n\t\t\t\t\tdataIndex: \"person\",\r\n\t\t\t\t\tkey: \"person\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"무단횡단(명)\",\r\n\t\t\t\t\tdataIndex: \"jaywalk\",\r\n\t\t\t\t\tkey: \"jaywalk\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\t// const axiosData = () => {\r\n\t// \tconsole.log(\"count table axios\");\r\n\t// \ttrafficTotalData.some((eachData, index) => {\r\n\t// \t\tconst {\r\n\t// \t\t\trecordTime,\r\n\t// \t\t\ttotalVehicleVolume,\r\n\t// \t\t\ttotalVehicleAvgSpeed,\r\n\t// \t\t\ttotalVehiclePassengerCarUnit,\r\n\t// \t\t\ttotalVehicleSpdVolume,\r\n\t// \t\t\tcarVolume,\r\n\t// \t\t\tcarAvgSpeed,\r\n\t// \t\t\tcarPassengerCarUnit,\r\n\t// \t\t\tcarVehicleRatio,\r\n\t// \t\t\tcarSpdVolume,\r\n\t// \t\t\tmBusVolume,\r\n\t// \t\t\tmBusAvgSpeed,\r\n\t// \t\t\tmBusPassengerCarUnit,\r\n\t// \t\t\tmBusVehicleRatio,\r\n\t// \t\t\tmBusSpdVolume,\r\n\t// \t\t\tmTruckVolume,\r\n\t// \t\t\tmTruckAvgSpeed,\r\n\t// \t\t\tmTruckPassengerCarUnit,\r\n\t// \t\t\tmTruckVehicleRatio,\r\n\t// \t\t\tmTruckSpdVolume,\r\n\t// \t\t\tmotorVolume,\r\n\t// \t\t\tmotorAvgSpeed,\r\n\t// \t\t\tmotorPassengerCarUnit,\r\n\t// \t\t\tmotorVehicleRatio,\r\n\t// \t\t\tmotorSpdVolume,\r\n\t// \t\t\tpedestrianVolume,\r\n\t// \t\t\tjaywalkVolume,\r\n\t// \t\t} = eachData;\r\n\t// \t\tif (recordTime === \"ALL\") {\r\n\t// \t\t\treturn false;\r\n\t// \t\t}\r\n\t// \t\tif (countCol === 6) {\r\n\t// \t\t\treturn true;\r\n\t// \t\t}\r\n\t// \t\tcountCol += 1;\r\n\r\n\t// \t\tlet dataTemp = {};\r\n\r\n\t// \t\tdataTemp[\"key\"] = index + 1;\r\n\t// \t\tdataTemp[\"time\"] = moment(recordTime).format(\"YYYY년 MM월 DD일 HH:mm:ss\");\r\n\r\n\t// \t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t// \t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t// \t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t// \t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"carCount\"] = carVolume;\r\n\t// \t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t// \t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t// \t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t// \t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t// \t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t// \t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t// \t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t// \t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t// \t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t// \t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t// \t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t// \t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t// \t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t// \t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t// \t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t// \t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t// \t\tdataTemp[\"person\"] = pedestrianVolume;\r\n\t// \t\tdataTemp[\"jaywalk\"] = jaywalkVolume;\r\n\r\n\t// \t\tTotalData.push(dataTemp);\r\n\t// \t});\r\n\t// \tsetFirstData(TotalData);\r\n\t// \tsetData(TotalData);\r\n\t// \tsetLoading(false);\r\n\t// \tsetLoadingFirst(false);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{Data.length === 0 ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SearchFisrtTable;\r\n",["338","339"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StatContainer.js",[],["340","341"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js",[],["342","343"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js",["344"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst DLFisrtTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar FristRow;\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tFristRow = true;\r\n\t\tsetLoading(true);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"lane\",\r\n\t\t\twidth: 60,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\tconsole.log(\"count 일간 차선별 1차데이블 parse\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (FristRow) {\r\n\t\t\t\tdataTemp[\"lane\"] = \"전체\";\r\n\t\t\t\tFristRow = false;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"lane\"] = `${laneNumber} 차선`;\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default DLFisrtTable;\r\n",["345","346"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\AvgSpeed.js",["347"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTVehicleRatio.js",["348"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst VehicleRatio = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tvar carRatio = [];\r\n\tvar busRatio = [];\r\n\tvar truckRatio = [];\r\n\tvar motorRatio = [];\r\n\tvar RatioTotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"3\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count count parse\");\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\r\n\t\t\ttempCar[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempCar[\"value\"] = parseFloat((carVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempBus[\"value\"] = parseFloat((mBusVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempTruck[\"value\"] = parseFloat((mTruckVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempMotor[\"value\"] = parseFloat((motorVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\r\n\t\t\tcarRatio.push(tempCar);\r\n\t\t\tbusRatio.push(tempBus);\r\n\t\t\ttruckRatio.push(tempTruck);\r\n\t\t\tmotorRatio.push(tempMotor);\r\n\t\t});\r\n\t\tRatioTotalData = carRatio.concat(\r\n\t\t\tbusRatio.concat(truckRatio.concat(motorRatio))\r\n\t\t);\r\n\t\tsetData(RatioTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"%\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default VehicleRatio;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTCnt.js",["349"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst CntLine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tvar cntTotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"1\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 통행량 parse\");\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordTime,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst Time = moment(recordTime).format(\"HH:mm\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carVolume;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusVolume;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckVolume;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorVolume;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleVolume;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\t\t\tcntTotalData.push(tempCar);\r\n\t\t\tcntTotalData.push(tempBus);\r\n\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\tcntTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\t// xAxis: { type: \"time\" },\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default CntLine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js",["350"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\store\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js",["351"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js",["352"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst MTSecondTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tvar TotalData = [];\r\n\r\n\tvar countCol;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentLaneNum === 0) {\r\n\t\t\tcountCol = 0;\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseData();\r\n\t\t}\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"totalDayNightRatio\",\r\n\t\t\t\t\tkey: \"totalNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"totalPHF\",\r\n\t\t\t\t\tkey: \"totalPHF\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"totalPeekHourCnt\",\r\n\t\t\t\t\tkey: \"totalPeekHourCnt\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"집중률\",\r\n\t\t\t\t\tdataIndex: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t\tkey: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tkey: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"carDayNightRatio\",\r\n\t\t\t\t\tkey: \"carNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tkey: \"bus\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"busDayNightRatio\",\r\n\t\t\t\t\tkey: \"busNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tkey: \"truck\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"truckDayNightRatio\",\r\n\t\t\t\t\tkey: \"truckNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tkey: \"motor\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"motorDayNightRatio\",\r\n\t\t\t\t\tkey: \"motorNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\tconst parseData = () => {\r\n\t\tconsole.log(\"count table axios\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordTime,\r\n\t\t\t\ttotalVehicleDayNightRatio,\r\n\t\t\t\ttotalVehiclePeakHourFactor,\r\n\t\t\t\ttotalVehiclePeakHourConcentrationRatio,\r\n\t\t\t\ttotalVehiclePeakHourFlowRate,\r\n\t\t\t\tcarDayNightRatio,\r\n\t\t\t\tmBusDayNightRatio,\r\n\t\t\t\tmTruckDayNightRatio,\r\n\t\t\t\tmotorDayNightRatio,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (countCol < 3) {\r\n\t\t\t\tif (countCol === 0) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"월간전체\";\r\n\t\t\t\t} else if (countCol === 1) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"평일전체\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"주말전체\";\r\n\t\t\t\t}\r\n\t\t\t\tcountCol += 1;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"time\"] = moment(recordTime).format(\"YYYY년 MM월 DD일\");\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalDayNightRatio\"] = totalVehicleDayNightRatio;\r\n\t\t\tdataTemp[\"totalPHF\"] = totalVehiclePeakHourFactor;\r\n\t\t\tdataTemp[\"totalPeekHourCnt\"] = totalVehiclePeakHourFlowRate;\r\n\t\t\tdataTemp[\r\n\t\t\t\t\"totalVehiclePeakHourConcentrationRatio\"\r\n\t\t\t] = totalVehiclePeakHourConcentrationRatio;\r\n\r\n\t\t\tdataTemp[\"carDayNightRatio\"] = carDayNightRatio;\r\n\t\t\tdataTemp[\"busDayNightRatio\"] = mBusDayNightRatio;\r\n\t\t\tdataTemp[\"truckDayNightRatio\"] = mTruckDayNightRatio;\r\n\t\t\tdataTemp[\"motorDayNightRatio\"] = motorDayNightRatio;\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MTSecondTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js",["353","354"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport { act } from \"react-dom/cjs/react-dom-test-utils.production.min\";\r\n\r\nconst OverSpeedCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar cntCar = [];\r\n\tvar cntBus = [];\r\n\tvar cntTruck = [];\r\n\tvar cntMotor = [];\r\n\tvar cntTotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 차선별 과속 parse\");\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\r\n\t\t\ttempCar[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\t\t\tcntCar.push(tempCar);\r\n\t\t\tcntBus.push(tempBus);\r\n\t\t\tcntTruck.push(tempTruck);\r\n\t\t\tcntMotor.push(tempMotor);\r\n\t\t});\r\n\t\tcntTotalData = cntCar.concat(cntBus.concat(cntTruck.concat(cntMotor)));\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"laneNum\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default OverSpeedCnt;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js",["355"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\Peak15.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTCnt.js",["356"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\tvar cntTotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"1\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 통행량 그래프 parse\");\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carVolume;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusVolume;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckVolume;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorVolume;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleVolume;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tcntTotalData.push(tempCar);\r\n\t\t\tcntTotalData.push(tempBus);\r\n\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\tcntTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlegend: true,\r\n\t\tseriesField: \"key\",\r\n\t\tstepType: \"hvh\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTCnt;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js",["357"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport \"../style.less\";\r\n\r\nconst WTFirstTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tvar columns;\r\n\tif (currentLaneNum === 0) {\r\n\t\tcolumns = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"시간\",\r\n\t\t\t\tdataIndex: \"time\",\r\n\t\t\t\tkey: \"time\",\r\n\t\t\t\twidth: 70,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"전체\",\r\n\t\t\t\tdataIndex: \"Total\",\r\n\t\t\t\tkey: \"Total\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\tkey: \"car\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"버스\",\r\n\t\t\t\tkey: \"bus\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\tkey: \"truck\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\tkey: \"motor\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"보행자\",\r\n\t\t\t\tkey: \"personTotal\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"수(명)\",\r\n\t\t\t\t\t\tdataIndex: \"person\",\r\n\t\t\t\t\t\tkey: \"person\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"무단횡단(명)\",\r\n\t\t\t\t\t\tdataIndex: \"jaywalk\",\r\n\t\t\t\t\t\tkey: \"jaywalk\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t];\r\n\t} else {\r\n\t\tcolumns = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"시간\",\r\n\t\t\t\tdataIndex: \"time\",\r\n\t\t\t\tkey: \"time\",\r\n\t\t\t\twidth: 70,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"전체\",\r\n\t\t\t\tdataIndex: \"Total\",\r\n\t\t\t\tkey: \"Total\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\tkey: \"car\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"버스\",\r\n\t\t\t\tkey: \"bus\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\tkey: \"truck\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\tkey: \"motor\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t];\r\n\t}\r\n\tconst axiosData = () => {\r\n\t\tconsole.log(\"count table axios\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t\tpedestrianVolume,\r\n\t\t\t\tjaywalkVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tdataTemp[\"time\"] = WeekKey[weekOption];\r\n\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tif (currentLaneNum === 0) {\r\n\t\t\t\tdataTemp[\"person\"] = pedestrianVolume;\r\n\t\t\t\tdataTemp[\"jaywalk\"] = jaywalkVolume;\r\n\t\t\t}\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTFirstTable;\r\n",["358","359"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js",["360"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js",["361"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\date.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\index.js",[],["362","363"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js",["364"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js",["365","366"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js",["367"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js",["368"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst WTSecondTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentLaneNum === 0) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tparseData();\r\n\t\t}\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t\tkey: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tkey: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"totalDayNightRatio\",\r\n\t\t\t\t\tkey: \"totalNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"totalPHF\",\r\n\t\t\t\t\tkey: \"totalPHF\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"totalPeekHourCnt\",\r\n\t\t\t\t\tkey: \"totalPeekHourCnt\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"집중률\",\r\n\t\t\t\t\tdataIndex: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t\tkey: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tkey: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"carDayNightRatio\",\r\n\t\t\t\t\tkey: \"carNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tkey: \"bus\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"busDayNightRatio\",\r\n\t\t\t\t\tkey: \"busNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tkey: \"truck\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"truckDayNightRatio\",\r\n\t\t\t\t\tkey: \"truckNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tkey: \"motor\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"motorDayNightRatio\",\r\n\t\t\t\t\tkey: \"motorNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\tconst parseData = () => {\r\n\t\tconsole.log(\"count table axios\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\ttotalVehicleDayNightRatio,\r\n\t\t\t\ttotalVehiclePeakHourFactor,\r\n\t\t\t\ttotalVehiclePeakHourConcentrationRatio,\r\n\t\t\t\ttotalVehiclePeakHourFlowRate,\r\n\t\t\t\tcarDayNightRatio,\r\n\t\t\t\tmBusDayNightRatio,\r\n\t\t\t\tmTruckDayNightRatio,\r\n\t\t\t\tmotorDayNightRatio,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tdataTemp[\"time\"] = WeekKey[weekOption];\r\n\t\t\tdataTemp[\"totalDayNightRatio\"] = totalVehicleDayNightRatio;\r\n\t\t\tdataTemp[\"totalPHF\"] = totalVehiclePeakHourFactor;\r\n\t\t\tdataTemp[\"totalPeekHourCnt\"] = totalVehiclePeakHourFlowRate;\r\n\t\t\tdataTemp[\r\n\t\t\t\t\"totalVehiclePeakHourConcentrationRatio\"\r\n\t\t\t] = totalVehiclePeakHourConcentrationRatio;\r\n\r\n\t\t\tdataTemp[\"carDayNightRatio\"] = carDayNightRatio;\r\n\t\t\tdataTemp[\"busDayNightRatio\"] = mBusDayNightRatio;\r\n\t\t\tdataTemp[\"truckDayNightRatio\"] = mTruckDayNightRatio;\r\n\t\t\tdataTemp[\"motorDayNightRatio\"] = motorDayNightRatio;\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTSecondTable;\r\n",["369","370"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\pieChart\\index.js",["371","372"],"import React, { useEffect } from \"react\";\r\nimport { Pie } from \"@ant-design/charts\";\r\nconst DemoPie = () => {\r\n\tlet ref;\r\n\tvar data = [\r\n\t\t{\r\n\t\t\ttype: \"分类一\",\r\n\t\t\tvalue: 27,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: \"分类二\",\r\n\t\t\tvalue: 25,\r\n\t\t},\r\n\t\t// {\r\n\t\t// \ttype: \"分类三\",\r\n\t\t// \tvalue: 18,\r\n\t\t// },\r\n\t\t// {\r\n\t\t// \ttype: \"分类四\",\r\n\t\t// \tvalue: 15,\r\n\t\t// },\r\n\t\t// {\r\n\t\t// \ttype: \"分类五\",\r\n\t\t// \tvalue: 10,\r\n\t\t// },\r\n\t\t// {\r\n\t\t// \ttype: \"其他\",\r\n\t\t// \tvalue: 5,\r\n\t\t// },\r\n\t];\r\n\tvar config = {\r\n\t\tappendPadding: 10,\r\n\t\tdata: data,\r\n\t\tangleField: \"value\",\r\n\t\tcolorField: \"type\",\r\n\t\tradius: 0.6,\r\n\t\tlegend: false,\r\n\t\tlabel: {\r\n\t\t\ttype: \"inner\",\r\n\t\t\toffset: \"-30%\",\r\n\t\t\tcontent: \"{name}\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfontSize: 12,\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tstate: {\r\n\t\t\tactive: {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tlineWidth: 0,\r\n\t\t\t\t\tfillOpacity: 0.65,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tinteractions: [{ type: \"element-selected\" }, { type: \"element-active\" }],\r\n\t};\r\n\t// useEffect(() => {\r\n\t// \tif (ref) {\r\n\t// \t\tref.setState(\"active\", (data) => data.type === \"分类一\");\r\n\t// \t\tref.setState(\r\n\t// \t\t\t\"selected\",\r\n\t// \t\t\t(data) => data.type === \"分类一\" || data.type === \"分类二\"\r\n\t// \t\t);\r\n\t// \t}\r\n\t// }, []);\r\n\treturn <Pie {...config} chartRef={(chartRef) => (ref = chartRef)} />;\r\n};\r\nexport default DemoPie;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js",["373"],"import React, { useEffect, useState } from \"react\";\r\nimport { Spin } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nimport VisualizationCard from \"../../molecules/genVisualizationCard/GenVisualizationCard\";\r\nimport VehicleRatio from \"../../charts/doughnutChart/VehicleRatio\";\r\nimport OverSpeedTinyBar from \"../../charts/tinyBarChart/overSpeed\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst StreamingGeneralVisualization = (props) => {\r\n\tconst {\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcurrentTime,\r\n\t\trealtimeCamCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t} = props;\r\n\r\n\tconst [isLoadingTraffic, setLoadingTraffic] = useState(true);\r\n\tconst [trafficData, setTrafficData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetTrafficData();\r\n\t}, [realtimeCamCode, startDate, endTime]);\r\n\r\n\tconst getTrafficData = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${trafficURL}/daily?camCode=${realtimeCamCode}&startDate=${startDate}&endTime=${endTime} ${currentTime}&axis=time&laneNumber=0`,\r\n\t\t\t\t// `${baseURL}/statistics/road-traffic/daily?camCode=0004&startDate=2020-03-15&endTime=2020-03-15 23:59:59&axis=time&laneNumber=0`,\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetTrafficData(res.data);\r\n\t\t\t\tsetLoadingTraffic(false);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tvar TrafficPieChart = <VehicleRatio trafficData={trafficData} />;\r\n\tvar OverSpeedTinyBarChart = <OverSpeedTinyBar trafficData={trafficData} />;\r\n\r\n\treturn (\r\n\t\t<div className=\"general-graph-layout\">\r\n\t\t\t{isLoadingTraffic ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t<VisualizationCard title=\"차종별 통행량\" chart={TrafficPieChart} />\r\n\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\ttitle=\"차종별 과속차량\"\r\n\t\t\t\t\t\tchart={OverSpeedTinyBarChart}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationCodeInfo: () => {\r\n\t\t\tdispatch(actions.getLocationCode());\r\n\t\t},\r\n\t\tgetBaseURL: () => {\r\n\t\t\tdispatch(actions.getURL());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(StreamingGeneralVisualization);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js",["374","375"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js",["376"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js",["377"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\searchDownload\\SearchDownloadPage.js",["378","379"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js",["380","381","382"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\userInfo.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StreamingContainer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MonthPeakTime.js",["383"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js",["384"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js",["385"],"import React, { useState, useEffect } from \"react\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../redux/actions\";\r\n\r\nimport LaneTableCard from \"../../../molecules/tableCard/LaneTableCard\";\r\nimport LaneDataVisualization from \"../../../molecules/dataVisualization/LaneDataVisualization\";\r\nimport \"../style.less\";\r\n\r\nconst LaneVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcameraCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\tadditionalFilter,\r\n\t} = props;\r\n\r\n\tconst [activeVisualKey, setActiveVisualKey] = useState(\"1\");\r\n\r\n\tconst [isLoadingTrafficTotal, setLoadingTrafficTotal] = useState(true);\r\n\tconst [trafficTotalData, setTrafficTotalData] = useState([]);\r\n\r\n\tconst periodURL =\r\n\t\tperiod === \"DAY\" ? \"/daily\" : period === \"WEEK\" ? \"/weekly\" : \"/monthly\";\r\n\r\n\tconst currentURL =\r\n\t\tperiod === \"DAY\"\r\n\t\t\t? `${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane`\r\n\t\t\t: `${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane&weekOption=${additionalFilter}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tgetTrafficTotalData();\r\n\t}, [cameraCode, startDate, endTime, additionalFilter]);\r\n\r\n\tconst getTrafficTotalData = () => {\r\n\t\taxios\r\n\t\t\t.get(`${currentURL}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetTrafficTotalData(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetLoadingTrafficTotal(false);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoadingTrafficTotal ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<LaneDataVisualization\r\n\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\tsetActiveVisualKey={setActiveVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<LaneTableCard\r\n\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\ttableKey=\"first\"\r\n\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tcamLanes: state.locationCode.camLanes,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationCodeInfo: () => {\r\n\t\t\tdispatch(actions.getLocationCode());\r\n\t\t},\r\n\t\tgetBaseURL: () => {\r\n\t\t\tdispatch(actions.getURL());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LaneVisualization);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\header\\index.js",["386"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchComparison\\SearchComparison.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js",["387"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst WLFisrtTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar FristRow;\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tFristRow = true;\r\n\t\tsetLoading(true);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"lane\",\r\n\t\t\twidth: 60,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\tconsole.log(\"count 주간 차선별 1차데이블 parse\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (FristRow) {\r\n\t\t\t\tdataTemp[\"lane\"] = \"전체\";\r\n\t\t\t\tFristRow = false;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"lane\"] = `${laneNumber} 차선`;\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WLFisrtTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WeekPeakTime.js",["388","389"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTVehicleRatio.js",["390"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\accountDescription\\AccountDescriptionFrom.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\TimeDataVisualization.js",["391"],"import React, { useState } from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport DayCntLineChart from \"../../charts/lineChart/DTCnt\";\r\nimport DayPCULineChart from \"../../charts/lineChart/DTPCU\";\r\nimport DayVehicleRatio from \"../../charts/lineChart/DTVehicleRatio\";\r\nimport DayAvgSpeed from \"../../charts/lineChart/DTAvgSpeed\";\r\nimport DayOverSpeed from \"../../charts/lineChart/DTOverSpeed\";\r\nimport Peak15 from \"../../charts/statisticText/Peak15\";\r\nimport PeakHour from \"../../charts/statisticText/PeakHour\";\r\nimport DayPHF from \"../../charts/statisticText/PHF\";\r\nimport DayConcentrationRatio from \"../../charts/liquidChart/PeakRatio\";\r\nimport BidirectionalBar from \"../../charts/bidirectionalBar/DayNight\";\r\nimport PedestriansDashLine from \"../../charts/dashLineChart/DayPedestrians\";\r\n\r\nimport WeekCnt from \"../../charts/lineChart/WTCnt\";\r\nimport WeekPCU from \"../../charts/lineChart/WTPCU\";\r\nimport WeekAvgSpeed from \"../../charts/lineChart/WTAvgSpeed\";\r\nimport WeekOverSpeed from \"../../charts/lineChart/WTOverSpeed\";\r\nimport WeekVehicleRatio from \"../../charts/barChart/WTVehicleRatio\";\r\nimport WeekPeakTime from \"../../charts/lineChart/WeekPeakTime\";\r\n\r\nimport WeekMonthFlowRate from \"../../charts/barChart/WMFlowRate\";\r\nimport WeekMonthPHF from \"../../charts/barChart/WTPHF\";\r\nimport WeekMonthConcentrationRatio from \"../../charts/barChart/WTConcentrationRatio\";\r\nimport WeekMonthPedstrians from \"../../charts/dashLineChart/WeekPedestrians\";\r\n\r\nimport MonthCnt from \"../../charts/lineChart/MTCnt\";\r\nimport MonthPCU from \"../../charts/lineChart/MTPCU\";\r\nimport MonthVehicleRatio from \"../../charts/lineChart/MTVehicleRatio\";\r\nimport MonthAvgSpeed from \"../../charts/lineChart/MTAvgSpeed\";\r\nimport MonthOverSpeed from \"../../charts/lineChart/MTOverSpeed\";\r\nimport MonthPeakTime from \"../../charts/lineChart/MonthPeakTime\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst TimeDataVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tcurrentLaneNum,\r\n\t\tactiveVisualKey,\r\n\t\tsetActiveVisualKey,\r\n\t\ttrafficTotalData,\r\n\t} = props;\r\n\r\n\tconst { TabPane } = Tabs;\r\n\r\n\tconst callback = (key) => {\r\n\t\tsetActiveVisualKey(key);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Tabs\r\n\t\t\tdefaultActiveKey=\"1\"\r\n\t\t\tactiveKey={activeVisualKey}\r\n\t\t\tonChange={callback}\r\n\t\t\ttabPosition=\"right\"\r\n\t\t>\r\n\t\t\t<TabPane tab=\"교통량\" key=\"1\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayCntLineChart\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekCnt\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthCnt\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"PCU\" key=\"2\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayPCULineChart\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekPCU\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthPCU\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"차종비율\" key=\"3\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayVehicleRatio\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekVehicleRatio\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthVehicleRatio\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"평균속도\" key=\"4\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayAvgSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekAvgSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthAvgSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"과속차량\" key=\"5\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayOverSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekOverSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthOverSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t{parseInt(currentLaneNum) === 0 ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<TabPane tab=\"주야율\" key=\"6\">\r\n\t\t\t\t\t\t<BidirectionalBar\r\n\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"첨두시간\" key=\"7\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<Peak15\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t\t\t<WeekPeakTime\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<MonthPeakTime\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"첨두유율\" key=\"8\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<PeakHour\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthFlowRate\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"PHF\" key=\"9\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<DayPHF\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthPHF\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"집중률\" key=\"10\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<DayConcentrationRatio\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthConcentrationRatio\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"무단횡단\" key=\"11\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<PedestriansDashLine\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthPedstrians\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\tsetActiveVisualKey(\"1\")\r\n\t\t\t)}\r\n\t\t</Tabs>\r\n\t);\r\n};\r\n\r\nexport default TimeDataVisualization;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js",["392"],"import React, { useEffect, useState } from \"react\";\r\nimport { Gauge } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst AvgSpeedGauge = (props) => {\r\n\tconst { trafficData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoadingData, setLoadingData] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingData(true);\r\n\t\tparseData();\r\n\t}, [trafficData]);\r\n\r\n\tconst parseData = () => {\r\n\t\tsetData(trafficData[0][\"totalVehicleAvgSpeed\"] / 100);\r\n\t\tsetLoadingData(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tpercent: Data,\r\n\t\trange: {\r\n\t\t\tticks: [0, 1 / 3, 2 / 3, 1],\r\n\t\t\tcolor: [\"#F4664A\", \"#FAAD14\", \"#30BF78\"],\r\n\t\t},\r\n\t\tindicator: {\r\n\t\t\tpointer: { style: { stroke: \"#D0D0D0\", lineWidth: 2 } },\r\n\t\t\t// pin: { style: { stroke: '#D0D0D0', lineWidth:0.5 } },\r\n\t\t\tpin: null,\r\n\t\t},\r\n\t\taxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn Number(v) * 100;\r\n\t\t\t\t},\r\n\t\t\t\tstyle: { fontSize: 10 },\r\n\t\t\t},\r\n\t\t\t// subTickLine: { count: 3 },\r\n\t\t},\r\n\t\tstatistic: {\r\n\t\t\tcontent: {\r\n\t\t\t\tformatter: function formatter(_ref) {\r\n\t\t\t\t\treturn (_ref.percent * 100).toFixed(2) + \" km/h\";\r\n\t\t\t\t},\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfontSize: \"14px\",\r\n\t\t\t\t\tlineHeight: \"30px\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoadingData ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Gauge {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AvgSpeedGauge;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\dataComparison\\DataComparisonPage.js",["393","394"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js",["395"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\bidirectionalBar\\DayNight.js",["396"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PeakHour.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js",["397"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js",["398","399"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\PasswordPage.js",["400"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\login\\LoginPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\overSpeed.js",["401"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\dashLineChart\\WeekPedestrians.js",["402"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js",["403","404"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js",["405"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTAvgSpeed.js",["406"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js",["407"],{"ruleId":"408","replacedBy":"409"},{"ruleId":"410","replacedBy":"411"},{"ruleId":"412","severity":1,"message":"413","line":18,"column":5,"nodeType":"414","endLine":18,"endColumn":40,"suggestions":"415"},{"ruleId":"412","severity":1,"message":"413","line":18,"column":5,"nodeType":"414","endLine":18,"endColumn":40,"suggestions":"416"},{"ruleId":"408","replacedBy":"417"},{"ruleId":"410","replacedBy":"418"},{"ruleId":"419","severity":1,"message":"420","line":3,"column":8,"nodeType":"421","messageId":"422","endLine":3,"endColumn":14},{"ruleId":"408","replacedBy":"423"},{"ruleId":"410","replacedBy":"424"},{"ruleId":"408","replacedBy":"425"},{"ruleId":"410","replacedBy":"426"},{"ruleId":"408","replacedBy":"427"},{"ruleId":"410","replacedBy":"428"},{"ruleId":"412","severity":1,"message":"429","line":15,"column":14,"nodeType":"430","endLine":15,"endColumn":18},{"ruleId":"408","replacedBy":"431"},{"ruleId":"410","replacedBy":"432"},{"ruleId":"412","severity":1,"message":"433","line":14,"column":5,"nodeType":"414","endLine":14,"endColumn":18,"suggestions":"434"},{"ruleId":"412","severity":1,"message":"413","line":33,"column":5,"nodeType":"414","endLine":33,"endColumn":40,"suggestions":"435"},{"ruleId":"412","severity":1,"message":"413","line":18,"column":5,"nodeType":"414","endLine":18,"endColumn":40,"suggestions":"436"},{"ruleId":"412","severity":1,"message":"437","line":23,"column":5,"nodeType":"414","endLine":23,"endColumn":37,"suggestions":"438"},{"ruleId":"412","severity":1,"message":"439","line":26,"column":5,"nodeType":"414","endLine":26,"endColumn":7,"suggestions":"440"},{"ruleId":"412","severity":1,"message":"441","line":18,"column":15,"nodeType":"430","endLine":18,"endColumn":16},{"ruleId":"419","severity":1,"message":"442","line":4,"column":10,"nodeType":"421","messageId":"422","endLine":4,"endColumn":13},{"ruleId":"412","severity":1,"message":"413","line":23,"column":5,"nodeType":"414","endLine":23,"endColumn":40,"suggestions":"443"},{"ruleId":"419","severity":1,"message":"444","line":1,"column":17,"nodeType":"421","messageId":"422","endLine":1,"endColumn":25},{"ruleId":"412","severity":1,"message":"413","line":28,"column":5,"nodeType":"414","endLine":28,"endColumn":40,"suggestions":"445"},{"ruleId":"412","severity":1,"message":"437","line":27,"column":5,"nodeType":"414","endLine":27,"endColumn":23,"suggestions":"446"},{"ruleId":"408","replacedBy":"447"},{"ruleId":"410","replacedBy":"448"},{"ruleId":"412","severity":1,"message":"413","line":28,"column":5,"nodeType":"414","endLine":28,"endColumn":40,"suggestions":"449"},{"ruleId":"412","severity":1,"message":"413","line":22,"column":5,"nodeType":"414","endLine":22,"endColumn":40,"suggestions":"450"},{"ruleId":"408","replacedBy":"451"},{"ruleId":"410","replacedBy":"452"},{"ruleId":"412","severity":1,"message":"413","line":28,"column":5,"nodeType":"414","endLine":28,"endColumn":40,"suggestions":"453"},{"ruleId":"419","severity":1,"message":"454","line":6,"column":13,"nodeType":"421","messageId":"422","endLine":6,"endColumn":20},{"ruleId":"419","severity":1,"message":"455","line":10,"column":10,"nodeType":"421","messageId":"422","endLine":10,"endColumn":15},{"ruleId":"412","severity":1,"message":"456","line":48,"column":5,"nodeType":"414","endLine":48,"endColumn":13,"suggestions":"457"},{"ruleId":"412","severity":1,"message":"458","line":30,"column":5,"nodeType":"414","endLine":30,"endColumn":23,"suggestions":"459"},{"ruleId":"408","replacedBy":"460"},{"ruleId":"410","replacedBy":"461"},{"ruleId":"419","severity":1,"message":"462","line":1,"column":17,"nodeType":"421","messageId":"422","endLine":1,"endColumn":26},{"ruleId":"419","severity":1,"message":"463","line":66,"column":51,"nodeType":"421","messageId":"422","endLine":66,"endColumn":54},{"ruleId":"412","severity":1,"message":"464","line":28,"column":5,"nodeType":"414","endLine":28,"endColumn":42,"suggestions":"465"},{"ruleId":"412","severity":1,"message":"466","line":53,"column":5,"nodeType":"414","endLine":53,"endColumn":7,"suggestions":"467"},{"ruleId":"412","severity":1,"message":"466","line":60,"column":5,"nodeType":"414","endLine":60,"endColumn":14,"suggestions":"468"},{"ruleId":"419","severity":1,"message":"469","line":6,"column":2,"nodeType":"421","messageId":"422","endLine":6,"endColumn":18},{"ruleId":"412","severity":1,"message":"466","line":49,"column":5,"nodeType":"414","endLine":49,"endColumn":53,"suggestions":"470"},{"ruleId":"419","severity":1,"message":"471","line":2,"column":18,"nodeType":"421","messageId":"422","endLine":2,"endColumn":22},{"ruleId":"419","severity":1,"message":"472","line":18,"column":9,"nodeType":"421","messageId":"422","endLine":18,"endColumn":14},{"ruleId":"412","severity":1,"message":"441","line":46,"column":14,"nodeType":"430","endLine":46,"endColumn":15},{"ruleId":"412","severity":1,"message":"473","line":47,"column":23,"nodeType":"430","endLine":47,"endColumn":24},{"ruleId":"474","severity":1,"message":"475","line":68,"column":38,"nodeType":"476","messageId":"477","endLine":68,"endColumn":40},{"ruleId":"412","severity":1,"message":"413","line":18,"column":5,"nodeType":"414","endLine":18,"endColumn":40,"suggestions":"478"},{"ruleId":"412","severity":1,"message":"479","line":13,"column":5,"nodeType":"414","endLine":13,"endColumn":18,"suggestions":"480"},{"ruleId":"412","severity":1,"message":"481","line":38,"column":5,"nodeType":"414","endLine":38,"endColumn":55,"suggestions":"482"},{"ruleId":"419","severity":1,"message":"483","line":2,"column":22,"nodeType":"421","messageId":"422","endLine":2,"endColumn":26},{"ruleId":"412","severity":1,"message":"429","line":15,"column":14,"nodeType":"430","endLine":15,"endColumn":18},{"ruleId":"419","severity":1,"message":"420","line":4,"column":8,"nodeType":"421","messageId":"422","endLine":4,"endColumn":14},{"ruleId":"412","severity":1,"message":"413","line":28,"column":5,"nodeType":"414","endLine":28,"endColumn":40,"suggestions":"484"},{"ruleId":"412","severity":1,"message":"413","line":24,"column":5,"nodeType":"414","endLine":24,"endColumn":40,"suggestions":"485"},{"ruleId":"419","severity":1,"message":"444","line":1,"column":17,"nodeType":"421","messageId":"422","endLine":1,"endColumn":25},{"ruleId":"412","severity":1,"message":"486","line":14,"column":5,"nodeType":"414","endLine":14,"endColumn":18,"suggestions":"487"},{"ruleId":"419","severity":1,"message":"488","line":12,"column":9,"nodeType":"421","messageId":"422","endLine":12,"endColumn":18},{"ruleId":"419","severity":1,"message":"489","line":13,"column":9,"nodeType":"421","messageId":"422","endLine":13,"endColumn":16},{"ruleId":"412","severity":1,"message":"413","line":19,"column":5,"nodeType":"414","endLine":19,"endColumn":40,"suggestions":"490"},{"ruleId":"412","severity":1,"message":"413","line":39,"column":5,"nodeType":"414","endLine":39,"endColumn":40,"suggestions":"491"},{"ruleId":"419","severity":1,"message":"454","line":10,"column":13,"nodeType":"421","messageId":"422","endLine":10,"endColumn":20},{"ruleId":"419","severity":1,"message":"462","line":1,"column":27,"nodeType":"421","messageId":"422","endLine":1,"endColumn":36},{"ruleId":"419","severity":1,"message":"492","line":3,"column":8,"nodeType":"421","messageId":"422","endLine":3,"endColumn":13},{"ruleId":"419","severity":1,"message":"444","line":1,"column":17,"nodeType":"421","messageId":"422","endLine":1,"endColumn":25},{"ruleId":"412","severity":1,"message":"493","line":14,"column":5,"nodeType":"414","endLine":14,"endColumn":18,"suggestions":"494"},{"ruleId":"412","severity":1,"message":"413","line":30,"column":5,"nodeType":"414","endLine":30,"endColumn":40,"suggestions":"495"},{"ruleId":"419","severity":1,"message":"496","line":2,"column":23,"nodeType":"421","messageId":"422","endLine":2,"endColumn":31},{"ruleId":"419","severity":1,"message":"497","line":46,"column":9,"nodeType":"421","messageId":"422","endLine":46,"endColumn":18},{"ruleId":"412","severity":1,"message":"498","line":41,"column":5,"nodeType":"414","endLine":41,"endColumn":7,"suggestions":"499"},{"ruleId":"412","severity":1,"message":"413","line":19,"column":5,"nodeType":"414","endLine":19,"endColumn":40,"suggestions":"500"},{"ruleId":"412","severity":1,"message":"413","line":19,"column":5,"nodeType":"414","endLine":19,"endColumn":40,"suggestions":"501"},"no-native-reassign",["502"],"no-negated-in-lhs",["503"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'parseTotalData'. Either include it or remove the dependency array.","ArrayExpression",["504"],["505"],["502"],["503"],"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar",["502"],["503"],["502"],["503"],["502"],["503"],"Assignments to the 'FristRow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal",["502"],["503"],"React Hook useEffect has a missing dependency: 'parseTrafficData'. Either include it or remove the dependency array.",["506"],["507"],["508"],"React Hook useEffect has a missing dependency: 'axiosData'. Either include it or remove the dependency array.",["509"],"React Hook useEffect has a missing dependency: 'loginStatus'. Either include it or remove the dependency array.",["510"],"Assignments to the 'countCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'act' is defined but never used.",["511"],"'useState' is defined but never used.",["512"],["513"],["502"],["503"],["514"],["515"],["502"],["503"],["516"],"'actions' is defined but never used.","'Title' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dayEndTime', 'dayStartDate', 'monthEndTime', 'monthStartDate', 'searchEndTime', 'searchStartDate', 'setTempEndTime', 'setTempStartDate', 'weekEndTime', and 'weekStartDate'. Either include them or remove the dependency array.",["517"],"React Hook useEffect has missing dependencies: 'currentLaneNum' and 'parseData'. Either include them or remove the dependency array.",["518"],["502"],["503"],"'useEffect' is defined but never used.","'ref' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTrafficData'. Either include it or remove the dependency array.",["519"],"React Hook useEffect has a missing dependency: 'axiosAsync'. Either include it or remove the dependency array.",["520"],["521"],"'PieChartOutlined' is defined but never used.",["522"],"'Spin' is defined but never used.","'count' is assigned a value but never used.","Assignments to the 'countOverSpeedCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["523"],"React Hook useEffect has a missing dependency: 'parseTraffic'. Either include it or remove the dependency array.",["524"],"React Hook useEffect has a missing dependency: 'getTrafficTotalData'. Either include it or remove the dependency array.",["525"],"'Link' is defined but never used.",["526"],["527"],"React Hook useEffect has a missing dependency: 'parseData'. Either include it or remove the dependency array.",["528"],"'startDate' is assigned a value but never used.","'endTime' is assigned a value but never used.",["529"],["530"],"'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'parseViolationData'. Either include it or remove the dependency array.",["531"],["532"],"'Checkbox' is defined but never used.","'clipboard' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOptions'. Either include it or remove the dependency array.",["533"],["534"],["535"],"no-global-assign","no-unsafe-negation",{"desc":"536","fix":"537"},{"desc":"536","fix":"538"},{"desc":"539","fix":"540"},{"desc":"536","fix":"541"},{"desc":"536","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"536","fix":"547"},{"desc":"536","fix":"548"},{"desc":"549","fix":"550"},{"desc":"536","fix":"551"},{"desc":"536","fix":"552"},{"desc":"536","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},{"desc":"536","fix":"566"},{"desc":"567","fix":"568"},{"desc":"569","fix":"570"},{"desc":"536","fix":"571"},{"desc":"536","fix":"572"},{"desc":"573","fix":"574"},{"desc":"536","fix":"575"},{"desc":"536","fix":"576"},{"desc":"577","fix":"578"},{"desc":"536","fix":"579"},{"desc":"580","fix":"581"},{"desc":"536","fix":"582"},{"desc":"536","fix":"583"},"Update the dependencies array to be: [trafficTotalData, activeVisualKey, parseTotalData]",{"range":"584","text":"585"},{"range":"586","text":"585"},"Update the dependencies array to be: [parseTrafficData, trafficData]",{"range":"587","text":"588"},{"range":"589","text":"585"},{"range":"590","text":"585"},"Update the dependencies array to be: [startDate, endTime, cameraCode, axiosData]",{"range":"591","text":"592"},"Update the dependencies array to be: [loginStatus]",{"range":"593","text":"594"},{"range":"595","text":"585"},{"range":"596","text":"585"},"Update the dependencies array to be: [axiosData, trafficTotalData]",{"range":"597","text":"598"},{"range":"599","text":"585"},{"range":"600","text":"585"},{"range":"601","text":"585"},"Update the dependencies array to be: [dayEndTime, dayStartDate, monthEndTime, monthStartDate, period, searchEndTime, searchStartDate, setTempEndTime, setTempStartDate, weekEndTime, weekStartDate]",{"range":"602","text":"603"},"Update the dependencies array to be: [currentLaneNum, parseData, trafficTotalData]",{"range":"604","text":"605"},"Update the dependencies array to be: [realtimeCamCode, startDate, endTime, getTrafficData]",{"range":"606","text":"607"},"Update the dependencies array to be: [axiosAsync]",{"range":"608","text":"609"},"Update the dependencies array to be: [axiosAsync, refresh]",{"range":"610","text":"611"},"Update the dependencies array to be: [cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",{"range":"612","text":"613"},{"range":"614","text":"585"},"Update the dependencies array to be: [parseTraffic, trafficData]",{"range":"615","text":"616"},"Update the dependencies array to be: [cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",{"range":"617","text":"618"},{"range":"619","text":"585"},{"range":"620","text":"585"},"Update the dependencies array to be: [parseData, trafficData]",{"range":"621","text":"622"},{"range":"623","text":"585"},{"range":"624","text":"585"},"Update the dependencies array to be: [parseViolationData, trafficData]",{"range":"625","text":"626"},{"range":"627","text":"585"},"Update the dependencies array to be: [getOptions]",{"range":"628","text":"629"},{"range":"630","text":"585"},{"range":"631","text":"585"},[468,503],"[trafficTotalData, activeVisualKey, parseTotalData]",[470,505],[383,396],"[parseTrafficData, trafficData]",[713,748],[470,505],[703,735],"[startDate, endTime, cameraCode, axiosData]",[1269,1271],"[loginStatus]",[603,638],[612,647],[559,577],"[axiosData, trafficTotalData]",[609,644],[520,555],[614,649],[1303,1311],"[dayEndTime, dayStartDate, monthEndTime, monthStartDate, period, searchEndTime, searchStartDate, setTempEndTime, setTempStartDate, weekEndTime, weekStartDate]",[600,618],"[currentLaneNum, parseData, trafficTotalData]",[794,831],"[realtimeCamCode, startDate, endTime, getTrafficData]",[1765,1767],"[axiosAsync]",[1874,1883],"[axiosAsync, refresh]",[1614,1662],"[cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",[486,521],[364,377],"[parseTraffic, trafficData]",[1255,1305],"[cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",[657,692],[601,636],[366,379],"[parseData, trafficData]",[477,512],[778,813],[386,399],"[parseViolationData, trafficData]",[656,691],[955,957],"[getOptions]",[480,515],[480,515]]