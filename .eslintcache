[{"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js":"1","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js":"2","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js":"3","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js":"4","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js":"5","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js":"6","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\GenOverSpeed.js":"7","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\GenAvgSpeed.js":"8","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js":"9","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js":"10","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js":"11","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTAvgSpeed.js":"12","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTVehicleRatio.js":"13","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js":"14","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js":"15","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js":"16","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleCnt.js":"17","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js":"18","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js":"19","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js":"20","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js":"21","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js":"22","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js":"23","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js":"24","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PeakHourFlowRate.js":"25","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\bidirectionalBar\\DayNight.js":"26","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js":"27","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PHF.js":"28","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js":"29","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js":"30","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js":"31","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\search\\OverspeedPage.js":"32","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\search\\SearchPage.js":"33","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\login\\LoginPage.js":"34","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js":"35","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SearchAccount.js":"36","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\PasswordPage.js":"37","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\reportWebVitals.js":"38","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js":"39","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js":"40","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MonthPeakTime.js":"41","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTCnt.js":"42","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js":"43","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js":"44","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js":"45","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js":"46","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js":"47","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js":"48","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js":"49","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\notificationButton\\NotificationButton.js":"50","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleRatio.js":"51","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js":"52","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js":"53","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StatContainer.js":"54","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js":"55","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTSecondTable.js":"56","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js":"57","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js":"58","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js":"59","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTPCU.js":"60","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js":"61","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\Peak15.js":"62","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js":"63","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\location.js":"64","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js":"65","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js":"66","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTCnt.js":"67","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\header\\index.js":"68","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js":"69","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\index.js":"70","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountTable\\AccountTable.js":"71","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WMFlowRate.js":"72","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js":"73","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js":"74","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js":"75","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\index.js":"76","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTVehicleRatio.js":"77","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js":"78","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js":"79","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js":"80","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\date.js":"81","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTOverSpeed.js":"82","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js":"83","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StreamingContainer.js":"84","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MLFirstTable.js":"85","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTConcentrationRatio.js":"86","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\LaneTableCard.js":"87","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTFirstTable.js":"88","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTVehicleRatio.js":"89","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\index.js":"90","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WeekPeakTime.js":"91","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\graphCard\\GraphCard.js":"92"},{"size":624,"mtime":1625027535311,"results":"93","hashOfConfig":"94"},{"size":6421,"mtime":1624249825446,"results":"95","hashOfConfig":"94"},{"size":4647,"mtime":1624325385280,"results":"96","hashOfConfig":"94"},{"size":3282,"mtime":1624003749810,"results":"97","hashOfConfig":"94"},{"size":756,"mtime":1624076431170,"results":"98","hashOfConfig":"94"},{"size":4877,"mtime":1624325424761,"results":"99","hashOfConfig":"94"},{"size":2030,"mtime":1624093693728,"results":"100","hashOfConfig":"94"},{"size":2347,"mtime":1624076255187,"results":"101","hashOfConfig":"94"},{"size":3473,"mtime":1624325410926,"results":"102","hashOfConfig":"94"},{"size":7520,"mtime":1624249813725,"results":"103","hashOfConfig":"94"},{"size":2998,"mtime":1623818251754,"results":"104","hashOfConfig":"94"},{"size":2509,"mtime":1623659108900,"results":"105","hashOfConfig":"94"},{"size":2952,"mtime":1623659032045,"results":"106","hashOfConfig":"94"},{"size":3348,"mtime":1624164227077,"results":"107","hashOfConfig":"94"},{"size":2486,"mtime":1624099012114,"results":"108","hashOfConfig":"94"},{"size":6177,"mtime":1624233700637,"results":"109","hashOfConfig":"94"},{"size":2559,"mtime":1623661401399,"results":"110","hashOfConfig":"94"},{"size":2653,"mtime":1623658800169,"results":"111","hashOfConfig":"94"},{"size":4517,"mtime":1624249821671,"results":"112","hashOfConfig":"94"},{"size":22597,"mtime":1624250522664,"results":"113","hashOfConfig":"94"},{"size":3485,"mtime":1624325444362,"results":"114","hashOfConfig":"94"},{"size":7608,"mtime":1624253747987,"results":"115","hashOfConfig":"94"},{"size":673,"mtime":1624325075652,"results":"116","hashOfConfig":"94"},{"size":3355,"mtime":1624164223349,"results":"117","hashOfConfig":"94"},{"size":501,"mtime":1624094762881,"results":"118","hashOfConfig":"94"},{"size":2502,"mtime":1624094907165,"results":"119","hashOfConfig":"94"},{"size":5751,"mtime":1624253708706,"results":"120","hashOfConfig":"94"},{"size":453,"mtime":1617842235449,"results":"121","hashOfConfig":"94"},{"size":3879,"mtime":1624249786022,"results":"122","hashOfConfig":"94"},{"size":3788,"mtime":1624095881905,"results":"123","hashOfConfig":"94"},{"size":4002,"mtime":1624161626574,"results":"124","hashOfConfig":"94"},{"size":3349,"mtime":1624098204050,"results":"125","hashOfConfig":"94"},{"size":2344,"mtime":1624164532895,"results":"126","hashOfConfig":"94"},{"size":1299,"mtime":1624098258128,"results":"127","hashOfConfig":"94"},{"size":1361,"mtime":1624098270393,"results":"128","hashOfConfig":"94"},{"size":1241,"mtime":1624098287899,"results":"129","hashOfConfig":"94"},{"size":1211,"mtime":1624098296483,"results":"130","hashOfConfig":"94"},{"size":362,"mtime":1608013233748,"results":"131","hashOfConfig":"94"},{"size":8067,"mtime":1624336303104,"results":"132","hashOfConfig":"94"},{"size":2491,"mtime":1620720342553,"results":"133","hashOfConfig":"94"},{"size":2415,"mtime":1623660107847,"results":"134","hashOfConfig":"94"},{"size":2410,"mtime":1623651212940,"results":"135","hashOfConfig":"94"},{"size":2593,"mtime":1625025312933,"results":"136","hashOfConfig":"94"},{"size":410,"mtime":1623724067228,"results":"137","hashOfConfig":"94"},{"size":1405,"mtime":1623299522023,"results":"138","hashOfConfig":"94"},{"size":652,"mtime":1616735276373,"results":"139","hashOfConfig":"94"},{"size":2087,"mtime":1624256445127,"results":"140","hashOfConfig":"94"},{"size":3738,"mtime":1624254637599,"results":"141","hashOfConfig":"94"},{"size":1952,"mtime":1623299526947,"results":"142","hashOfConfig":"94"},{"size":630,"mtime":1623977338018,"results":"143","hashOfConfig":"94"},{"size":2795,"mtime":1623661431418,"results":"144","hashOfConfig":"94"},{"size":2590,"mtime":1623659513647,"results":"145","hashOfConfig":"94"},{"size":5684,"mtime":1623977384731,"results":"146","hashOfConfig":"94"},{"size":410,"mtime":1616232271503,"results":"147","hashOfConfig":"94"},{"size":542,"mtime":1624325314367,"results":"148","hashOfConfig":"94"},{"size":3449,"mtime":1624233585567,"results":"149","hashOfConfig":"94"},{"size":2646,"mtime":1623661568778,"results":"150","hashOfConfig":"94"},{"size":5711,"mtime":1623299474625,"results":"151","hashOfConfig":"94"},{"size":1848,"mtime":1623214846560,"results":"152","hashOfConfig":"94"},{"size":2508,"mtime":1623658811753,"results":"153","hashOfConfig":"94"},{"size":2684,"mtime":1623661445346,"results":"154","hashOfConfig":"94"},{"size":486,"mtime":1616236053868,"results":"155","hashOfConfig":"94"},{"size":6783,"mtime":1624249809366,"results":"156","hashOfConfig":"94"},{"size":446,"mtime":1616033614053,"results":"157","hashOfConfig":"94"},{"size":1673,"mtime":1623977340214,"results":"158","hashOfConfig":"94"},{"size":2314,"mtime":1623661438328,"results":"159","hashOfConfig":"94"},{"size":2604,"mtime":1623658738768,"results":"160","hashOfConfig":"94"},{"size":1333,"mtime":1624325116890,"results":"161","hashOfConfig":"94"},{"size":2509,"mtime":1623659091405,"results":"162","hashOfConfig":"94"},{"size":568,"mtime":1624948388662,"results":"163","hashOfConfig":"94"},{"size":5499,"mtime":1623995191105,"results":"164","hashOfConfig":"94"},{"size":2091,"mtime":1624249797647,"results":"165","hashOfConfig":"94"},{"size":2502,"mtime":1623658764138,"results":"166","hashOfConfig":"94"},{"size":6050,"mtime":1624233686778,"results":"167","hashOfConfig":"94"},{"size":745,"mtime":1617842272800,"results":"168","hashOfConfig":"94"},{"size":270,"mtime":1623139553556,"results":"169","hashOfConfig":"94"},{"size":2368,"mtime":1623977345055,"results":"170","hashOfConfig":"94"},{"size":3645,"mtime":1623299515541,"results":"171","hashOfConfig":"94"},{"size":2467,"mtime":1623659211703,"results":"172","hashOfConfig":"94"},{"size":2604,"mtime":1623659100302,"results":"173","hashOfConfig":"94"},{"size":286,"mtime":1624253753452,"results":"174","hashOfConfig":"94"},{"size":2469,"mtime":1623659197488,"results":"175","hashOfConfig":"94"},{"size":8723,"mtime":1625538140882,"results":"176","hashOfConfig":"94"},{"size":901,"mtime":1623977483862,"results":"177","hashOfConfig":"94"},{"size":5717,"mtime":1623299497704,"results":"178","hashOfConfig":"94"},{"size":1927,"mtime":1623718566080,"results":"179","hashOfConfig":"94"},{"size":910,"mtime":1623297261880,"results":"180","hashOfConfig":"94"},{"size":6217,"mtime":1623299484581,"results":"181","hashOfConfig":"94"},{"size":2370,"mtime":1623977349062,"results":"182","hashOfConfig":"94"},{"size":5386,"mtime":1625025361779,"results":"183","hashOfConfig":"94"},{"size":2602,"mtime":1623659586305,"results":"184","hashOfConfig":"94"},{"size":793,"mtime":1623718797398,"results":"185","hashOfConfig":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12xqqm0",{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"210"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"202"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"206"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"210"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"235"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"215"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"202"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"226"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"206"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"295"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"196"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"226"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"210"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"321"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"321"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"239"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"196"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"337"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"348"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"215"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"256"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"235"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"239"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"321"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"196"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"218"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"259"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"191"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"226"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"256"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"321"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"337"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js",["431","432"],"import React, { useEffect, useState } from \"react\";\r\nimport { Layout, message, Typography, Button, Tooltip } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport StatContainer from \"../../organisms/videoContainer/StatContainer\";\r\nimport GeneralVisualization from \"../../organisms/generalVisualization/GeneralVisualization\";\r\nimport TimeTableCard from \"../../molecules/tableCard/TimeTableCard\";\r\nimport CascaderBtn from \"../../atoms/cascaderBtn/CascaderBtn\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst RealtimeStatisticPage = (props) => {\r\n\tconst {\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\tcity,\r\n\t\tdistrict,\r\n\t\troad,\r\n\t\tspot,\r\n\t\tcamera,\r\n\t\tcamAddress,\r\n\t\tcameraCode,\r\n\t\tsetLoggedIn,\r\n\t\tisMaster,\r\n\t\tsetRealFirstFilter,\r\n\t\trealFirstFilter,\r\n\t} = props;\r\n\tconst { Content } = Layout;\r\n\tconst { Title } = Typography;\r\n\tconst history = useHistory();\r\n\r\n\tconst [trafficTotalData, setTrafficTotalData] = useState([]);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [currTime, setCurrTime] = useState(\r\n\t\tmoment(new Date()).subtract(1, \"second\")\r\n\t);\r\n\tconst [refresh, setRefresh] = useState(false);\r\n\tconst [locationHierarchy, setLocationHierarchy] = useState([]);\r\n\tconst [pageTitle, setPageTitle] = useState(\"실시간 통계\");\r\n\r\n\tconst date = moment(new Date()).format(\"YYYY-MM-DD\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (realFirstFilter) {\r\n\t\t\tsetEmptyData(false);\r\n\t\t\tsetTrafficTotalData([]);\r\n\t\t\taxiosAsync();\r\n\t\t\tsetLocationHierarchy([city, district, road, spot]);\r\n\t\t\tsetPageTitle(`실시간 통계 | ${camera} 카메라`);\r\n\t\t} else {\r\n\t\t\tsetLocationHierarchy([]);\r\n\t\t\tsetPageTitle(\"실시간 통계\");\r\n\t\t}\r\n\t}, [cameraCode, currTime, refresh, realFirstFilter]);\r\n\r\n\tconst axiosAsync = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${trafficURL}/daily?camCode=${cameraCode}&startDate=${date}&endTime=${date} ${currTime.format(\r\n\t\t\t\t\t\"HH:mm:ss\"\r\n\t\t\t\t)}&axis=time&laneNumber=0`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetTrafficTotalData(res.data);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t\tif (refresh) {\r\n\t\t\t\t\t\tmessage.success(\"새로고침 성공\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t\tmessage.warning(\"해당 기간 데이터가 없습니다\");\r\n\t\t\t\t}\r\n\t\t\t\tsetRefresh(false);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t\tsetRefresh(false);\r\n\t\t\t\tif (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\r\n\t\t\t\t\t\t\"네트워크 문제 혹은 일시적인 오류로 데이터를 불러올 수 없습니다\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (err.response.status === 400) {\r\n\t\t\t\t\tmessage.warning(\"분석이 완료되지 않은 기간에 대한 검색입니다\");\r\n\t\t\t\t} else if (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\tconst handleRefresh = () => {\r\n\t\tconst currNewDate = new Date();\r\n\t\tif (\r\n\t\t\tcurrTime.hour() === currNewDate.getHours() &&\r\n\t\t\tMath.floor(currTime.minute() / 15) * 15 ===\r\n\t\t\t\tMath.floor(moment(currNewDate).minute() / 15) * 15\r\n\t\t) {\r\n\t\t\tmessage.success(\"새로운 데이터가 없습니다\");\r\n\t\t} else {\r\n\t\t\tsetCurrTime(moment(new Date()));\r\n\t\t\tsetRefresh(true);\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"realtime-statistic-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb\r\n\t\t\t\t\t\t\tpageHierarchy={[\"대시보드\", \"실시간 데이터\"]}\r\n\t\t\t\t\t\t\tlocationHierarchy={locationHierarchy}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\tplacement=\"topLeft\"\r\n\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\"검색한 구간의 실시간 영상, 교통 정보를 그래프 및 표 형식으로 확인 할 수 있는 페이지 입니다\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Title level={3} style={{ width: 450, marginBottom: 0 }}>\r\n\t\t\t\t\t\t\t\t{pageTitle}\r\n\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t<div className=\"page-search\">\r\n\t\t\t\t\t\t\t<CascaderBtn\r\n\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\tsize=\"middle\"\r\n\t\t\t\t\t\t\t\tsetRealFirstFilter={setRealFirstFilter}\r\n\t\t\t\t\t\t\t\trealFirstFilter={realFirstFilter}\r\n\t\t\t\t\t\t\t\tpage=\"REALSTATISTIC\"\r\n\t\t\t\t\t\t\t\ttooltipText=\"검색을 통해 해당 구간의 실시간 데이터를 조회 가능합니다\"\r\n\t\t\t\t\t\t\t\tcascaderText=\"검색 희망하는 구간을 선택하세요\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{realFirstFilter && (\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"topLeft\"\r\n\t\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t\t\"해당 구간의 교통 정보가 최근 15분까지의 데이터를 포함하여 업데이트됩니다\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={handleRefresh} style={{ marginTop: 0 }}>\r\n\t\t\t\t\t\t\t\t\t\t새로고침\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{realFirstFilter ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div className=\"realtime-statistic-video-and-graph\">\r\n\t\t\t\t\t\t\t\t\t<StatContainer camName={camera} httpAddress={camAddress} />\r\n\t\t\t\t\t\t\t\t\t<div className=\"realtime-statistic-graph\">\r\n\t\t\t\t\t\t\t\t\t\t<GeneralVisualization\r\n\t\t\t\t\t\t\t\t\t\t\tpage=\"REALSTATISTIC\"\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={date}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={date}\r\n\t\t\t\t\t\t\t\t\t\t\tcurrentTime={currTime.format(\"HH:mm:ss\")}\r\n\t\t\t\t\t\t\t\t\t\t\trefresh={refresh}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<TimeTableCard\r\n\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\tpage=\"REALSTATISTIC\"\r\n\t\t\t\t\t\t\t\t\ttableKey=\"first\"\r\n\t\t\t\t\t\t\t\t\tcurrentLaneNum=\"0\"\r\n\t\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\t\tstartDate={date}\r\n\t\t\t\t\t\t\t\t\tendTime={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currTime}\r\n\t\t\t\t\t\t\t\t\tisEmptyData={isEmptyData}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t\tcity: state.location.city,\r\n\t\tdistrict: state.location.district,\r\n\t\troad: state.location.road,\r\n\t\tspot: state.location.spot,\r\n\t\tcamera: state.location.camera,\r\n\t\tcamAddress: state.locationCode.camAddress,\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(RealtimeStatisticPage);\r\n",["433","434"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js",[],["435","436"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js",["437","438"],"import React, { useEffect, useState } from \"react\";\r\nimport { Spin, Typography } from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport VisualizationCard from \"../../molecules/genVisualizationCard/GenVisualizationCard\";\r\nimport VehicleRatio from \"../../charts/doughnutChart/VehicleRatio\";\r\nimport AvgSpeedGauge from \"../../charts/gaugeChart/AvgSpeed\";\r\nimport AvgSpeedBar from \"../../charts/barChart/GenAvgSpeed\";\r\nimport OverSpeedBar from \"../../charts/barChart/GenOverSpeed\";\r\nimport NotificationButton from \"../../atoms/notificationButton/NotificationButton\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst GeneralVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tpage,\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcurrentTime,\r\n\t\tcameraCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\trefresh,\r\n\t\tsetLoggedIn,\r\n\t} = props;\r\n\tconst { Paragraph, Text } = Typography;\r\n\r\n\tconst [isLoadingTraffic, setLoadingTraffic] = useState(true);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [trafficData, setTrafficData] = useState([]);\r\n\tconst [curEndTime, setCurEndTime] = useState(\"\");\r\n\r\n\tvar curTime = currentTime ? currentTime : \"23:59:59\";\r\n\tconst periodURL =\r\n\t\tperiod === \"DAY\" ? \"/daily\" : period === \"WEEK\" ? \"/weekly\" : \"/monthly\";\r\n\tconst title = page === \"REALSTATISTIC\" ? `| 00:00 ~ ${curEndTime} ` : \"\";\r\n\tconst descriptionText = (\r\n\t\t<>\r\n\t\t\t<Paragraph>\r\n\t\t\t\t해당하는 구간의 차종별 통계 정보와 평균 속도에 대한 정보를 그래프로\r\n\t\t\t\t표시합니다\r\n\t\t\t</Paragraph>\r\n\t\t\t<Paragraph>표시항목:</Paragraph>\r\n\t\t\t<Paragraph>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>통행량</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>차종 별 과속 차량 수</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>전체 차량 평균속도</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>차종 별 평균 속도</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<Paragraph>*항목별 상세사항은 매뉴얼에 기재 됨</Paragraph>\r\n\t\t\t</Paragraph>\r\n\t\t</>\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEmptyData(false);\r\n\t\tsetLoadingTraffic(true);\r\n\t\tsetTrafficData([]);\r\n\t\tgetTrafficData();\r\n\t}, [cameraCode, startDate, endTime, currentTime]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (refresh) {\r\n\t\t\tsetEmptyData(false);\r\n\t\t\tsetLoadingTraffic(true);\r\n\t\t\tsetTrafficData([]);\r\n\t\t\tgetTrafficData();\r\n\t\t}\r\n\t}, [refresh]);\r\n\r\n\tconst getTrafficData = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} ${curTime}&axis=time&laneNumber=0`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetTrafficData(res.data);\r\n\t\t\t\t\tsetCurEndTime(\r\n\t\t\t\t\t\tmoment(new Date(res.data[res.data.length - 1].recordTime))\r\n\t\t\t\t\t\t\t.add(15, \"m\")\r\n\t\t\t\t\t\t\t.format(\"HH:mm\")\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetLoadingTraffic(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isEmptyData && !isLoadingTraffic && (\r\n\t\t\t\t<NotificationButton description={descriptionText} />\r\n\t\t\t)}\r\n\t\t\t<div className=\"general-graph-layout\">\r\n\t\t\t\t{!isEmptyData ? (\r\n\t\t\t\t\tisLoadingTraffic ? (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\t\t\ttitle={`차종별 통행량 ${title}`}\r\n\t\t\t\t\t\t\t\t\tchart={<VehicleRatio trafficData={trafficData} page={page} />}\r\n\t\t\t\t\t\t\t\t\taxisInfo={false}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\t\t\ttitle={`차종별 과속차량 ${title}`}\r\n\t\t\t\t\t\t\t\t\tchart={<OverSpeedBar trafficData={trafficData} page={page} />}\r\n\t\t\t\t\t\t\t\t\taxisInfo={true}\r\n\t\t\t\t\t\t\t\t\tyAxis={\"대수(대)\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\t\t\ttitle={`평균속도 ${title}`}\r\n\t\t\t\t\t\t\t\t\tchart={\r\n\t\t\t\t\t\t\t\t\t\t<AvgSpeedGauge trafficData={trafficData} page={page} />\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\taxisInfo={false}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\t\t\ttitle={`차종별 평균속도 ${title}`}\r\n\t\t\t\t\t\t\t\t\tchart={<AvgSpeedBar trafficData={trafficData} page={page} />}\r\n\t\t\t\t\t\t\t\t\taxisInfo={true}\r\n\t\t\t\t\t\t\t\t\tyAxis={\"속도(km/h)\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(GeneralVisualization);\r\n",["439","440"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\GenOverSpeed.js",["441"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst GeneralAvgSpeed = (props) => {\r\n\tconst { trafficData, page } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\tparseTotalData();\r\n\t}, [trafficData]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar TotalData = [\r\n\t\t\t{ type: \"승용차\", value: 0 },\r\n\t\t\t{ type: \"버스\", value: 0 },\r\n\t\t\t{ type: \"화물차\", value: 0 },\r\n\t\t\t{ type: \"오토바이\", value: 0 },\r\n\t\t];\r\n\t\tvar data = {\r\n\t\t\tcarSpdVolume: 0,\r\n\t\t\tmBusSpdVolume: 0,\r\n\t\t\tmTruckSpdVolume: 0,\r\n\t\t\tmotorSpdVolume: 0,\r\n\t\t};\r\n\t\tif (page === \"STREAMING\") {\r\n\t\t\tdata = trafficData[trafficData.length - 1];\r\n\t\t} else if (page === \"REALSTATISTIC\") {\r\n\t\t\ttrafficData.forEach((eachData) => {\r\n\t\t\t\tdata[\"carSpdVolume\"] += eachData[\"carSpdVolume\"];\r\n\t\t\t\tdata[\"mBusSpdVolume\"] += eachData[\"mBusSpdVolume\"];\r\n\t\t\t\tdata[\"mTruckSpdVolume\"] += eachData[\"mTruckSpdVolume\"];\r\n\t\t\t\tdata[\"motorSpdVolume\"] += eachData[\"motorSpdVolume\"];\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdata = trafficData[0];\r\n\t\t}\r\n\t\tTotalData[0].value = data[\"carSpdVolume\"];\r\n\t\tTotalData[1].value = data[\"mBusSpdVolume\"];\r\n\t\tTotalData[2].value = data[\"mTruckSpdVolume\"];\r\n\t\tTotalData[3].value = data[\"motorSpdVolume\"];\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"type\",\r\n\t\tyField: \"value\",\r\n\t\tautoFit: true,\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfill: \"#FFFFFF\",\r\n\t\t\t\topacity: 0.6,\r\n\t\t\t},\r\n\t\t},\r\n\t\tmeta: {\r\n\t\t\ttype: { alias: \"차종\" },\r\n\t\t\tvalue: { alias: \"과속대수\" },\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default GeneralAvgSpeed;\r\n",["442","443"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\GenAvgSpeed.js",["444"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst GeneralOverSpeed = (props) => {\r\n\tconst { trafficData, page } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\tparseTotalData();\r\n\t}, [trafficData]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar TotalData = [\r\n\t\t\t{ type: \"승용차\", value: 0 },\r\n\t\t\t{ type: \"버스\", value: 0 },\r\n\t\t\t{ type: \"화물차\", value: 0 },\r\n\t\t\t{ type: \"오토바이\", value: 0 },\r\n\t\t];\r\n\t\tvar data = {\r\n\t\t\tcarAvgSpeed: 0,\r\n\t\t\tmBusAvgSpeed: 0,\r\n\t\t\tmTruckAvgSpeed: 0,\r\n\t\t\tmotorAvgSpeed: 0,\r\n\t\t};\r\n\t\tif (page === \"REALSTATISTIC\") {\r\n\t\t\ttrafficData.forEach((eachData) => {\r\n\t\t\t\tdata[\"carAvgSpeed\"] += eachData[\"carAvgSpeed\"];\r\n\t\t\t\tdata[\"mBusAvgSpeed\"] += eachData[\"mBusAvgSpeed\"];\r\n\t\t\t\tdata[\"mTruckAvgSpeed\"] += eachData[\"mTruckAvgSpeed\"];\r\n\t\t\t\tdata[\"motorAvgSpeed\"] += eachData[\"motorAvgSpeed\"];\r\n\t\t\t});\r\n\t\t\tlet length = trafficData.length;\r\n\t\t\tdata[\"carAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"carAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t\tdata[\"mBusAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"mBusAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t\tdata[\"mTruckAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"mTruckAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t\tdata[\"motorAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"motorAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tdata = trafficData[0];\r\n\t\t}\r\n\r\n\t\tTotalData[0].value = data[\"carAvgSpeed\"];\r\n\t\tTotalData[1].value = data[\"mBusAvgSpeed\"];\r\n\t\tTotalData[2].value = data[\"mTruckAvgSpeed\"];\r\n\t\tTotalData[3].value = data[\"motorAvgSpeed\"];\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"type\",\r\n\t\tyField: \"value\",\r\n\t\tautoFit: true,\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfill: \"#FFFFFF\",\r\n\t\t\t\topacity: 0.6,\r\n\t\t\t},\r\n\t\t},\r\n\t\tmeta: {\r\n\t\t\ttype: { alias: \"차종\" },\r\n\t\t\tvalue: { alias: \"평균속도\" },\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default GeneralOverSpeed;\r\n",["445","446"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js",["447"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js",[],["448","449"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js",[],["450","451"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTAvgSpeed.js",["452"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst MTAvgSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar avgSpeedTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleAvgSpeed;\r\n\t\t\ttempTotal[\"category\"] = \"천제\";\r\n\r\n\t\t\tavgSpeedTotalData.push(tempCar);\r\n\t\t\tavgSpeedTotalData.push(tempBus);\r\n\t\t\tavgSpeedTotalData.push(tempTruck);\r\n\t\t\tavgSpeedTotalData.push(tempMotor);\r\n\t\t\tavgSpeedTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(avgSpeedTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MTAvgSpeed;\r\n",["453","454"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTVehicleRatio.js",["455"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst VehicleRatio = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"3\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar carRatio = [];\r\n\t\tvar busRatio = [];\r\n\t\tvar truckRatio = [];\r\n\t\tvar motorRatio = [];\r\n\t\tvar RatioTotalData = [];\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\r\n\t\t\ttempCar[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempCar[\"value\"] = parseFloat((carVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempBus[\"value\"] = parseFloat((mBusVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempTruck[\"value\"] = parseFloat((mTruckVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempMotor[\"value\"] = parseFloat((motorVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\r\n\t\t\tcarRatio.push(tempCar);\r\n\t\t\tbusRatio.push(tempBus);\r\n\t\t\ttruckRatio.push(tempTruck);\r\n\t\t\tmotorRatio.push(tempMotor);\r\n\t\t});\r\n\t\tRatioTotalData = carRatio.concat(\r\n\t\t\tbusRatio.concat(truckRatio.concat(motorRatio))\r\n\t\t);\r\n\t\tsetData(RatioTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"%\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default VehicleRatio;\r\n",["456","457"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js",["458"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Spin } from \"antd\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport GeneralVisualization from \"../../organisms/generalVisualization/GeneralVisualization\";\r\nimport TimeStatistic from \"../../organisms/visualStatistic/timeStat/TimeStat\";\r\nimport LaneStatistic from \"../../organisms/visualStatistic/laneStat/LaneStat\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst WeekStatPage = (props) => {\r\n\tconst { setLoggedIn, isMaster, setRealFirstFilter } = props;\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [additionalFilter, setAddFilter] = useState(\"ALL\");\r\n\tconst [count, setCount] = useState(false);\r\n\tconst [emptyErr, setEmptyErr] = useState(false);\r\n\tconst [futureErr, setFutureErr] = useState(false);\r\n\r\n\tconst { Content } = Layout;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"statistic-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"통계 분석\", \"주간 별\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"WEEK\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tfirstFilter={firstFilter}\r\n\t\t\t\t\t\t\tsetAddFilter={setAddFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\temptyErr={emptyErr}\r\n\t\t\t\t\t\t\tfutureErr={futureErr}\r\n\t\t\t\t\t\t\tcascaderText=\"확인을 희망하는 구간을 선택하세요\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\tcount ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<GeneralVisualization\r\n\t\t\t\t\t\t\t\t\t\tperiod=\"WEEK\"\r\n\t\t\t\t\t\t\t\t\t\tpage=\"WEEK\"\r\n\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\trefresh={false}\r\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{timeClassification ? (\r\n\t\t\t\t\t\t\t\t\t\t<TimeStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"WEEK\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t\tsetEmptyErr={setEmptyErr}\r\n\t\t\t\t\t\t\t\t\t\t\tsetFutureErr={setFutureErr}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<LaneStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"WEEK\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\tadditionalFilter={additionalFilter}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t\tsetEmptyErr={setEmptyErr}\r\n\t\t\t\t\t\t\t\t\t\t\tsetFutureErr={setFutureErr}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WeekStatPage;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js",["459"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst MTFirstTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar countCol;\r\n\r\n\tuseEffect(() => {\r\n\t\tcountCol = 0;\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t\tkey: \"time\",\r\n\t\t\twidth: 120,\r\n\t\t\ttextWrap: \"word-break\",\r\n\t\t\tellipsis: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tkey: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tkey: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tkey: \"bus\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tkey: \"truck\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"오토바이\",\r\n\t\t\tkey: \"motor\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"motorpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\tvar TotalData = [];\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (countCol < 3) {\r\n\t\t\t\tif (countCol === 0) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"월간전체\";\r\n\t\t\t\t} else if (countCol === 1) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"평일전체\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"주말전체\";\r\n\t\t\t\t}\r\n\t\t\t\tcountCol += 1;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"time\"] = moment(recordDate).format(\"YYYY년 MM월 DD일\");\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tdataSource={Data}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tpagination={{ hideOnSinglePage: true }}\r\n\t\t\t\t\tbordered\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MTFirstTable;\r\n",["460","461"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleCnt.js",["462"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst VehicleCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"1\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar cntCar = [];\r\n\t\tvar cntBus = [];\r\n\t\tvar cntTruck = [];\r\n\t\tvar cntMotor = [];\r\n\t\tvar cntTotalData = [];\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst { laneNumber, carVolume, mBusVolume, mTruckVolume, motorVolume } =\r\n\t\t\t\tTrafficData;\r\n\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\r\n\t\t\ttempCar[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carVolume;\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusVolume;\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckVolume;\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorVolume;\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\r\n\t\t\tcntCar.push(tempCar);\r\n\t\t\tcntBus.push(tempBus);\r\n\t\t\tcntTruck.push(tempTruck);\r\n\t\t\tcntMotor.push(tempMotor);\r\n\t\t});\r\n\t\tcntTotalData = cntCar.concat(cntBus.concat(cntTruck.concat(cntMotor)));\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"laneNum\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default VehicleCnt;\r\n",["463","464"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js",["465"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTPCU = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar TotalData = [];\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tlet tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehiclePassengerCarUnit;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlegend: true,\r\n\t\tseriesField: \"key\",\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTPCU;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js",["466","467","468","469","470","471"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js",["472"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js",["473"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Spin } from \"antd\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport GeneralVisualization from \"../../organisms/generalVisualization/GeneralVisualization\";\r\nimport TimeStatistic from \"../../organisms/visualStatistic/timeStat/TimeStat\";\r\nimport LaneStatistic from \"../../organisms/visualStatistic/laneStat/LaneStat\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst MonthStatPage = (props) => {\r\n\tconst { setLoggedIn, isMaster, setRealFirstFilter } = props;\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [additionalFilter, setAddFilter] = useState(\"ALL\");\r\n\tconst [count, setCount] = useState(false);\r\n\tconst [emptyErr, setEmptyErr] = useState(false);\r\n\tconst [futureErr, setFutureErr] = useState(false);\r\n\r\n\tconst { Content } = Layout;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"statistic-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"통계 분석\", \"월간 별\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"MONTH\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tfirstFilter={firstFilter}\r\n\t\t\t\t\t\t\tsetAddFilter={setAddFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\temptyErr={emptyErr}\r\n\t\t\t\t\t\t\tfutureErr={futureErr}\r\n\t\t\t\t\t\t\tcascaderText=\"확인을 희망하는 구간을 선택하세요\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\tcount ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<GeneralVisualization\r\n\t\t\t\t\t\t\t\t\t\tperiod=\"MONTH\"\r\n\t\t\t\t\t\t\t\t\t\tpage=\"MONTH\"\r\n\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\trefresh={false}\r\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{timeClassification ? (\r\n\t\t\t\t\t\t\t\t\t\t<TimeStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"MONTH\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t\tsetEmptyErr={setEmptyErr}\r\n\t\t\t\t\t\t\t\t\t\t\tsetFutureErr={setFutureErr}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<LaneStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"MONTH\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\tadditionalFilter={additionalFilter}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t\tsetEmptyErr={setEmptyErr}\r\n\t\t\t\t\t\t\t\t\t\t\tsetFutureErr={setFutureErr}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MonthStatPage;\r\n",["474","475"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PeakHourFlowRate.js",[],["476","477"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\bidirectionalBar\\DayNight.js",["478"],"import React, { useState, useEffect } from \"react\";\r\nimport { BidirectionalBar } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst MyBidirectionalBar = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"6\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar dataSample = [\r\n\t\t\t{\r\n\t\t\t\t차종: \"승용차(대)\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t차종: \"버스(대)\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t차종: \"화물차(대)\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t차종: \"오토바이(대)\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t];\r\n\t\tvar trafficData = trafficTotalData[0];\r\n\r\n\t\tdataSample[0][\"야간 12시간 교통량\"] = trafficData[\"carNighttimeVolume\"];\r\n\t\tdataSample[1][\"야간 12시간 교통량\"] = trafficData[\"mBusNighttimeVolume\"];\r\n\t\tdataSample[2][\"야간 12시간 교통량\"] = trafficData[\"mTruckNighttimeVolume\"];\r\n\t\tdataSample[3][\"야간 12시간 교통량\"] = trafficData[\"motorNighttimeVolume\"];\r\n\r\n\t\tdataSample[0][\"주간 12시간 교통량\"] = trafficData[\"carDaytimeVolume\"];\r\n\t\tdataSample[1][\"주간 12시간 교통량\"] = trafficData[\"mBusDaytimeVolume\"];\r\n\t\tdataSample[2][\"주간 12시간 교통량\"] = trafficData[\"mTruckDaytimeVolume\"];\r\n\t\tdataSample[3][\"주간 12시간 교통량\"] = trafficData[\"motorDaytimeVolume\"];\r\n\t\tsetData(dataSample);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\twidth: 400,\r\n\t\theight: 400,\r\n\t\txField: \"차종\",\r\n\t\txAxis: { position: \"bottom\" },\r\n\t\tinteractions: [{ type: \"active-region\" }],\r\n\t\tyField: [\"주간 12시간 교통량\", \"야간 12시간 교통량\"],\r\n\t\ttooltip: {\r\n\t\t\tshared: true,\r\n\t\t\tshowMarkers: false,\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<BidirectionalBar {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MyBidirectionalBar;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js",["479","480"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PHF.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js",["481"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst MTSecondTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tvar TotalData = [];\r\n\r\n\tvar countCol;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentLaneNum === 0) {\r\n\t\t\tcountCol = 0;\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseData();\r\n\t\t}\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"totalDayNightRatio\",\r\n\t\t\t\t\tkey: \"totalNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"totalPHF\",\r\n\t\t\t\t\tkey: \"totalPHF\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"totalPeekHourCnt\",\r\n\t\t\t\t\tkey: \"totalPeekHourCnt\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"집중률\",\r\n\t\t\t\t\tdataIndex: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t\tkey: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"차종별 주야율\",\r\n\t\t\tdataIndex: \"TypeDayNightRatio\",\r\n\t\t\tkey: \"TypeNightRatio\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\t\tdataIndex: \"carDayNightRatio\",\r\n\t\t\t\t\tkey: \"carNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"버스\",\r\n\t\t\t\t\tdataIndex: \"busDayNightRatio\",\r\n\t\t\t\t\tkey: \"busNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\t\tdataIndex: \"truckDayNightRatio\",\r\n\t\t\t\t\tkey: \"truckNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"오토바이\",\r\n\t\t\t\t\tdataIndex: \"motorDayNightRatio\",\r\n\t\t\t\t\tkey: \"motorNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\tconst parseData = () => {\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehicleDayNightRatio,\r\n\t\t\t\ttotalVehiclePeakHourFactor,\r\n\t\t\t\ttotalVehiclePeakHourConcentrationRatio,\r\n\t\t\t\ttotalVehiclePeakHourFlowRate,\r\n\t\t\t\tcarDayNightRatio,\r\n\t\t\t\tmBusDayNightRatio,\r\n\t\t\t\tmTruckDayNightRatio,\r\n\t\t\t\tmotorDayNightRatio,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (countCol < 3) {\r\n\t\t\t\tif (countCol === 0) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"월간전체\";\r\n\t\t\t\t} else if (countCol === 1) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"평일전체\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"주말전체\";\r\n\t\t\t\t}\r\n\t\t\t\tcountCol += 1;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"time\"] = moment(recordDate).format(\"YYYY년 MM월 DD일\");\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalDayNightRatio\"] = !totalVehicleDayNightRatio\r\n\t\t\t\t? \"-\"\r\n\t\t\t\t: totalVehicleDayNightRatio;\r\n\t\t\tdataTemp[\"totalPHF\"] = !totalVehiclePeakHourFactor\r\n\t\t\t\t? \"-\"\r\n\t\t\t\t: totalVehiclePeakHourFactor;\r\n\t\t\tdataTemp[\"totalPeekHourCnt\"] = !totalVehiclePeakHourFlowRate\r\n\t\t\t\t? \"-\"\r\n\t\t\t\t: totalVehiclePeakHourFlowRate;\r\n\t\t\tdataTemp[\"totalVehiclePeakHourConcentrationRatio\"] =\r\n\t\t\t\t!totalVehiclePeakHourConcentrationRatio\r\n\t\t\t\t\t? \"-\"\r\n\t\t\t\t\t: totalVehiclePeakHourConcentrationRatio;\r\n\r\n\t\t\tdataTemp[\"carDayNightRatio\"] = !carDayNightRatio ? \"-\" : carDayNightRatio;\r\n\t\t\tdataTemp[\"busDayNightRatio\"] = !mBusDayNightRatio\r\n\t\t\t\t? \"-\"\r\n\t\t\t\t: mBusDayNightRatio;\r\n\t\t\tdataTemp[\"truckDayNightRatio\"] = !mTruckDayNightRatio\r\n\t\t\t\t? \"-\"\r\n\t\t\t\t: mTruckDayNightRatio;\r\n\t\t\tdataTemp[\"motorDayNightRatio\"] = !motorDayNightRatio\r\n\t\t\t\t? \"-\"\r\n\t\t\t\t: motorDayNightRatio;\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tdataSource={Data}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tpagination={{ hideOnSinglePage: true }}\r\n\t\t\t\t\tbordered\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MTSecondTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js",["482"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js",["483","484"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Tooltip, Typography } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport VideoContainer from \"../../organisms/videoContainer/StreamingContainer\";\r\nimport CascaderBtn from \"../../atoms/cascaderBtn/CascaderBtn\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst RealtimeStreamingPage = (props) => {\r\n\tconst { setLoggedIn, isMaster, setRealFirstFilter, realFirstFilter } = props;\r\n\r\n\tconst { Content } = Layout;\r\n\tconst { Title } = Typography;\r\n\r\n\tconst [camNameAdd, setCamNameAdd] = useState({});\r\n\tconst [isLoadingNameAdd, setLoadingNameAdd] = useState(true);\r\n\tconst [currNameAdd, setCurrNameAdd] = useState({});\r\n\tconst [isCurrLoading, setCurrLoading] = useState(true);\r\n\r\n\tconst date = moment(new Date()).format(\"YYYY-MM-DD\");\r\n\tconst currentTime = moment(new Date()).format(\"HH:mm:ss\");\r\n\r\n\tvar timer;\r\n\tconst spinTimer = () => {\r\n\t\tsetCurrLoading(true);\r\n\t\tif (timer) {\r\n\t\t\tclearTimeout(timer);\r\n\t\t}\r\n\t\ttimer = setTimeout(() => {\r\n\t\t\tsetCurrNameAdd(camNameAdd);\r\n\t\t\tsetCurrLoading(false);\r\n\t\t}, 500);\r\n\t\treturn () => clearTimeout(timer);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isLoadingNameAdd) {\r\n\t\t\tspinTimer();\r\n\t\t}\r\n\t}, [isLoadingNameAdd]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"realtime-streaming-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider setLoggedIn={setLoggedIn} />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"실시간 영상\"]} />\r\n\t\t\t\t\t\t<div className=\"search-input\">\r\n\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\tplacement=\"rightBottom\"\r\n\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t\"지정한 구간의 실시간 영상 및 해당 구간의 간략한 정보를 확인 할 수 있습니다\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Title level={1} style={{ minWidth: 200, textAlign: \"center\" }}>\r\n\t\t\t\t\t\t\t\t\t실시간 영상\r\n\t\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t<CascaderBtn\r\n\t\t\t\t\t\t\t\tpage=\"STREAMING\"\r\n\t\t\t\t\t\t\t\tsetCamNameAdd={setCamNameAdd}\r\n\t\t\t\t\t\t\t\tsetLoadingNameAdd={setLoadingNameAdd}\r\n\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\ttooltipText=\"검색을 누르시면 해당 구간의 실시간 영상 페이지로 이동합니다\"\r\n\t\t\t\t\t\t\t\tcascaderText=\"검색 희망하는 구간을 선택하세요\"\r\n\t\t\t\t\t\t\t\tsetRealFirstFilter={setRealFirstFilter}\r\n\t\t\t\t\t\t\t\trealFirstFilter={realFirstFilter}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"video-container-4\">\r\n\t\t\t\t\t\t\t{!isCurrLoading &&\r\n\t\t\t\t\t\t\t\tObject.getOwnPropertyNames(currNameAdd).map(function (key) {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\t\t\tcamName={currNameAdd[key][0]}\r\n\t\t\t\t\t\t\t\t\t\t\thttpAddress={currNameAdd[key][1]}\r\n\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\t\t\trealtimeCamCode={key}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t{/* {address[0] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-1 [하행]\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[0]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{address[1] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-2 [하행]\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[1]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{address[2] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-3 [하행]\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[2]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RealtimeStreamingPage;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\search\\OverspeedPage.js",["485","486"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Typography } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport OverspeedTable from \"../../molecules/StatisticsTable/OverSpeedTable\";\r\nimport NotificationButton from \"../../atoms/notificationButton/NotificationButton\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst OverspeedPage = (props) => {\r\n\tconst { camera, setLoggedIn, isMaster, setRealFirstFilter } = props;\r\n\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [count, setCount] = useState(false);\r\n\tconst [isRefresh, setRefresh] = useState(false);\r\n\r\n\tconst { Content } = Layout;\r\n\tconst { Title, Paragraph, Text } = Typography;\r\n\tconst descriptionText = (\r\n\t\t<>\r\n\t\t\t<Paragraph>\r\n\t\t\t\t해당 구간에서 발생한 과속 차량에 대한 정보가 표시됩니다\r\n\t\t\t</Paragraph>\r\n\t\t\t<Paragraph>표시정보:</Paragraph>\r\n\t\t\t<Paragraph>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>과속 탐지 시간</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>차량 번호</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>위반 속도</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>위반 차선</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>차종</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>과속 차량 이미지</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</Paragraph>\r\n\t\t</>\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"과속 데이터 조회\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"OVERSPEED\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\tsetRefresh={setRefresh}\r\n\t\t\t\t\t\t\tcascaderText=\"확인을 희망하는 구간을 선택하세요\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div className=\"table-title-text\">\r\n\t\t\t\t\t\t\t\t\t<Title\r\n\t\t\t\t\t\t\t\t\t\tlevel={5}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: 0,\r\n\t\t\t\t\t\t\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{camera}\r\n\t\t\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t\t\t\t<NotificationButton description={descriptionText} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<OverspeedTable\r\n\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\tisRefresh={isRefresh}\r\n\t\t\t\t\t\t\t\t\tsetRefresh={setRefresh}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcamera: state.location.camera,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(OverspeedPage);\r\n",["487","488"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\search\\SearchPage.js",["489","490"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport SearchCollapsedTable from \"../../organisms/searchCollapsedTable/SearchCollapsedTable\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst SearchDownloadPage = (props) => {\r\n\tconst { setLoggedIn, isMaster, setRealFirstFilter } = props;\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [count, setCount] = useState(false);\r\n\tconst [emptyErr, setEmptyErr] = useState(false);\r\n\tconst [futureErr, setFutureErr] = useState(false);\r\n\tconst [over31Err, setOver31Err] = useState(false);\r\n\r\n\tconst { Content } = Layout;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"기간 별 데이터 조회\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"SEARCH\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tfirstFilter={firstFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\temptyErr={emptyErr}\r\n\t\t\t\t\t\t\tfutureErr={futureErr}\r\n\t\t\t\t\t\t\tover31Err={over31Err}\r\n\t\t\t\t\t\t\tcascaderText=\"기간 별 조회를 희망하는 구간을 선택하세요\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\t<SearchCollapsedTable\r\n\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\tsetEmptyErr={setEmptyErr}\r\n\t\t\t\t\t\t\t\tsetFutureErr={setFutureErr}\r\n\t\t\t\t\t\t\t\tsetOver31Err={setOver31Err}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchDownloadPage;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\login\\LoginPage.js",["491"],"import React, { useEffect } from \"react\";\r\nimport { Layout, Typography } from \"antd\";\r\n\r\nimport Header from \"../../organisms/header\";\r\nimport LoginCard from \"../../organisms/loginCard/LoginCard\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst LoginPage = (props) => {\r\n\tconst { setLoggedIn, setRealFirstFilter } = props;\r\n\tconst { Content, Footer } = Layout;\r\n\tconst { Title, Text } = Typography;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"login-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header page=\"SIGNIN\" />\r\n\t\t\t\t\t<Content style={{ margin: \"0\" }}>\r\n\t\t\t\t\t\t<div className=\"site-layout-background\" style={{ minHeight: 720 }}>\r\n\t\t\t\t\t\t\t<Title level={2} style={{ marginTop: 20 }}>\r\n\t\t\t\t\t\t\t\t글로벌브릿지\r\n\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t\t<Title level={2} style={{ marginTop: 0, minWidth: 454 }}>\r\n\t\t\t\t\t\t\t\t인공지능 교통 데이터 수집 시스템\r\n\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t\t<Text type=\"secondary\">GBAI-ITS Ver.100-2020</Text>\r\n\t\t\t\t\t\t\t<LoginCard setLoggedIn={setLoggedIn} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t\t<Footer style={{ textAlign: \"center\" }}>\r\n\t\t\t\t\t\tGBAI-ITS Ver.100-2020 Created by Global Bridge Co., Ltd\r\n\t\t\t\t\t</Footer>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js",["492"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SearchAccount.js",["493"],"import React, { useEffect } from \"react\";\r\nimport { Layout, Typography, Divider } from \"antd\";\r\n\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport AccountTable from \"../../organisms/accountTable/AccountTable\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst SearchAccount = (props) => {\r\n\tconst { setLoggedIn, isMaster, setRealFirstFilter } = props;\r\n\tconst { Content } = Layout;\r\n\tconst { Title } = Typography;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"account-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb\r\n\t\t\t\t\t\t\tpageHierarchy={[\"대시보드\", \"개인정보\", \"비밀번호 변경\"]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Title level={3} style={{ minWidth: 160 }}>\r\n\t\t\t\t\t\t\t발급 계정 조회\r\n\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t<Divider style={{ width: \"100%\" }} />\r\n\t\t\t\t\t\t<AccountTable isMaster={isMaster} setLoggedIn={setLoggedIn} />\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchAccount;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\PasswordPage.js",["494"],"import React, { useEffect } from \"react\";\r\nimport { Layout, Typography, Divider } from \"antd\";\r\n\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport PasswordForm from \"../../organisms/accountForm/PasswordFrom\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst PasswordPage = (props) => {\r\n\tconst { setLoggedIn, isMaster, setRealFirstFilter } = props;\r\n\tconst { Content } = Layout;\r\n\tconst { Title } = Typography;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"account-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb\r\n\t\t\t\t\t\t\tpageHierarchy={[\"대시보드\", \"개인정보\", \"비밀번호 변경\"]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Title level={3} style={{ minWidth: 160 }}>\r\n\t\t\t\t\t\t\t비밀번호 변경\r\n\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t<PasswordForm isMaster={isMaster} setLoggedIn={setLoggedIn} />\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PasswordPage;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\reportWebVitals.js",[],["495","496"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js",["497"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n\tTable,\r\n\tSpin,\r\n\tButton,\r\n\tModal,\r\n\tDescriptions,\r\n\tTypography,\r\n\tmessage,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Video from \"../../molecules/video/Video\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst OverSpeedTable = (props) => {\r\n\tconst {\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcameraCode,\r\n\t\tbaseURL,\r\n\t\tcamera,\r\n\t\toverSpeedVideoURL,\r\n\t\tsetLoggedIn,\r\n\t\tisRefresh,\r\n\t\tsetRefresh,\r\n\t} = props;\r\n\tconst { Text } = Typography;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoadingData, setLoadingData] = useState(true);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [isImgModalVisible, setImgModalVisible] = useState(false);\r\n\tconst [isVideoModalVisible, setVideoModalVisible] = useState(false);\r\n\tconst [shownKey, setShownKey] = useState(\"\");\r\n\tconst [isVideoSource, setVideoSource] = useState(true);\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isRefresh) {\r\n\t\t\tsetLoadingData(true);\r\n\t\t\tsetEmptyData(false);\r\n\t\t\tsetData([]);\r\n\t\t\taxiosData();\r\n\t\t}\r\n\t}, [startDate, endTime, cameraCode, isRefresh]);\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetImgModalVisible(true);\r\n\t\tsetVideoSource(true);\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t\tkey: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"차량번호\",\r\n\t\t\tdataIndex: \"licenseNumber\",\r\n\t\t\tkey: \"licenseNumber\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"위반속도\",\r\n\t\t\tdataIndex: \"speed\",\r\n\t\t\tkey: \"speed\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"laneNumber\",\r\n\t\t\tkey: \"laneNumber\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"차종\",\r\n\t\t\tdataIndex: \"vehicleType\",\r\n\t\t\tkey: \"vehicleType\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이미지\",\r\n\t\t\tdataIndex: \"imageLink\",\r\n\t\t\tkey: \"imageLink\",\r\n\t\t\trender: (imgInfo) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Button type=\"link\" size=\"small\" onClick={handleClick}>\r\n\t\t\t\t\t\t이미지 보기\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{shownKey === imgInfo[0] % 10 && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\ttitle=\"과속차량 이미지\"\r\n\t\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t\t\tmaskStyle={{ backgroundColor: \"transparent\" }}\r\n\t\t\t\t\t\t\t\tbodyStyle={{ width: 630 }}\r\n\t\t\t\t\t\t\t\tstyle={{ width: 630 }}\r\n\t\t\t\t\t\t\t\tvisible={isImgModalVisible}\r\n\t\t\t\t\t\t\t\tonOk={() => setImgModalVisible(false)}\r\n\t\t\t\t\t\t\t\tonCancel={() => setImgModalVisible(false)}\r\n\t\t\t\t\t\t\t\tfooter={[\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tkey=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setImgModalVisible(false)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t확인\r\n\t\t\t\t\t\t\t\t\t</Button>,\r\n\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Descriptions bordered size=\"small\">\r\n\t\t\t\t\t\t\t\t\t<Descriptions.Item label=\"위반차량\" span={2}>\r\n\t\t\t\t\t\t\t\t\t\t{imgInfo[5]}\r\n\t\t\t\t\t\t\t\t\t</Descriptions.Item>\r\n\t\t\t\t\t\t\t\t\t<Descriptions.Item label=\"과속영상\" span={1}>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tghost\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setVideoModalVisible(true)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t영상 보기\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"과속차량 영상\"\r\n\t\t\t\t\t\t\t\t\t\t\tvisible={isVideoModalVisible}\r\n\t\t\t\t\t\t\t\t\t\t\tonOk={() => setVideoModalVisible(false)}\r\n\t\t\t\t\t\t\t\t\t\t\tonCancel={() => setVideoModalVisible(false)}\r\n\t\t\t\t\t\t\t\t\t\t\tfooter={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setVideoModalVisible(false)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t확인\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>,\r\n\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{isVideoSource ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Video\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsource={`${overSpeedVideoURL}/${cameraCode}/clip?record_time=${imgInfo[6]}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowControls={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetVideoSource={setVideoSource}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Text>해당 과속차량 영상이 없습니다</Text>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t\t\t</Descriptions.Item>\r\n\t\t\t\t\t\t\t\t\t<Descriptions.Item label=\"시간\" span={2}>\r\n\t\t\t\t\t\t\t\t\t\t{imgInfo[2]}\r\n\t\t\t\t\t\t\t\t\t</Descriptions.Item>\r\n\t\t\t\t\t\t\t\t\t<Descriptions.Item label=\"위반속도\">\r\n\t\t\t\t\t\t\t\t\t\t{imgInfo[3]}km/h\r\n\t\t\t\t\t\t\t\t\t</Descriptions.Item>\r\n\t\t\t\t\t\t\t\t\t<Descriptions.Item label=\"위치\" span={2}>\r\n\t\t\t\t\t\t\t\t\t\t{camera}\r\n\t\t\t\t\t\t\t\t\t</Descriptions.Item>\r\n\t\t\t\t\t\t\t\t\t<Descriptions.Item label=\"위반차로\">\r\n\t\t\t\t\t\t\t\t\t\t{imgInfo[4]}\r\n\t\t\t\t\t\t\t\t\t</Descriptions.Item>\r\n\t\t\t\t\t\t\t\t</Descriptions>\r\n\t\t\t\t\t\t\t\t{imgInfo[1] ? (\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginTop: 15 }}\r\n\t\t\t\t\t\t\t\t\t\talt=\"과속차량 이미지\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={imgInfo[1]}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Text>해당 과속차량 이미지가 없습니다</Text>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}/violations/speeding/records?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&limit=0&offset=0`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tres.data.forEach((eachData, index) => {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\trecordTime,\r\n\t\t\t\t\t\t\tvehicleType,\r\n\t\t\t\t\t\t\tlaneNumber,\r\n\t\t\t\t\t\t\tlicenseNumber,\r\n\t\t\t\t\t\t\tspeed,\r\n\t\t\t\t\t\t\timageLink,\r\n\t\t\t\t\t\t} = eachData;\r\n\t\t\t\t\t\tlet dataTemp = {};\r\n\t\t\t\t\t\tdataTemp[\"key\"] = index.toString();\r\n\t\t\t\t\t\tif (startDate !== endTime) {\r\n\t\t\t\t\t\t\tdataTemp[\"time\"] = moment(recordTime).format(\r\n\t\t\t\t\t\t\t\t\"YYYY년 MM월 DD일 HH:mm:ss\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdataTemp[\"time\"] = moment(recordTime).format(\"HH:mm:ss\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdataTemp[\"vehicleType\"] = vehicleType;\r\n\t\t\t\t\t\tdataTemp[\"licenseNumber\"] = licenseNumber;\r\n\t\t\t\t\t\tdataTemp[\"speed\"] = `${speed} km/h`;\r\n\t\t\t\t\t\tdataTemp[\"laneNumber\"] = `${laneNumber} 차선`;\r\n\t\t\t\t\t\tdataTemp[\"imageLink\"] = [\r\n\t\t\t\t\t\t\tindex.toString(),\r\n\t\t\t\t\t\t\timageLink,\r\n\t\t\t\t\t\t\tmoment(recordTime).format(\"YYYY년 MM월 DD일 HH시 mm분 ss초\"),\r\n\t\t\t\t\t\t\tspeed,\r\n\t\t\t\t\t\t\tdataTemp[\"laneNumber\"],\r\n\t\t\t\t\t\t\tlicenseNumber,\r\n\t\t\t\t\t\t\trecordTime,\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t\tTotalData.push(dataTemp);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetData(TotalData);\r\n\t\t\t\t\tsetLoadingData(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t}\r\n\t\t\t\tsetRefresh(false);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tif (err.response.status === 404) {\r\n\t\t\t\t\tmessage.warning(\"해당 기간 과속 데이터가 없습니다\");\r\n\t\t\t\t} else if (err.response.status === 400) {\r\n\t\t\t\t\tmessage.warning(\"분석이 완료되지 않은 기간에 대한 검색입니다\");\r\n\t\t\t\t} else if (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t}\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t\tsetRefresh(false);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isEmptyData ? (\r\n\t\t\t\t<div className=\"empty-data-text\">\r\n\t\t\t\t\t<Text strong type=\"danger\">\r\n\t\t\t\t\t\t해당 과속 데이터가 없습니다\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</div>\r\n\t\t\t) : isLoadingData ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tdataSource={Data}\r\n\t\t\t\t\tpagination={{\r\n\t\t\t\t\t\tpageSize: 10,\r\n\t\t\t\t\t\tshowSizeChanger: false,\r\n\t\t\t\t\t\thideOnSinglePage: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonRow={(record, rowIndex) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tonClick: (event) => {\r\n\t\t\t\t\t\t\t\tsetShownKey(rowIndex);\r\n\t\t\t\t\t\t\t}, // click row\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tbordered\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\tcamera: state.location.camera,\r\n\t\toverSpeedVideoURL: state.baseURL.overSpeedVideoURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(OverSpeedTable);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js",["498"],"import React, { useEffect, useState } from \"react\";\r\nimport { Pie } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst VehicleRatio = (props) => {\r\n\tconst { trafficData, page } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoadingData, setLoadingData] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingData(true);\r\n\t\tsetData([]);\r\n\t\tparseTraffic();\r\n\t}, [trafficData]);\r\n\r\n\tconst parseTraffic = () => {\r\n\t\tvar vehicleRatioData = [\r\n\t\t\t{\r\n\t\t\t\ttype: \"승용차\",\r\n\t\t\t\tvalue: 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"버스\",\r\n\t\t\t\tvalue: 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"화물차\",\r\n\t\t\t\tvalue: 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"오토바이\",\r\n\t\t\t\tvalue: 0,\r\n\t\t\t},\r\n\t\t];\r\n\t\tvar data = { carVolume: 0, mBusVolume: 0, mTruckVolume: 0, motorVolume: 0 };\r\n\t\tif (page === \"STREAMING\") {\r\n\t\t\tdata = trafficData[trafficData.length - 1];\r\n\t\t} else if (page === \"REALSTATISTIC\") {\r\n\t\t\ttrafficData.forEach((eachData) => {\r\n\t\t\t\tdata[\"carVolume\"] += eachData[\"carVolume\"];\r\n\t\t\t\tdata[\"mBusVolume\"] += eachData[\"mBusVolume\"];\r\n\t\t\t\tdata[\"mTruckVolume\"] += eachData[\"mTruckVolume\"];\r\n\t\t\t\tdata[\"motorVolume\"] += eachData[\"motorVolume\"];\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdata = trafficData[0];\r\n\t\t}\r\n\t\tvehicleRatioData[0].value = data[\"carVolume\"];\r\n\t\tvehicleRatioData[1].value = data[\"mBusVolume\"];\r\n\t\tvehicleRatioData[2].value = data[\"mTruckVolume\"];\r\n\t\tvehicleRatioData[3].value = data[\"motorVolume\"];\r\n\r\n\t\tsetData(vehicleRatioData);\r\n\t\tsetLoadingData(false);\r\n\t};\r\n\tvar config = {\r\n\t\tappendPadding: 0,\r\n\t\tdata: Data,\r\n\t\tangleField: \"value\",\r\n\t\tcolorField: \"type\",\r\n\t\tradius: 1,\r\n\t\tinnerRadius: 0.46,\r\n\t\tlegend: true,\r\n\t\tlabel: {\r\n\t\t\ttype: \"inner\",\r\n\t\t\toffset: \"-54%\",\r\n\t\t\tcontent: \"{value}대\",\r\n\t\t\tautoRotate: false,\r\n\r\n\t\t\tstyle: {\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\tfontSize: 10,\r\n\t\t\t},\r\n\t\t},\r\n\t\tinteractions: [{ type: \"element-selected\" }, { type: \"element-active\" }],\r\n\t\tstatistic: {\r\n\t\t\ttitle: false,\r\n\t\t\tcontent: {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\twhiteSpace: \"pre-wrap\",\r\n\t\t\t\t\toverflow: \"hidden\",\r\n\t\t\t\t\ttextOverflow: \"ellipsis\",\r\n\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t},\r\n\t\t\t\tvalue: {\r\n\t\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\t\treturn \"\".concat(v, \"대\");\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoadingData ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Pie {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default VehicleRatio;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MonthPeakTime.js",["499"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst MonthPeakTime = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"7\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst { recordDate, totalVehiclePeak15MinuteTime } = TrafficData;\r\n\t\t\tconst tempMinute = new Date(totalVehiclePeak15MinuteTime).getMinutes();\r\n\r\n\t\t\tlet temp = {};\r\n\t\t\ttemp[\"date\"] = moment(recordDate).format(\"MM-DD\");\r\n\t\t\ttemp[\"value\"] = new Date(totalVehiclePeak15MinuteTime).getHours();\r\n\t\t\ttemp[\"minute\"] =\r\n\t\t\t\ttempMinute === 0 ? `${tempMinute}${tempMinute}` : tempMinute;\r\n\t\t\tTotalData.push(temp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"date\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: false,\r\n\r\n\t\tlabel: {\r\n\t\t\tformatter: function formatter(v) {\r\n\t\t\t\tlet timeStr = v[\"value\"] + \":\" + v[\"minute\"];\r\n\t\t\t\treturn \"\"\r\n\t\t\t\t\t.concat(timeStr)\r\n\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t},\r\n\t\tpoint: {\r\n\t\t\tsize: 5,\r\n\t\t\tshape: \"diamond\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfill: \"white\",\r\n\t\t\t\tstroke: \"#5B8FF9\",\r\n\t\t\t\tlineWidth: 2,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: false,\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t\tstate: {\r\n\t\t\tactive: {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tshadowColor: \"yellow\",\r\n\t\t\t\t\tshadowBlur: 4,\r\n\t\t\t\t\tstroke: \"transparent\",\r\n\t\t\t\t\tfill: \"red\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\ttheme: {\r\n\t\t\tgeometries: {\r\n\t\t\t\tpoint: {\r\n\t\t\t\t\tdiamond: {\r\n\t\t\t\t\t\tactive: {\r\n\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\tshadowColor: \"#FCEBB9\",\r\n\t\t\t\t\t\t\t\tshadowBlur: 2,\r\n\t\t\t\t\t\t\t\tstroke: \"#F6BD16\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tinteractions: [{ type: \"marker-active\" }],\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MonthPeakTime;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTCnt.js",["500"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst CntLine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"1\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar cntTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordTime,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst Time = moment(recordTime).format(\"HH:mm\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carVolume;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusVolume;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckVolume;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorVolume;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleVolume;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\t\t\tcntTotalData.push(tempCar);\r\n\t\t\tcntTotalData.push(tempBus);\r\n\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\tcntTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default CntLine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js",["501"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js",["502","503"],"import React, { useState, useEffect } from \"react\";\r\nimport { Spin, Typography, message } from \"antd\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LaneTableCard from \"../../../molecules/tableCard/LaneTableCard\";\r\nimport LaneDataVisualization from \"../../../molecules/dataVisualization/LaneDataVisualization\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst LaneVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcameraCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\tadditionalFilter,\r\n\t\tsetLoggedIn,\r\n\t\tsetEmptyErr,\r\n\t\tsetFutureErr,\r\n\t} = props;\r\n\tconst { Text } = Typography;\r\n\tconst [activeVisualKey, setActiveVisualKey] = useState(\"1\");\r\n\r\n\tconst [isLoadingTrafficTotal, setLoadingTrafficTotal] = useState(true);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [trafficTotalData, setTrafficTotalData] = useState([]);\r\n\r\n\tconst periodURL =\r\n\t\tperiod === \"DAY\" ? \"/daily\" : period === \"WEEK\" ? \"/weekly\" : \"/monthly\";\r\n\r\n\tconst currentURL =\r\n\t\tperiod === \"DAY\"\r\n\t\t\t? `${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane`\r\n\t\t\t: `${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane&weekOption=${additionalFilter}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (cameraCode !== \"\" && startDate !== \"\" && endTime !== \"\") {\r\n\t\t\tsetEmptyData(false);\r\n\t\t\tsetLoadingTrafficTotal(true);\r\n\t\t\tsetTrafficTotalData([]);\r\n\t\t\tgetTrafficTotalData();\r\n\t\t}\r\n\t}, [cameraCode, startDate, endTime, additionalFilter]);\r\n\r\n\tconst getTrafficTotalData = () => {\r\n\t\taxios\r\n\t\t\t.get(`${currentURL}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetTrafficTotalData(res.data);\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetLoadingTrafficTotal(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t\tsetEmptyErr(false);\r\n\t\t\t\t\tsetFutureErr(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t\tmessage.warning(\"해당 기간 데이터가 없습니다\");\r\n\t\t\t\t\tif (setEmptyErr) {\r\n\t\t\t\t\t\tsetEmptyErr(true);\r\n\t\t\t\t\t\tsetFutureErr(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tif (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\r\n\t\t\t\t\t\t\"네트워크 문제 혹은 일시적인 오류로 데이터를 불러올 수 없습니다\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (err.response.status === 400) {\r\n\t\t\t\t\tmessage.warning(\"분석이 완료되지 않은 기간에 대한 검색입니다\");\r\n\t\t\t\t\tif (setFutureErr) {\r\n\t\t\t\t\t\tsetEmptyErr(false);\r\n\t\t\t\t\t\tsetFutureErr(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t}\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isEmptyData ? (\r\n\t\t\t\tisLoadingTrafficTotal ? (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<LaneDataVisualization\r\n\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\tsetActiveVisualKey={setActiveVisualKey}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<LaneTableCard\r\n\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\ttableKey=\"first\"\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tcamLanes: state.locationCode.camLanes,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(LaneVisualization);\r\n",["504","505"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\notificationButton\\NotificationButton.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleRatio.js",["506"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst VehicleRatio = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"3\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar carRatio = [];\r\n\t\tvar busRatio = [];\r\n\t\tvar truckRatio = [];\r\n\t\tvar motorRatio = [];\r\n\t\tvar RatioTotalData = [];\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\r\n\t\t\ttempCar[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = parseFloat((carVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = parseFloat((mBusVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = parseFloat((mTruckVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = parseFloat((motorVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\r\n\t\t\tcarRatio.push(tempCar);\r\n\t\t\tbusRatio.push(tempBus);\r\n\t\t\ttruckRatio.push(tempTruck);\r\n\t\t\tmotorRatio.push(tempMotor);\r\n\t\t});\r\n\t\tRatioTotalData = carRatio.concat(\r\n\t\t\tbusRatio.concat(truckRatio.concat(motorRatio))\r\n\t\t);\r\n\t\tsetData(RatioTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"laneNum\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"%\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default VehicleRatio;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js",["507","508"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTOverSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar TotalData = [];\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = motorSpdVolume;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t\tseriesField: \"key\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTOverSpeed;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js",["509"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\nconst WLFisrtTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar FristRow;\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tFristRow = true;\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"lane\",\r\n\t\t\twidth: 60,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"오토바이\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (FristRow) {\r\n\t\t\t\tdataTemp[\"lane\"] = \"전체\";\r\n\t\t\t\tFristRow = false;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"lane\"] = `${laneNumber} 차선`;\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tdataSource={Data}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tpagination={{ hideOnSinglePage: true }}\r\n\t\t\t\t\tbordered\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WLFisrtTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StatContainer.js",[],["510","511"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTSecondTable.js",["512"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst DTSecondTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentLaneNum === 0) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseData();\r\n\t\t}\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"\",\r\n\t\t\tdataIndex: \"item\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"total\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tdataIndex: \"car\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tdataIndex: \"bus\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tdataIndex: \"truck\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"오토바이\",\r\n\t\t\tdataIndex: \"motor\",\r\n\t\t},\r\n\t];\r\n\r\n\tvar data = [\r\n\t\t{\r\n\t\t\tkey: \"0\",\r\n\t\t\titem: \"주간\",\r\n\t\t\ttotal: 0,\r\n\t\t\tcar: 0,\r\n\t\t\tbus: 0,\r\n\t\t\ttruck: 0,\r\n\t\t\tmotor: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"1\",\r\n\t\t\titem: \"야간\",\r\n\t\t\ttotal: 0,\r\n\t\t\tcar: 0,\r\n\t\t\tbus: 0,\r\n\t\t\ttruck: 0,\r\n\t\t\tmotor: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"3\",\r\n\t\t\titem: \"주야율\",\r\n\t\t\ttotal: 0,\r\n\t\t\tcar: 0,\r\n\t\t\tbus: 0,\r\n\t\t\ttruck: 0,\r\n\t\t\tmotor: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"4\",\r\n\t\t\titem: \"PHF\",\r\n\t\t\ttotal: 0,\r\n\t\t\tcar: \"-\",\r\n\t\t\tbus: \"-\",\r\n\t\t\ttruck: \"-\",\r\n\t\t\tmotor: \"-\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"5\",\r\n\t\t\titem: \"첨두시간\",\r\n\t\t\ttotal: \"\",\r\n\t\t\tcar: \"-\",\r\n\t\t\tbus: \"-\",\r\n\t\t\ttruck: \"-\",\r\n\t\t\tmotor: \"-\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"6\",\r\n\t\t\titem: \"첨두유율\",\r\n\t\t\ttotal: 0,\r\n\t\t\tcar: \"-\",\r\n\t\t\tbus: \"-\",\r\n\t\t\ttruck: \"-\",\r\n\t\t\tmotor: \"-\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"7\",\r\n\t\t\titem: \"집중율\",\r\n\t\t\ttotal: 0,\r\n\t\t\tcar: \"-\",\r\n\t\t\tbus: \"-\",\r\n\t\t\ttruck: \"-\",\r\n\t\t\tmotor: \"-\",\r\n\t\t},\r\n\t];\r\n\r\n\tconst parseData = () => {\r\n\t\tif (trafficTotalData.length !== 0) {\r\n\t\t\tconst trafficData = trafficTotalData[0];\r\n\t\t\tdata[0][\"total\"] = trafficData[\"totalVehicleDaytimeVolume\"];\r\n\t\t\tdata[0][\"car\"] = trafficData[\"carDaytimeVolume\"];\r\n\t\t\tdata[0][\"bus\"] = trafficData[\"mBusDaytimeVolume\"];\r\n\t\t\tdata[0][\"truck\"] = trafficData[\"mTruckDaytimeVolume\"];\r\n\t\t\tdata[0][\"motor\"] = trafficData[\"motorDaytimeVolume\"];\r\n\r\n\t\t\tdata[1][\"total\"] = trafficData[\"totalVehicleNighttimeVolume\"];\r\n\t\t\tdata[1][\"car\"] = trafficData[\"carNighttimeVolume\"];\r\n\t\t\tdata[1][\"bus\"] = trafficData[\"mBusNighttimeVolume\"];\r\n\t\t\tdata[1][\"truck\"] = trafficData[\"mTruckNighttimeVolume\"];\r\n\t\t\tdata[1][\"motor\"] = trafficData[\"motorNighttimeVolume\"];\r\n\r\n\t\t\tdata[2][\"total\"] = trafficData[\"totalVehicleDayNightRatio\"];\r\n\t\t\tdata[2][\"car\"] = trafficData[\"carDayNightRatio\"];\r\n\t\t\tdata[2][\"bus\"] = trafficData[\"mBusDayNightRatio\"];\r\n\t\t\tdata[2][\"truck\"] = trafficData[\"mTruckDayNightRatio\"];\r\n\t\t\tdata[2][\"motor\"] = trafficData[\"motorDayNightRatio\"];\r\n\r\n\t\t\tdata[3][\"total\"] = trafficData[\"totalVehiclePeakHourFactor\"];\r\n\r\n\t\t\tdata[4][\"total\"] = trafficData[\"totalVehiclePeak15MinuteTime\"];\r\n\r\n\t\t\tdata[5][\"total\"] = trafficData[\"totalVehiclePeakHourConcentrationRatio\"];\r\n\r\n\t\t\tdata[6][\"total\"] = trafficData[\"totalVehiclePeakHourFlowRate\"];\r\n\r\n\t\t\tsetData(data);\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tdataSource={Data}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tpagination={{ hideOnSinglePage: true }}\r\n\t\t\t\t\tbordered\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default DTSecondTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js",["513"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js",["514"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst DLFisrtTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar FristRow;\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tFristRow = true;\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"lane\",\r\n\t\t\twidth: 60,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"오토바이\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (FristRow) {\r\n\t\t\t\tdataTemp[\"lane\"] = \"전체\";\r\n\t\t\t\tFristRow = false;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"lane\"] = `${laneNumber} 차선`;\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tdataSource={Data}\r\n\t\t\t\t\tpagination={{ hideOnSinglePage: true }}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tbordered\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default DLFisrtTable;\r\n",["515","516"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js",["517"],"/* eslint-disable jsx-a11y/media-has-caption */\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport Hls from \"hls.js\";\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst Video = (props) => {\r\n\tconst { source, showControls = false, setVideoSource } = props;\r\n\tconst videoRef = useRef();\r\n\tconst handleClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\te.target.requestFullscreen();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!videoRef) return;\r\n\r\n\t\tconst hls = new Hls({\r\n\t\t\txhrSetup: (xhr, url) => {\r\n\t\t\t\txhr.setRequestHeader(\r\n\t\t\t\t\t\"authorization\",\r\n\t\t\t\t\t`Bearer ${sessionStorage.getItem(\"token\")}`\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (videoRef.current.canPlayType(\"application/vnd.apple.mpegurl\")) {\r\n\t\t\tvideoRef.current.src = source;\r\n\t\t\tvideoRef.addEventListener(\"loadedmetadata\", () => {\r\n\t\t\t\tvideoRef.current.play();\r\n\t\t\t});\r\n\t\t} else if (Hls.isSupported()) {\r\n\t\t\thls.attachMedia(videoRef.current);\r\n\t\t\thls.on(Hls.Events.MEDIA_ATTACHED, () => {\r\n\t\t\t\thls.loadSource(source);\r\n\t\t\t\thls.on(Hls.Events.MANIFEST_PARSED, () => {\r\n\t\t\t\t\tsetVideoSource(true);\r\n\t\t\t\t\tvideoRef.current.play();\r\n\t\t\t\t});\r\n\t\t\t\thls.on(Hls.Events.ERROR, (_, data) => {\r\n\t\t\t\t\tif (data.response) {\r\n\t\t\t\t\t\tif (data.response.code === 404) {\r\n\t\t\t\t\t\t\tif (setVideoSource) {\r\n\t\t\t\t\t\t\t\tsetVideoSource(false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (data.response.code === 401) {\r\n\t\t\t\t\t\t\t// jwt가 invalid 할 때\r\n\t\t\t\t\t\t\tif (setVideoSource) {\r\n\t\t\t\t\t\t\t\tsetVideoSource(false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\talert(\"실시간 영상이 지원되지 않는 브라우저입니다\");\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\thls.destroy();\r\n\t\t};\r\n\t}, [source]);\r\n\r\n\treturn (\r\n\t\t<video\r\n\t\t\tref={videoRef}\r\n\t\t\tsrc={source}\r\n\t\t\tonClick={handleClick}\r\n\t\t\tmuted\r\n\t\t\tautoPlay\r\n\t\t\tcontrols={isMobile || showControls}\r\n\t\t\tpreload=\"auto\"\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Video;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTPCU.js",["518"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst MTPCULine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar PCUTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tlet tempTotal = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehiclePassengerCarUnit;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tPCUTotalData.push(tempCar);\r\n\t\t\tPCUTotalData.push(tempBus);\r\n\t\t\tPCUTotalData.push(tempTruck);\r\n\t\t\tPCUTotalData.push(tempMotor);\r\n\t\t\tPCUTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(PCUTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MTPCULine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js",["519","520"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport { act } from \"react-dom/cjs/react-dom-test-utils.production.min\";\r\n\r\nconst OverSpeedCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar cntCar = [];\r\n\t\tvar cntBus = [];\r\n\t\tvar cntTruck = [];\r\n\t\tvar cntMotor = [];\r\n\t\tvar cntTotalData = [];\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\r\n\t\t\ttempCar[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\t\t\tcntCar.push(tempCar);\r\n\t\t\tcntBus.push(tempBus);\r\n\t\t\tcntTruck.push(tempTruck);\r\n\t\t\tcntMotor.push(tempMotor);\r\n\t\t});\r\n\t\tcntTotalData = cntCar.concat(cntBus.concat(cntTruck.concat(cntMotor)));\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"laneNum\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default OverSpeedCnt;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\Peak15.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js",["521","522"],"import React from \"react\";\r\nimport { Form, Input, message, Button, Modal } from \"antd\";\r\nimport { BankOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport NodeRSA from \"node-rsa\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst formItemLayout = {\r\n\tlabelCol: {\r\n\t\txs: {\r\n\t\t\tspan: 24,\r\n\t\t},\r\n\t\tsm: {\r\n\t\t\tspan: 8,\r\n\t\t},\r\n\t},\r\n\twrapperCol: {\r\n\t\txs: {\r\n\t\t\tspan: 24,\r\n\t\t},\r\n\t\tsm: {\r\n\t\t\tspan: 16,\r\n\t\t},\r\n\t},\r\n};\r\nconst tailFormItemLayout = {\r\n\twrapperCol: {\r\n\t\txs: {\r\n\t\t\tspan: 24,\r\n\t\t\toffset: 0,\r\n\t\t},\r\n\t\tsm: {\r\n\t\t\tspan: 16,\r\n\t\t\toffset: 8,\r\n\t\t},\r\n\t},\r\n};\r\n\r\nconst PasswordForm = (props) => {\r\n\tconst { setLoggedIn, baseURL } = props;\r\n\tconst [form] = Form.useForm();\r\n\tconst history = useHistory();\r\n\r\n\t/* ==== < RSA Encryption > ==== */\r\n\tconst encrypt = (plainText, keyData) => {\r\n\t\tconst publicKey = new NodeRSA();\r\n\t\tpublicKey.importKey(keyData);\r\n\t\tconst password = publicKey.encrypt(plainText, \"base64\");\r\n\t\treturn password;\r\n\t};\r\n\r\n\tconst rsaEncrypt = (values) => {\r\n\t\tlet { oldPassword, newPassword } = values;\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}/auth/pubkey`)\r\n\t\t\t.then((Response) => {\r\n\t\t\t\toldPassword = encrypt(oldPassword, Response.data.publicKey);\r\n\t\t\t\tnewPassword = encrypt(newPassword, Response.data.publicKey);\r\n\r\n\t\t\t\tconst newValues = { oldPassword, newPassword };\r\n\t\t\t\tchangePassword(newValues);\r\n\t\t\t})\r\n\t\t\t.catch((Error) => {});\r\n\t};\r\n\t/* ============================ */\r\n\r\n\tconst changePassword = (values) => {\r\n\t\tconst { oldPassword, newPassword } = values;\r\n\t\taxios\r\n\t\t\t.put(\r\n\t\t\t\t`${baseURL}/users/${sessionStorage.getItem(\"username\")}/password`,\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\toldPassword,\r\n\t\t\t\t\tnewPassword,\r\n\t\t\t\t}),\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tmessage.success(\"비밀번호 변경 성공\");\r\n\t\t\t\t// history.push(\"/*\");\r\n\t\t\t\tsetLoggedIn(false);\r\n\r\n\t\t\t\t// redirect\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tmessage.error(\"입력된 기존 비밀번호가 틀렸습니다\");\r\n\t\t\t\t} else if (err.response.status === 400) {\r\n\t\t\t\t\tmessage.error(\"존재하지 않는 아이디입니다\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmessage.error(\"Unknown error\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\t{...formItemLayout}\r\n\t\t\tform={form}\r\n\t\t\tname=\"register\"\r\n\t\t\tonFinish={rsaEncrypt}\r\n\t\t\tscrollToFirstError\r\n\t\t\tsize=\"large\"\r\n\t\t>\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"username\"\r\n\t\t\t\tlabel=\"아이디\"\r\n\t\t\t\tinitialValue={sessionStorage.getItem(\"username\")}\r\n\t\t\t>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t\tprefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"affiliation\"\r\n\t\t\t\tlabel=\"소속\"\r\n\t\t\t\tinitialValue={sessionStorage.getItem(\"affiliate\")}\r\n\t\t\t>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t\tprefix={<BankOutlined className=\"site-form-item-icon\" />}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"oldPassword\"\r\n\t\t\t\tlabel=\"현재 비밀번호\"\r\n\t\t\t\trules={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"현재 비밀번호를 입력하세요\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\thasFeedback\r\n\t\t\t>\r\n\t\t\t\t<Input.Password />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"newPassword\"\r\n\t\t\t\tlabel=\"새 비밀번호\"\r\n\t\t\t\trules={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"새 비밀번호를 입력하세요\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmin: 8,\r\n\t\t\t\t\t\tmessage: \"최소 8자리 이상\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalidator: (rule, value) => {\r\n\t\t\t\t\t\t\tconst oNumber = \"0123456789\";\r\n\t\t\t\t\t\t\tconst oLetter = \"abcdefghijklmnopqrstuvwxyz\";\r\n\t\t\t\t\t\t\tconst oLetterCap = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\t\t\t\t\t\t\tconst oSpecial = \"-#@!$%^&* ()_+|~=`{}[]:;'<>?,./\\\"\";\r\n\t\t\t\t\t\t\tconst oTher = oNumber + oLetter + oLetterCap + oSpecial;\r\n\t\t\t\t\t\t\tlet total = 0;\r\n\t\t\t\t\t\t\tconst oSpeArr = value.split(\"\");\r\n\r\n\t\t\t\t\t\t\tconst oNumberItem = oSpeArr.find(\r\n\t\t\t\t\t\t\t\t(item) => oNumber.indexOf(item) !== -1\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconst oLetterItem = oSpeArr.find(\r\n\t\t\t\t\t\t\t\t(item) => oLetter.indexOf(item) !== -1\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconst oLetterCapItem = oSpeArr.find(\r\n\t\t\t\t\t\t\t\t(item) => oLetterCap.indexOf(item) !== -1\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconst oSpeItem = oSpeArr.find(\r\n\t\t\t\t\t\t\t\t(item) => oSpecial.indexOf(item) !== -1\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tconst oTherItem = oSpeArr.find(\r\n\t\t\t\t\t\t\t\t(item) => oTher.indexOf(item) === -1\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (oTherItem !== undefined) {\r\n\t\t\t\t\t\t\t\treturn Promise.reject(\r\n\t\t\t\t\t\t\t\t\t\"영문 대문자, 소문자, 숫자, 특수문자(-#@!$%^&* ()_+|~=`{}[]:;'<>?,./\\\") 최소 한개 이상\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (oNumberItem !== undefined) {\r\n\t\t\t\t\t\t\t\ttotal += 1;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn Promise.reject(\"숫자 최소 한개 이상\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (oLetterItem !== undefined) {\r\n\t\t\t\t\t\t\t\ttotal += 1;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn Promise.reject(\"영문 소문자 최소 한개 이상\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (oSpeItem !== undefined) {\r\n\t\t\t\t\t\t\t\ttotal += 1;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn Promise.reject(\r\n\t\t\t\t\t\t\t\t\t\"특수문자(-#@!$%^&* ()_+|~=`{}[]:;'<>?,./\\\") 최소 한개 이상\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (oLetterCapItem !== undefined) {\r\n\t\t\t\t\t\t\t\ttotal += 1;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn Promise.reject(\"영문 대문자 최소 한개 이상\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (total === 4) {\r\n\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn Promise.reject(\r\n\t\t\t\t\t\t\t\t\"영문 대문자, 소문자, 숫자, 특수문자(-#@!$%^&* ()_+|~=`{}[]:;'<>?,./\\\") 최소 한개 이상\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\thasFeedback\r\n\t\t\t>\r\n\t\t\t\t<Input.Password />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"confirm\"\r\n\t\t\t\tlabel=\"새 비밀번호 확인\"\r\n\t\t\t\tdependencies={[\"password\"]}\r\n\t\t\t\thasFeedback\r\n\t\t\t\trules={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"새 비밀번호를 다시 한번 입력하세요\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t({ getFieldValue }) => ({\r\n\t\t\t\t\t\tvalidator(rule, value) {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t!value ||\r\n\t\t\t\t\t\t\t\t(getFieldValue(\"newPassword\") === value &&\r\n\t\t\t\t\t\t\t\t\tgetFieldValue(\"oldPassword\") !== value)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (getFieldValue(\"newPassword\") !== value) {\r\n\t\t\t\t\t\t\t\treturn Promise.reject(\"비밀번호 확인이 올바르지 않습니다\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn Promise.reject(\r\n\t\t\t\t\t\t\t\t\"현재 비밀번호와 다른 비밀번호를 입력해주세요\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}),\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<Input.Password />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item {...tailFormItemLayout}>\r\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\t\t확인\r\n\t\t\t\t</Button>\r\n\t\t\t</Form.Item>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(PasswordForm);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\location.js",[],["523","524"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js",["525"],"import React, { useEffect, useState } from \"react\";\r\nimport { Gauge } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst AvgSpeedGauge = (props) => {\r\n\tconst { trafficData, page } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoadingData, setLoadingData] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingData(true);\r\n\t\tsetData([]);\r\n\r\n\t\tparseData();\r\n\t}, [trafficData]);\r\n\r\n\tconst parseData = () => {\r\n\t\tif (page === \"REALSTATISTIC\") {\r\n\t\t\tlet value = 0;\r\n\t\t\ttrafficData.forEach((data) => {\r\n\t\t\t\tvalue += data[\"totalVehicleAvgSpeed\"];\r\n\t\t\t});\r\n\t\t\tvalue = value / trafficData.length / 100;\r\n\t\t\tsetData(value);\r\n\t\t} else {\r\n\t\t\tsetData(trafficData[0][\"totalVehicleAvgSpeed\"] / 100);\r\n\t\t}\r\n\t\tsetLoadingData(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tpercent: Data,\r\n\t\trange: {\r\n\t\t\tticks: [0, 1 / 3, 2 / 3, 1],\r\n\t\t\tcolor: [\"#595c97\"],\r\n\t\t},\r\n\t\tindicator: {\r\n\t\t\tpointer: { style: { stroke: \"#D0D0D0\", lineWidth: 2 } },\r\n\t\t\tpin: null,\r\n\t\t},\r\n\t\taxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn Number(v) * 100;\r\n\t\t\t\t},\r\n\t\t\t\tstyle: { fontSize: 10 },\r\n\t\t\t},\r\n\t\t},\r\n\t\tstatistic: {\r\n\t\t\tcontent: {\r\n\t\t\t\tformatter: function formatter(_ref) {\r\n\t\t\t\t\treturn (_ref.percent * 100).toFixed(2) + \" km/h\";\r\n\t\t\t\t},\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfontSize: \"14px\",\r\n\t\t\t\t\tlineHeight: \"30px\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoadingData ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Gauge {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AvgSpeedGauge;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js",["526"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst AvgSpeedLine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar avgSpeedTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\r\n\t\t\ttempCar[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\tavgSpeedTotalData.push(tempCar);\r\n\t\t\tavgSpeedTotalData.push(tempBus);\r\n\t\t\tavgSpeedTotalData.push(tempTruck);\r\n\t\t\tavgSpeedTotalData.push(tempMotor);\r\n\t\t});\r\n\t\tsetData(avgSpeedTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"lane\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default AvgSpeedLine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTCnt.js",["527"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"1\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar cntTotalData = [];\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carVolume;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusVolume;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckVolume;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorVolume;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleVolume;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tcntTotalData.push(tempCar);\r\n\t\t\tcntTotalData.push(tempBus);\r\n\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\tcntTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlegend: true,\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTCnt;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\header\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js",["528"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountTable\\AccountTable.js",["529","530","531"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n\tTable,\r\n\tTag,\r\n\tmessage,\r\n\tSpin,\r\n\tTypography,\r\n\tPopconfirm,\r\n\tDivider,\r\n} from \"antd\";\r\nimport {\r\n\tCheckCircleOutlined,\r\n\tExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst AccountTable = (props) => {\r\n\tconst { baseURL } = props;\r\n\tconst { Text } = Typography;\r\n\tconst { setLoggedIn } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoadingData, setLoadingData] = useState(false);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingData(true);\r\n\t\tsetEmptyData(false);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, []);\r\n\tconst handleUnlock = (key, username) => {\r\n\t\taxios\r\n\t\t\t.delete(`${baseURL}/users/${username}/lock`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst dataSource = [...Data];\r\n\t\t\t\tdataSource[key][\"locked\"] = false;\r\n\t\t\t\tsetData(dataSource);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t} else if (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\r\n\t\t\t\t\t\t\"네트워크 문제 혹은 일시적인 오류로 데이터를 불러올 수 없습니다\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleDelete = (key, username) => {\r\n\t\taxios\r\n\t\t\t.delete(`${baseURL}/users/${username}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst dataSource = [...Data];\r\n\t\t\t\tsetData(dataSource.filter((item) => item.key !== key));\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t} else if (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\r\n\t\t\t\t\t\t\"네트워크 문제 혹은 일시적인 오류로 데이터를 불러올 수 없습니다\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"아이디\",\r\n\t\t\tdataIndex: \"username\",\r\n\t\t\tkey: \"username\",\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\ttitle: \"소속\",\r\n\t\t\tdataIndex: \"affiliate\",\r\n\t\t\tkey: \"affiliate\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"상태\",\r\n\t\t\tkey: \"locked\",\r\n\t\t\tdataIndex: \"locked\",\r\n\t\t\trender: (text, record) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{record.locked ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Tag icon={<ExclamationCircleOutlined />} color=\"red\">\r\n\t\t\t\t\t\t\t\t잠김\r\n\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t\t<Divider type=\"vertical\" />\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\ttitle=\"잠금을 해체하시겠습니까?\"\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleUnlock(record.key, record.username)}\r\n\t\t\t\t\t\t\t\tokText=\"예\"\r\n\t\t\t\t\t\t\t\tcancelText=\"아니요\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#688df2\",\r\n\t\t\t\t\t\t\t\t\t\tmarginLeft: 7,\r\n\t\t\t\t\t\t\t\t\t\talignSelf: \"baseline\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t잠금 해제\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Tag icon={<CheckCircleOutlined />} color=\"green\">\r\n\t\t\t\t\t\t\t\t정상\r\n\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t\t<Divider type=\"vertical\" />\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tcolor: \"#dcdee0\",\r\n\t\t\t\t\t\t\t\t\tmarginLeft: 7,\r\n\t\t\t\t\t\t\t\t\talignSelf: \"baseline\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t잠금 해제\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"\",\r\n\t\t\tdataIndex: \"deleteAcc\",\r\n\r\n\t\t\tkey: \"deleteAcc\",\r\n\t\t\trender: (text, record) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\ttitle=\"계정을 삭제하시겠습니까?\"\r\n\t\t\t\t\t\tonConfirm={() => handleDelete(record.key, record.username)}\r\n\t\t\t\t\t\tokText=\"예\"\r\n\t\t\t\t\t\tcancelText=\"아니요\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tcolor: \"#688df2\",\r\n\t\t\t\t\t\t\t\talignSelf: \"baseline\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t계정 삭제\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t</>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}/users`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tres.data.forEach((eachData, index) => {\r\n\t\t\t\t\t\tconst { username, affiliate, locked } = eachData;\r\n\t\t\t\t\t\tlet dataTemp = {};\r\n\r\n\t\t\t\t\t\tdataTemp[\"key\"] = index;\r\n\t\t\t\t\t\tdataTemp[\"username\"] = username;\r\n\t\t\t\t\t\tdataTemp[\"affiliate\"] = affiliate;\r\n\t\t\t\t\t\tdataTemp[\"locked\"] = locked;\r\n\t\t\t\t\t\tTotalData.push(dataTemp);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetData(TotalData);\r\n\t\t\t\t\tsetLoadingData(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t} else if (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\r\n\t\t\t\t\t\t\"네트워크 문제 혹은 일시적인 오류로 데이터를 불러올 수 없습니다\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"account-table\">\r\n\t\t\t{isEmptyData ? (\r\n\t\t\t\t<div className=\"empty-data-text\">\r\n\t\t\t\t\t<Text strong>발급된 계정이 없습니다</Text>\r\n\t\t\t\t</div>\r\n\t\t\t) : isLoadingData ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table\r\n\t\t\t\t\tpagination={{ hideOnSinglePage: true }}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tdataSource={Data}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(AccountTable);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WMFlowRate.js",["532"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst WMFlowRate = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"8\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar TotalData = [];\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst { weekOption, recordDate, totalVehiclePeakHourFlowRate } =\r\n\t\t\t\tTrafficData;\r\n\r\n\t\t\tconst temp = {};\r\n\t\t\ttemp[\"type\"] = WeekKey[weekOption];\r\n\r\n\t\t\tif (!temp[\"type\"]) {\r\n\t\t\t\ttemp[\"type\"] = moment(recordDate).format(\"MM-DD\");\r\n\t\t\t}\r\n\t\t\ttemp[\"value\"] = totalVehiclePeakHourFlowRate;\r\n\r\n\t\t\tTotalData.push(temp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"type\",\r\n\t\tyField: \"value\",\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfill: \"#FFFFFF\",\r\n\t\t\t\topacity: 0.6,\r\n\t\t\t},\r\n\t\t},\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tmeta: {\r\n\t\t\ttype: { alias: \"요일\" },\r\n\t\t\tvalue: { alias: \"첨두유율\" },\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WMFlowRate;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js",["533"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst PCULine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar PCUTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordTime,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tlet tempTotal = {};\r\n\t\t\tconst Time = moment(recordTime).format(\"HH:mm\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehiclePassengerCarUnit;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tPCUTotalData.push(tempCar);\r\n\t\t\tPCUTotalData.push(tempBus);\r\n\t\t\tPCUTotalData.push(tempTruck);\r\n\t\t\tPCUTotalData.push(tempMotor);\r\n\t\t\tPCUTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(PCUTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PCULine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js",["534"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport \"../style.less\";\r\n\r\nconst WTFirstTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t\tkey: \"time\",\r\n\t\t\twidth: 67,\r\n\t\t\ttextWrap: \"word-break\",\r\n\t\t\tellipsis: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tkey: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tkey: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tkey: \"bus\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tkey: \"truck\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"오토바이\",\r\n\t\t\tkey: \"motor\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"motorpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tdataTemp[\"time\"] = WeekKey[weekOption];\r\n\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tdataSource={Data}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tpagination={{ hideOnSinglePage: true }}\r\n\t\t\t\t\tbordered\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTFirstTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTVehicleRatio.js",["535"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js",["536"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport moment from \"moment\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst OverSpeedCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar cntTotalData = [];\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleSpdVolume;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tcntTotalData.push(tempCar);\r\n\t\t\tcntTotalData.push(tempBus);\r\n\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\tcntTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default OverSpeedCnt;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js",["537"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\date.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTOverSpeed.js",["538"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js",["539"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StreamingContainer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MLFirstTable.js",["540"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTConcentrationRatio.js",["541"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\LaneTableCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTFirstTable.js",["542"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTVehicleRatio.js",["543"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\index.js",["544","545"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Spin, message } from \"antd\";\n\nimport LoginPage from \"./pages/login/LoginPage\";\nimport RealtimeStreamingPage from \"./pages/realtimeStreaming/RealtimeStreamingPage\";\nimport RealtimeStatisticPage from \"./pages/realtimeStatistic/RealtimeStatisticPage\";\nimport DayStatPage from \"./pages/statisticAnalysis/DayStatPage\";\nimport WeekStatPage from \"./pages/statisticAnalysis/WeekStatPage\";\nimport MonthStatPage from \"./pages/statisticAnalysis/MonthStatPage\";\nimport SearchDownloadPage from \"./pages/search/SearchPage\";\nimport SearchOverSpeed from \"./pages/search/OverspeedPage\";\nimport PasswordPage from \"./pages/account/PasswordPage\";\nimport SignupPage from \"./pages/account/SignupPage\";\nimport SearchAccountPage from \"./pages/account/SearchAccount\";\n\nconst App = (props) => {\n\tconst { baseURL } = props;\n\tconst [loggedIn, setLoggedIn] = useState(false);\n\tconst [isLoading, setLoading] = useState(true);\n\tconst [isMaster, setMaster] = useState(false);\n\tconst [realFirstFilter, setRealFirstFilter] = useState(false);\n\n\tuseEffect(() => {\n\t\tloginStatus();\n\t}, [sessionStorage.getItem(\"username\")]);\n\n\tconst loginStatus = () => {\n\t\taxios\n\t\t\t.get(`${baseURL}/users/${sessionStorage.getItem(\"username\")}`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\n\t\t\t\t\tCache: \"No-cache\",\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tlet master = res.data.isMaster;\n\t\t\t\tif (master) {\n\t\t\t\t\tsetMaster(true);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetMaster(false);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t}\n\t\t\t\tsetLoggedIn(true);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err.response) {\n\t\t\t\t\tif (err.response.status === 401) {\n\t\t\t\t\t\tif (sessionStorage.getItem(\"username\")) {\n\t\t\t\t\t\t\tmessage.warning(\"로그아웃 되었습니다\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmessage.error(\"Network Error\");\n\t\t\t\t}\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t};\n\treturn (\n\t\t<>\n\t\t\t{isLoading ? (\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginTop: 20,\n\t\t\t\t\t\tmarginBottom: 20,\n\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\tpaddingTop: 30,\n\t\t\t\t\t\tpaddingBottom: 30,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Spin size=\"large\" />\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t{loggedIn ? (\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t{/* <Route path=\"/login\" render={() => <LoginPage />} /> */}\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath=\"/realtime/streaming\"\n\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t<RealtimeStreamingPage\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\n\t\t\t\t\t\t\t\t\t\tisMaster={isMaster}\n\t\t\t\t\t\t\t\t\t\tsetRealFirstFilter={setRealFirstFilter}\n\t\t\t\t\t\t\t\t\t\trealFirstFilter={realFirstFilter}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/realtime/statistic\"\n\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t<RealtimeStatisticPage\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\n\t\t\t\t\t\t\t\t\t\tisMaster={isMaster}\n\t\t\t\t\t\t\t\t\t\tsetRealFirstFilter={setRealFirstFilter}\n\t\t\t\t\t\t\t\t\t\trealFirstFilter={realFirstFilter}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/statistic/day\"\n\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t<DayStatPage\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\n\t\t\t\t\t\t\t\t\t\tisMaster={isMaster}\n\t\t\t\t\t\t\t\t\t\tsetRealFirstFilter={setRealFirstFilter}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/statistic/week\"\n\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t<WeekStatPage\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\n\t\t\t\t\t\t\t\t\t\tisMaster={isMaster}\n\t\t\t\t\t\t\t\t\t\tsetRealFirstFilter={setRealFirstFilter}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/statistic/month\"\n\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t<MonthStatPage\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\n\t\t\t\t\t\t\t\t\t\tisMaster={isMaster}\n\t\t\t\t\t\t\t\t\t\tsetRealFirstFilter={setRealFirstFilter}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/search\"\n\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t<SearchDownloadPage\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\n\t\t\t\t\t\t\t\t\t\tisMaster={isMaster}\n\t\t\t\t\t\t\t\t\t\tsetRealFirstFilter={setRealFirstFilter}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/overspeed\"\n\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t<SearchOverSpeed\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\n\t\t\t\t\t\t\t\t\t\tisMaster={isMaster}\n\t\t\t\t\t\t\t\t\t\tsetRealFirstFilter={setRealFirstFilter}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/password\"\n\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t<PasswordPage\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\n\t\t\t\t\t\t\t\t\t\tisMaster={isMaster}\n\t\t\t\t\t\t\t\t\t\tsetRealFirstFilter={setRealFirstFilter}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/signup\"\n\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t<SignupPage\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\n\t\t\t\t\t\t\t\t\t\tisMaster={isMaster}\n\t\t\t\t\t\t\t\t\t\tsetRealFirstFilter={setRealFirstFilter}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/account\"\n\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t<SearchAccountPage\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\n\t\t\t\t\t\t\t\t\t\tisMaster={isMaster}\n\t\t\t\t\t\t\t\t\t\tsetRealFirstFilter={setRealFirstFilter}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Redirect path=\"*\" to=\"/realtime/streaming\" />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath=\"/*\"\n\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t<LoginPage\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\n\t\t\t\t\t\t\t\t\t\tsetRealFirstFilter={setRealFirstFilter}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t)}\n\t\t\t\t</BrowserRouter>\n\t\t\t)}\n\t\t</>\n\t);\n};\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tbaseURL: state.baseURL.baseURL,\n\t};\n};\n\nexport default connect(mapStateToProps)(App);\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WeekPeakTime.js",["546"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\graphCard\\GraphCard.js",[],{"ruleId":"547","severity":1,"message":"548","line":36,"column":8,"nodeType":"549","messageId":"550","endLine":36,"endColumn":15},{"ruleId":"551","severity":1,"message":"552","line":60,"column":5,"nodeType":"553","endLine":60,"endColumn":53,"suggestions":"554"},{"ruleId":"555","replacedBy":"556"},{"ruleId":"557","replacedBy":"558"},{"ruleId":"555","replacedBy":"559"},{"ruleId":"557","replacedBy":"560"},{"ruleId":"551","severity":1,"message":"561","line":72,"column":5,"nodeType":"553","endLine":72,"endColumn":50,"suggestions":"562"},{"ruleId":"551","severity":1,"message":"561","line":81,"column":5,"nodeType":"553","endLine":81,"endColumn":14,"suggestions":"563"},{"ruleId":"555","replacedBy":"564"},{"ruleId":"557","replacedBy":"565"},{"ruleId":"551","severity":1,"message":"566","line":15,"column":5,"nodeType":"553","endLine":15,"endColumn":18,"suggestions":"567"},{"ruleId":"555","replacedBy":"568"},{"ruleId":"557","replacedBy":"569"},{"ruleId":"551","severity":1,"message":"566","line":15,"column":5,"nodeType":"553","endLine":15,"endColumn":18,"suggestions":"570"},{"ruleId":"555","replacedBy":"571"},{"ruleId":"557","replacedBy":"572"},{"ruleId":"551","severity":1,"message":"561","line":35,"column":5,"nodeType":"553","endLine":35,"endColumn":55,"suggestions":"573"},{"ruleId":"555","replacedBy":"574"},{"ruleId":"557","replacedBy":"575"},{"ruleId":"555","replacedBy":"576"},{"ruleId":"557","replacedBy":"577"},{"ruleId":"551","severity":1,"message":"566","line":19,"column":5,"nodeType":"553","endLine":19,"endColumn":40,"suggestions":"578"},{"ruleId":"555","replacedBy":"579"},{"ruleId":"557","replacedBy":"580"},{"ruleId":"551","severity":1,"message":"566","line":29,"column":5,"nodeType":"553","endLine":29,"endColumn":40,"suggestions":"581"},{"ruleId":"555","replacedBy":"582"},{"ruleId":"557","replacedBy":"583"},{"ruleId":"551","severity":1,"message":"584","line":29,"column":5,"nodeType":"553","endLine":29,"endColumn":7,"suggestions":"585"},{"ruleId":"551","severity":1,"message":"586","line":16,"column":14,"nodeType":"587","endLine":16,"endColumn":15},{"ruleId":"555","replacedBy":"588"},{"ruleId":"557","replacedBy":"589"},{"ruleId":"551","severity":1,"message":"566","line":18,"column":5,"nodeType":"553","endLine":18,"endColumn":40,"suggestions":"590"},{"ruleId":"555","replacedBy":"591"},{"ruleId":"557","replacedBy":"592"},{"ruleId":"551","severity":1,"message":"566","line":29,"column":5,"nodeType":"553","endLine":29,"endColumn":40,"suggestions":"593"},{"ruleId":"551","severity":1,"message":"594","line":126,"column":19,"nodeType":"587","endLine":126,"endColumn":20},{"ruleId":"551","severity":1,"message":"595","line":127,"column":20,"nodeType":"587","endLine":127,"endColumn":21},{"ruleId":"551","severity":1,"message":"596","line":128,"column":23,"nodeType":"587","endLine":128,"endColumn":24},{"ruleId":"551","severity":1,"message":"597","line":129,"column":28,"nodeType":"598","endLine":129,"endColumn":30},{"ruleId":"599","severity":1,"message":"600","line":261,"column":38,"nodeType":"601","messageId":"602","endLine":261,"endColumn":40},{"ruleId":"599","severity":1,"message":"603","line":502,"column":38,"nodeType":"601","messageId":"604","endLine":502,"endColumn":40},{"ruleId":"551","severity":1,"message":"584","line":29,"column":5,"nodeType":"553","endLine":29,"endColumn":7,"suggestions":"605"},{"ruleId":"551","severity":1,"message":"584","line":29,"column":5,"nodeType":"553","endLine":29,"endColumn":7,"suggestions":"606"},{"ruleId":"555","replacedBy":"607"},{"ruleId":"557","replacedBy":"608"},{"ruleId":"555","replacedBy":"609"},{"ruleId":"557","replacedBy":"610"},{"ruleId":"551","severity":1,"message":"566","line":16,"column":5,"nodeType":"553","endLine":16,"endColumn":40,"suggestions":"611"},{"ruleId":"547","severity":1,"message":"612","line":29,"column":9,"nodeType":"549","messageId":"550","endLine":29,"endColumn":20},{"ruleId":"551","severity":1,"message":"613","line":102,"column":5,"nodeType":"553","endLine":102,"endColumn":53,"suggestions":"614"},{"ruleId":"551","severity":1,"message":"586","line":18,"column":15,"nodeType":"587","endLine":18,"endColumn":16},{"ruleId":"551","severity":1,"message":"615","line":31,"column":5,"nodeType":"553","endLine":31,"endColumn":23,"suggestions":"616"},{"ruleId":"551","severity":1,"message":"617","line":44,"column":5,"nodeType":"553","endLine":44,"endColumn":23,"suggestions":"618"},{"ruleId":"551","severity":1,"message":"584","line":48,"column":5,"nodeType":"553","endLine":48,"endColumn":7,"suggestions":"619"},{"ruleId":"547","severity":1,"message":"620","line":21,"column":9,"nodeType":"549","messageId":"550","endLine":21,"endColumn":14},{"ruleId":"551","severity":1,"message":"584","line":59,"column":5,"nodeType":"553","endLine":59,"endColumn":7,"suggestions":"621"},{"ruleId":"555","replacedBy":"622"},{"ruleId":"557","replacedBy":"623"},{"ruleId":"547","severity":1,"message":"620","line":18,"column":9,"nodeType":"549","messageId":"550","endLine":18,"endColumn":14},{"ruleId":"551","severity":1,"message":"584","line":27,"column":5,"nodeType":"553","endLine":27,"endColumn":7,"suggestions":"624"},{"ruleId":"551","severity":1,"message":"584","line":16,"column":5,"nodeType":"553","endLine":16,"endColumn":7,"suggestions":"625"},{"ruleId":"551","severity":1,"message":"584","line":18,"column":5,"nodeType":"553","endLine":18,"endColumn":7,"suggestions":"626"},{"ruleId":"551","severity":1,"message":"584","line":18,"column":5,"nodeType":"553","endLine":18,"endColumn":7,"suggestions":"627"},{"ruleId":"551","severity":1,"message":"584","line":18,"column":5,"nodeType":"553","endLine":18,"endColumn":7,"suggestions":"628"},{"ruleId":"555","replacedBy":"629"},{"ruleId":"557","replacedBy":"630"},{"ruleId":"551","severity":1,"message":"631","line":49,"column":5,"nodeType":"553","endLine":49,"endColumn":48,"suggestions":"632"},{"ruleId":"551","severity":1,"message":"633","line":14,"column":5,"nodeType":"553","endLine":14,"endColumn":18,"suggestions":"634"},{"ruleId":"551","severity":1,"message":"566","line":19,"column":5,"nodeType":"553","endLine":19,"endColumn":40,"suggestions":"635"},{"ruleId":"551","severity":1,"message":"566","line":18,"column":5,"nodeType":"553","endLine":18,"endColumn":40,"suggestions":"636"},{"ruleId":"547","severity":1,"message":"548","line":19,"column":8,"nodeType":"549","messageId":"550","endLine":19,"endColumn":15},{"ruleId":"547","severity":1,"message":"637","line":25,"column":10,"nodeType":"549","messageId":"550","endLine":25,"endColumn":14},{"ruleId":"551","severity":1,"message":"638","line":47,"column":5,"nodeType":"553","endLine":47,"endColumn":55,"suggestions":"639"},{"ruleId":"555","replacedBy":"640"},{"ruleId":"557","replacedBy":"641"},{"ruleId":"551","severity":1,"message":"566","line":17,"column":5,"nodeType":"553","endLine":17,"endColumn":40,"suggestions":"642"},{"ruleId":"551","severity":1,"message":"566","line":29,"column":5,"nodeType":"553","endLine":29,"endColumn":40,"suggestions":"643"},{"ruleId":"547","severity":1,"message":"644","line":40,"column":5,"nodeType":"549","messageId":"550","endLine":40,"endColumn":26},{"ruleId":"551","severity":1,"message":"645","line":13,"column":14,"nodeType":"587","endLine":13,"endColumn":18},{"ruleId":"555","replacedBy":"646"},{"ruleId":"557","replacedBy":"647"},{"ruleId":"551","severity":1,"message":"615","line":17,"column":5,"nodeType":"553","endLine":17,"endColumn":23,"suggestions":"648"},{"ruleId":"551","severity":1,"message":"566","line":18,"column":5,"nodeType":"553","endLine":18,"endColumn":40,"suggestions":"649"},{"ruleId":"551","severity":1,"message":"645","line":15,"column":14,"nodeType":"587","endLine":15,"endColumn":18},{"ruleId":"555","replacedBy":"650"},{"ruleId":"557","replacedBy":"651"},{"ruleId":"551","severity":1,"message":"652","line":63,"column":5,"nodeType":"553","endLine":63,"endColumn":13,"suggestions":"653"},{"ruleId":"551","severity":1,"message":"566","line":18,"column":5,"nodeType":"553","endLine":18,"endColumn":40,"suggestions":"654"},{"ruleId":"547","severity":1,"message":"655","line":4,"column":10,"nodeType":"549","messageId":"550","endLine":4,"endColumn":13},{"ruleId":"551","severity":1,"message":"566","line":19,"column":5,"nodeType":"553","endLine":19,"endColumn":40,"suggestions":"656"},{"ruleId":"547","severity":1,"message":"657","line":2,"column":40,"nodeType":"549","messageId":"550","endLine":2,"endColumn":45},{"ruleId":"547","severity":1,"message":"548","line":45,"column":8,"nodeType":"549","messageId":"550","endLine":45,"endColumn":15},{"ruleId":"555","replacedBy":"658"},{"ruleId":"557","replacedBy":"659"},{"ruleId":"551","severity":1,"message":"660","line":16,"column":5,"nodeType":"553","endLine":16,"endColumn":18,"suggestions":"661"},{"ruleId":"551","severity":1,"message":"566","line":18,"column":5,"nodeType":"553","endLine":18,"endColumn":40,"suggestions":"662"},{"ruleId":"551","severity":1,"message":"566","line":29,"column":5,"nodeType":"553","endLine":29,"endColumn":40,"suggestions":"663"},{"ruleId":"551","severity":1,"message":"566","line":19,"column":5,"nodeType":"553","endLine":19,"endColumn":40,"suggestions":"664"},{"ruleId":"551","severity":1,"message":"631","line":34,"column":5,"nodeType":"553","endLine":34,"endColumn":7,"suggestions":"665"},{"ruleId":"666","severity":1,"message":"667","line":111,"column":9,"nodeType":"668","endLine":117,"endColumn":10},{"ruleId":"666","severity":1,"message":"667","line":155,"column":7,"nodeType":"668","endLine":160,"endColumn":8},{"ruleId":"551","severity":1,"message":"566","line":30,"column":5,"nodeType":"553","endLine":30,"endColumn":40,"suggestions":"669"},{"ruleId":"551","severity":1,"message":"566","line":17,"column":5,"nodeType":"553","endLine":17,"endColumn":40,"suggestions":"670"},{"ruleId":"551","severity":1,"message":"631","line":28,"column":5,"nodeType":"553","endLine":28,"endColumn":23,"suggestions":"671"},{"ruleId":"551","severity":1,"message":"566","line":19,"column":5,"nodeType":"553","endLine":19,"endColumn":40,"suggestions":"672"},{"ruleId":"551","severity":1,"message":"566","line":19,"column":5,"nodeType":"553","endLine":19,"endColumn":40,"suggestions":"673"},{"ruleId":"551","severity":1,"message":"566","line":29,"column":5,"nodeType":"553","endLine":29,"endColumn":40,"suggestions":"674"},{"ruleId":"551","severity":1,"message":"566","line":19,"column":5,"nodeType":"553","endLine":19,"endColumn":40,"suggestions":"675"},{"ruleId":"551","severity":1,"message":"676","line":32,"column":5,"nodeType":"553","endLine":32,"endColumn":7,"suggestions":"677"},{"ruleId":"551","severity":1,"message":"645","line":15,"column":14,"nodeType":"587","endLine":15,"endColumn":18},{"ruleId":"551","severity":1,"message":"566","line":30,"column":5,"nodeType":"553","endLine":30,"endColumn":40,"suggestions":"678"},{"ruleId":"551","severity":1,"message":"645","line":16,"column":14,"nodeType":"587","endLine":16,"endColumn":18},{"ruleId":"551","severity":1,"message":"566","line":20,"column":5,"nodeType":"553","endLine":20,"endColumn":40,"suggestions":"679"},{"ruleId":"551","severity":1,"message":"680","line":28,"column":5,"nodeType":"553","endLine":28,"endColumn":41,"suggestions":"681"},{"ruleId":"551","severity":1,"message":"682","line":28,"column":6,"nodeType":"683","endLine":28,"endColumn":40},{"ruleId":"551","severity":1,"message":"566","line":28,"column":5,"nodeType":"553","endLine":28,"endColumn":40,"suggestions":"684"},"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosAsync', 'camera', 'city', 'district', 'road', and 'spot'. Either include them or remove the dependency array.","ArrayExpression",["685"],"no-native-reassign",["686"],"no-negated-in-lhs",["687"],["686"],["687"],"React Hook useEffect has a missing dependency: 'getTrafficData'. Either include it or remove the dependency array.",["688"],["689"],["686"],["687"],"React Hook useEffect has a missing dependency: 'parseTotalData'. Either include it or remove the dependency array.",["690"],["686"],["687"],["691"],["686"],["687"],["692"],["686"],["687"],["686"],["687"],["693"],["686"],["687"],["694"],["686"],["687"],"React Hook useEffect has a missing dependency: 'setRealFirstFilter'. Either include it or remove the dependency array.",["695"],"Assignments to the 'countCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal",["686"],["687"],["696"],["686"],["687"],["697"],"Assignments to the 'countFirstCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'countSecondCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'countOverSpeedCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'firstDataLaneTotalTemp' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","array-callback-return","Array.prototype.some() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.some() expects a value to be returned at the end of arrow function.","expectedAtEnd",["698"],["699"],["686"],["687"],["686"],["687"],["700"],"'isEmptyData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'axiosAsync'. Either include it or remove the dependency array.",["701"],"React Hook useEffect has missing dependencies: 'currentLaneNum' and 'parseData'. Either include them or remove the dependency array.",["702"],"React Hook useEffect has a missing dependency: 'spinTimer'. Either include it or remove the dependency array.",["703"],["704"],"'count' is assigned a value but never used.",["705"],["686"],["687"],["706"],["707"],["708"],["709"],["710"],["686"],["687"],"React Hook useEffect has a missing dependency: 'axiosData'. Either include it or remove the dependency array.",["711"],"React Hook useEffect has a missing dependency: 'parseTraffic'. Either include it or remove the dependency array.",["712"],["713"],["714"],"'Text' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTrafficTotalData'. Either include it or remove the dependency array.",["715"],["686"],["687"],["716"],["717"],"'totalVehicleSpdVolume' is assigned a value but never used.","Assignments to the 'FristRow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.",["686"],["687"],["718"],["719"],["686"],["687"],"React Hook useEffect has a missing dependency: 'setVideoSource'. Either include it or remove the dependency array.",["720"],["721"],"'act' is defined but never used.",["722"],"'Modal' is defined but never used.",["686"],["687"],"React Hook useEffect has a missing dependency: 'parseData'. Either include it or remove the dependency array.",["723"],["724"],["725"],["726"],["727"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["728"],["729"],["730"],["731"],["732"],["733"],["734"],"React Hook useEffect has a missing dependency: 'getOptions'. Either include it or remove the dependency array.",["735"],["736"],["737"],"React Hook useEffect has a missing dependency: 'loginStatus'. Either include it or remove the dependency array.",["738"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",["739"],{"desc":"740","fix":"741"},"no-global-assign","no-unsafe-negation",{"desc":"742","fix":"743"},{"desc":"744","fix":"745"},{"desc":"746","fix":"747"},{"desc":"746","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},{"desc":"751","fix":"753"},{"desc":"754","fix":"755"},{"desc":"751","fix":"756"},{"desc":"751","fix":"757"},{"desc":"754","fix":"758"},{"desc":"754","fix":"759"},{"desc":"751","fix":"760"},{"desc":"761","fix":"762"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},{"desc":"754","fix":"767"},{"desc":"754","fix":"768"},{"desc":"754","fix":"769"},{"desc":"754","fix":"770"},{"desc":"754","fix":"771"},{"desc":"754","fix":"772"},{"desc":"754","fix":"773"},{"desc":"774","fix":"775"},{"desc":"776","fix":"777"},{"desc":"751","fix":"778"},{"desc":"751","fix":"779"},{"desc":"780","fix":"781"},{"desc":"751","fix":"782"},{"desc":"751","fix":"783"},{"desc":"763","fix":"784"},{"desc":"751","fix":"785"},{"desc":"786","fix":"787"},{"desc":"751","fix":"788"},{"desc":"751","fix":"789"},{"desc":"790","fix":"791"},{"desc":"751","fix":"792"},{"desc":"751","fix":"793"},{"desc":"751","fix":"794"},{"desc":"795","fix":"796"},{"desc":"751","fix":"797"},{"desc":"751","fix":"798"},{"desc":"799","fix":"800"},{"desc":"751","fix":"801"},{"desc":"751","fix":"802"},{"desc":"751","fix":"803"},{"desc":"751","fix":"804"},{"desc":"805","fix":"806"},{"desc":"751","fix":"807"},{"desc":"751","fix":"808"},{"desc":"809","fix":"810"},{"desc":"751","fix":"811"},"Update the dependencies array to be: [cameraCode, currTime, refresh, realFirstFilter, axiosAsync, city, district, road, spot, camera]",{"range":"812","text":"813"},"Update the dependencies array to be: [cameraCode, startDate, endTime, currentTime, getTrafficData]",{"range":"814","text":"815"},"Update the dependencies array to be: [getTrafficData, refresh]",{"range":"816","text":"817"},"Update the dependencies array to be: [parseTotalData, trafficData]",{"range":"818","text":"819"},{"range":"820","text":"819"},"Update the dependencies array to be: [realtimeCamCode, startDate, endTime, currentTime, getTrafficData]",{"range":"821","text":"822"},"Update the dependencies array to be: [trafficTotalData, activeVisualKey, parseTotalData]",{"range":"823","text":"824"},{"range":"825","text":"824"},"Update the dependencies array to be: [setRealFirstFilter]",{"range":"826","text":"827"},{"range":"828","text":"824"},{"range":"829","text":"824"},{"range":"830","text":"827"},{"range":"831","text":"827"},{"range":"832","text":"824"},"Update the dependencies array to be: [cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",{"range":"833","text":"834"},"Update the dependencies array to be: [currentLaneNum, parseData, trafficTotalData]",{"range":"835","text":"836"},"Update the dependencies array to be: [isLoadingNameAdd, spinTimer]",{"range":"837","text":"838"},{"range":"839","text":"827"},{"range":"840","text":"827"},{"range":"841","text":"827"},{"range":"842","text":"827"},{"range":"843","text":"827"},{"range":"844","text":"827"},{"range":"845","text":"827"},"Update the dependencies array to be: [startDate, endTime, cameraCode, isRefresh, axiosData]",{"range":"846","text":"847"},"Update the dependencies array to be: [parseTraffic, trafficData]",{"range":"848","text":"849"},{"range":"850","text":"824"},{"range":"851","text":"824"},"Update the dependencies array to be: [cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",{"range":"852","text":"853"},{"range":"854","text":"824"},{"range":"855","text":"824"},{"range":"856","text":"836"},{"range":"857","text":"824"},"Update the dependencies array to be: [setVideoSource, source]",{"range":"858","text":"859"},{"range":"860","text":"824"},{"range":"861","text":"824"},"Update the dependencies array to be: [parseData, trafficData]",{"range":"862","text":"863"},{"range":"864","text":"824"},{"range":"865","text":"824"},{"range":"866","text":"824"},"Update the dependencies array to be: [axiosData]",{"range":"867","text":"868"},{"range":"869","text":"824"},{"range":"870","text":"824"},"Update the dependencies array to be: [axiosData, trafficTotalData]",{"range":"871","text":"872"},{"range":"873","text":"824"},{"range":"874","text":"824"},{"range":"875","text":"824"},{"range":"876","text":"824"},"Update the dependencies array to be: [getOptions]",{"range":"877","text":"878"},{"range":"879","text":"824"},{"range":"880","text":"824"},"Update the dependencies array to be: [loginStatus]",{"range":"881","text":"882"},{"range":"883","text":"824"},[1837,1885],"[cameraCode, currTime, refresh, realFirstFilter, axiosAsync, city, district, road, spot, camera]",[1959,2004],"[cameraCode, startDate, endTime, currentTime, getTrafficData]",[2157,2166],"[getTrafficData, refresh]",[384,397],"[parseTotalData, trafficData]",[385,398],[1021,1071],"[realtimeCamCode, startDate, endTime, currentTime, getTrafficData]",[467,502],"[trafficTotalData, activeVisualKey, parseTotalData]",[615,650],[1211,1213],"[setRealFirstFilter]",[439,474],[606,641],[1190,1192],[1212,1214],[453,488],[2753,2801],"[cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",[617,635],"[currentLaneNum, parseData, trafficTotalData]",[1332,1350],"[isLoadingNameAdd, spinTimer]",[1410,1412],[1612,1614],[1043,1045],[442,444],[557,559],[565,567],[563,565],[1113,1156],"[startDate, endTime, cameraCode, isRefresh, axiosData]",[386,399],"[parseTraffic, trafficData]",[470,505],[462,497],[1516,1566],"[cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",[439,474],[612,647],[417,435],[432,467],[1585,1593],"[setVideoSource, source]",[464,499],[515,550],[390,403],"[parseData, trafficData]",[439,474],[606,641],[467,502],[751,753],"[axiosData]",[643,678],[460,495],[559,577],"[axiosData, trafficTotalData]",[469,504],[469,504],[611,646],[469,504],[758,760],"[getOptions]",[654,689],[471,506],[1251,1287],"[loginStatus]",[611,646]]