[{"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\timeStat.js":"1","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\Peak15.js":"2","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PeakHour.js":"3","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js":"4","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js":"5","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\traffic.js":"6","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\AvgSpeed.js":"7","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js":"8","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\Traffic.js":"9","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PHF.js":"10","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\searchDownload\\SearchDownloadPage.js":"11","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\comVisualHalf\\ComVisualHalf.js":"12","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\singleRadio\\SingleRadio.js":"13","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\bidirectionalBar\\DayNight.js":"14","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js":"15","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js":"16","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js":"17","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\dashLineChart\\pedestrians.js":"18","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js":"19","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\index.js":"20","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js":"21","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\comVisualOne\\ComVisualOne.js":"22","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js":"23","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js":"24","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\TimeDataVisualization.js":"25","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js":"26","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\dataComparison\\DataComparisonPage.js":"27","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js":"28","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTCnt.js":"29","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTVehicleRatio.js":"30","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\overSpeed.js":"31","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTOverSpeed.js":"32","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\DLCnt.js":"33","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\DLOverSpeed.js":"34","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js":"35","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js":"36","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DLAvgSpeed.js":"37","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\DLVehicleRatio.js":"38","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js":"39","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js":"40","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js":"41","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js":"42","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\DLPCU.js":"43","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\funnelChart\\index.js":"44","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\areaChart\\index.js":"45","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js":"46","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js":"47","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTCnt.js":"48","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js":"49","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js":"50","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchCollapsedTable\\SearchCollapsedTable.js":"51","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\TimeTableCard.js":"52","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\LaneTableCard.js":"53","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTFirstTable.js":"54","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js":"55","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoStreaming\\VideoContainer.js":"56","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js":"57","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js":"58","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchResultTab\\SearchResultTab.js":"59","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTSecondTable.js":"60","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js":"61","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js":"62","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js":"63","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js":"64","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js":"65","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js":"66","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\PasswordPage.js":"67","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchComparison\\SearchComparison.js":"68","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\slideBarChart\\index.js":"69","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js":"70","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js":"71","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js":"72","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js":"73","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\accountDescription\\AccountDescriptionFrom.js":"74","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js":"75","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js":"76","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\pieChart\\index.js":"77","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\comVisualization\\ComVisualization.js":"78","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js":"79","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js":"80","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js":"81","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js":"82","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js":"83","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\store\\index.js":"84","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\login\\LoginPage.js":"85","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\userInfo.js":"86","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js":"87"},{"size":9376,"mtime":1614858832895,"results":"88","hashOfConfig":"89"},{"size":622,"mtime":1615343681648,"results":"90","hashOfConfig":"89"},{"size":620,"mtime":1615277353847,"results":"91","hashOfConfig":"89"},{"size":968,"mtime":1615277373384,"results":"92","hashOfConfig":"89"},{"size":4079,"mtime":1616055216499,"results":"93","hashOfConfig":"89"},{"size":1727,"mtime":1614858208881,"results":"94","hashOfConfig":"89"},{"size":1928,"mtime":1615948137386,"results":"95","hashOfConfig":"89"},{"size":2116,"mtime":1615948083114,"results":"96","hashOfConfig":"89"},{"size":2153,"mtime":1615948041543,"results":"97","hashOfConfig":"89"},{"size":656,"mtime":1615277366185,"results":"98","hashOfConfig":"89"},{"size":1970,"mtime":1616115656599,"results":"99","hashOfConfig":"89"},{"size":703,"mtime":1611036002732,"results":"100","hashOfConfig":"89"},{"size":742,"mtime":1615875792743,"results":"101","hashOfConfig":"89"},{"size":4952,"mtime":1615344204756,"results":"102","hashOfConfig":"89"},{"size":10371,"mtime":1616121163221,"results":"103","hashOfConfig":"89"},{"size":2808,"mtime":1616033762487,"results":"104","hashOfConfig":"89"},{"size":4514,"mtime":1615877403103,"results":"105","hashOfConfig":"89"},{"size":2479,"mtime":1616055216736,"results":"106","hashOfConfig":"89"},{"size":3451,"mtime":1615192739484,"results":"107","hashOfConfig":"89"},{"size":764,"mtime":1616059632862,"results":"108","hashOfConfig":"89"},{"size":1921,"mtime":1615791928555,"results":"109","hashOfConfig":"89"},{"size":1119,"mtime":1611043645894,"results":"110","hashOfConfig":"89"},{"size":997,"mtime":1615964214432,"results":"111","hashOfConfig":"89"},{"size":4559,"mtime":1615352174447,"results":"112","hashOfConfig":"89"},{"size":9743,"mtime":1615892572261,"results":"113","hashOfConfig":"89"},{"size":2379,"mtime":1616059484514,"results":"114","hashOfConfig":"89"},{"size":1909,"mtime":1616049387277,"results":"115","hashOfConfig":"89"},{"size":2454,"mtime":1616056417387,"results":"116","hashOfConfig":"89"},{"size":3617,"mtime":1615343550330,"results":"117","hashOfConfig":"89"},{"size":4936,"mtime":1615344033907,"results":"118","hashOfConfig":"89"},{"size":1795,"mtime":1615948174123,"results":"119","hashOfConfig":"89"},{"size":4540,"mtime":1615513191740,"results":"120","hashOfConfig":"89"},{"size":2348,"mtime":1615352224571,"results":"121","hashOfConfig":"89"},{"size":2433,"mtime":1615352277905,"results":"122","hashOfConfig":"89"},{"size":3130,"mtime":1615943230391,"results":"123","hashOfConfig":"89"},{"size":4676,"mtime":1615965602446,"results":"124","hashOfConfig":"89"},{"size":2533,"mtime":1615352263173,"results":"125","hashOfConfig":"89"},{"size":2689,"mtime":1615352246692,"results":"126","hashOfConfig":"89"},{"size":2803,"mtime":1615943180052,"results":"127","hashOfConfig":"89"},{"size":3692,"mtime":1615191107078,"results":"128","hashOfConfig":"89"},{"size":3820,"mtime":1615191054225,"results":"129","hashOfConfig":"89"},{"size":3731,"mtime":1615192469262,"results":"130","hashOfConfig":"89"},{"size":2381,"mtime":1615352235794,"results":"131","hashOfConfig":"89"},{"size":1529,"mtime":1611032852741,"results":"132","hashOfConfig":"89"},{"size":772,"mtime":1610954807169,"results":"133","hashOfConfig":"89"},{"size":1938,"mtime":1615868929555,"results":"134","hashOfConfig":"89"},{"size":7808,"mtime":1616117924426,"results":"135","hashOfConfig":"89"},{"size":4570,"mtime":1615343823908,"results":"136","hashOfConfig":"89"},{"size":4819,"mtime":1615344161467,"results":"137","hashOfConfig":"89"},{"size":4805,"mtime":1611549481286,"results":"138","hashOfConfig":"89"},{"size":3045,"mtime":1616116891349,"results":"139","hashOfConfig":"89"},{"size":3754,"mtime":1616051004429,"results":"140","hashOfConfig":"89"},{"size":2164,"mtime":1615948604948,"results":"141","hashOfConfig":"89"},{"size":13389,"mtime":1616055216574,"results":"142","hashOfConfig":"89"},{"size":9323,"mtime":1615362191262,"results":"143","hashOfConfig":"89"},{"size":1608,"mtime":1616047272817,"results":"144","hashOfConfig":"89"},{"size":2983,"mtime":1616047919632,"results":"145","hashOfConfig":"89"},{"size":2363,"mtime":1616047681314,"results":"146","hashOfConfig":"89"},{"size":482,"mtime":1616115594859,"results":"147","hashOfConfig":"89"},{"size":946,"mtime":1615442951891,"results":"148","hashOfConfig":"89"},{"size":5631,"mtime":1615442959242,"results":"149","hashOfConfig":"89"},{"size":3960,"mtime":1615442988315,"results":"150","hashOfConfig":"89"},{"size":5133,"mtime":1615442995050,"results":"151","hashOfConfig":"89"},{"size":4270,"mtime":1615443001392,"results":"152","hashOfConfig":"89"},{"size":2596,"mtime":1616050359128,"results":"153","hashOfConfig":"89"},{"size":3726,"mtime":1615965207070,"results":"154","hashOfConfig":"89"},{"size":986,"mtime":1612428959561,"results":"155","hashOfConfig":"89"},{"size":2006,"mtime":1614056265112,"results":"156","hashOfConfig":"89"},{"size":849,"mtime":1610954836943,"results":"157","hashOfConfig":"89"},{"size":1996,"mtime":1616031807169,"results":"158","hashOfConfig":"89"},{"size":410,"mtime":1613529006303,"results":"159","hashOfConfig":"89"},{"size":1166,"mtime":1615870386258,"results":"160","hashOfConfig":"89"},{"size":3453,"mtime":1616049348670,"results":"161","hashOfConfig":"89"},{"size":605,"mtime":1611541951425,"results":"162","hashOfConfig":"89"},{"size":654,"mtime":1615877296950,"results":"163","hashOfConfig":"89"},{"size":2222,"mtime":1616059346692,"results":"164","hashOfConfig":"89"},{"size":1302,"mtime":1611016634488,"results":"165","hashOfConfig":"89"},{"size":2147,"mtime":1615183995838,"results":"166","hashOfConfig":"89"},{"size":193,"mtime":1610931090625,"results":"167","hashOfConfig":"89"},{"size":949,"mtime":1612428979241,"results":"168","hashOfConfig":"89"},{"size":4066,"mtime":1612503366509,"results":"169","hashOfConfig":"89"},{"size":4004,"mtime":1616055216498,"results":"170","hashOfConfig":"89"},{"size":648,"mtime":1616117735924,"results":"171","hashOfConfig":"89"},{"size":708,"mtime":1616056842816,"results":"172","hashOfConfig":"89"},{"size":879,"mtime":1616056575935,"results":"173","hashOfConfig":"89"},{"size":506,"mtime":1616059413331,"results":"174","hashOfConfig":"89"},{"size":609,"mtime":1616059442526,"results":"175","hashOfConfig":"89"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12xqqm0",{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":2,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"240"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"212"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"206"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"181"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"261"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"240"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"300"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"224"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"329"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"290"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"181"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"344"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"360"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"236"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"236"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"212"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"201"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\timeStat.js",["389","390","391","392","393","394","395","396"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\Peak15.js",["397","398"],"import React, { useEffect, useState } from \"react\";\r\nimport { Statistic } from \"antd\";\r\n\r\nconst Peak15 = (props) => {\r\n\tconst {\r\n\t\tcurrentLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingPeak,\r\n\t\tpeakData,\r\n\t\ttimeClassification,\r\n\t} = props;\r\n\tconst [peak15, setPeakHour] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLoadingPeak === false) {\r\n\t\t\tsetPeakHour(peakData[0][\"peak15Minute\"].substring(12, 16));\r\n\t\t}\r\n\t}, [isLoadingPeak, peakData]);\r\n\r\n\treturn currentLaneNumber === 0 ? (\r\n\t\t<Statistic title=\"첨두시간\" value={peak15} />\r\n\t) : (\r\n\t\t<h1>차선별 데이터 없습니다</h1>\r\n\t);\r\n};\r\n\r\nexport default Peak15;\r\n",["399","400"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PeakHour.js",["401","402"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js",["403","404"],"import React, { useEffect, useState } from \"react\";\r\nimport { Liquid } from \"@ant-design/charts\";\r\n\r\nconst PeakRatio = (props) => {\r\n\tconst {\r\n\t\tcurrentLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingPeak,\r\n\t\tpeakData,\r\n\t\ttimeClassification,\r\n\t} = props;\r\n\tconst [peakRatio, setPeakRatio] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLoadingPeak === false) {\r\n\t\t\tvar peakRatioVal =\r\n\t\t\t\tpeakData[0][\"peak15MinuteTotal\"] / peakData[0][\"total\"];\r\n\r\n\t\t\tsetPeakRatio(peakRatioVal.toFixed(2));\r\n\t\t\tconsole.log(peakRatioVal.toFixed(2));\r\n\t\t}\r\n\t}, [isLoadingPeak, peakData]);\r\n\r\n\tvar config = {\r\n\t\tpercent: peakRatio,\r\n\t\tstatistic: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function formatter() {\r\n\t\t\t\t\treturn \"집중율\";\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tcontent: {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfontSize: 16,\r\n\t\t\t\t\tfill: \"black\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn currentLaneNumber === 0 ? (\r\n\t\t<Liquid {...config} />\r\n\t) : (\r\n\t\t<h1>차선별 데이터 없습니다</h1>\r\n\t);\r\n};\r\n\r\nexport default PeakRatio;\r\n",["405","406"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js",["407"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\traffic.js",["408"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\AvgSpeed.js",["409"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js",["410"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\Traffic.js",["411"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PHF.js",["412","413"],"import React, { useEffect, useState } from \"react\";\r\nimport { Statistic } from \"antd\";\r\n\r\nconst PHF = (props) => {\r\n\tconst {\r\n\t\tcurrentLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingPeak,\r\n\t\tpeakData,\r\n\t\ttimeClassification,\r\n\t} = props;\r\n\tconst [PHF, setPHF] = useState(\"\");\r\n\tuseEffect(() => {\r\n\t\tif (isLoadingPeak === false) {\r\n\t\t\tvar PHFVal =\r\n\t\t\t\tpeakData[0][\"peakHourTotal\"] / (peakData[0][\"peak15MinuteTotal\"] * 4);\r\n\r\n\t\t\tsetPHF(PHFVal.toFixed(2));\r\n\t\t}\r\n\t}, [isLoadingPeak, peakData]);\r\n\r\n\treturn currentLaneNumber === 0 ? (\r\n\t\t<Statistic title=\"PHF\" value={PHF} />\r\n\t) : (\r\n\t\t<h1>차선별 데이터 없습니다</h1>\r\n\t);\r\n};\r\n\r\nexport default PHF;\r\n",["414","415"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\searchDownload\\SearchDownloadPage.js",["416"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\comVisualHalf\\ComVisualHalf.js",[],["417","418"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\singleRadio\\SingleRadio.js",["419"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\bidirectionalBar\\DayNight.js",["420","421","422"],"import React, { useState, useEffect } from \"react\";\r\nimport { BidirectionalBar } from \"@ant-design/charts\";\r\n\r\nconst MyBidirectionalBar = (props) => {\r\n\tconst {\r\n\t\tcurrentLaneNumber,\r\n\t\ttotalLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingTrafficTotal,\r\n\t\tisLoadingTrafficLane,\r\n\t\ttrafficTotalData,\r\n\t\ttrafficLaneData,\r\n\r\n\t\ttotalData,\r\n\t\tsetTotalData,\r\n\t\tlaneData,\r\n\t\tsetLaneData,\r\n\r\n\t\ttimeClassification,\r\n\t} = props;\r\n\tconst [Data, setData] = useState([{}, {}, {}, {}]);\r\n\tvar flag = false;\r\n\r\n\t// const group = timeClassification ? \"time\" : \"lane\";\r\n\r\n\tvar dataSample = [\r\n\t\t{\r\n\t\t\t차종: \"승용차\",\r\n\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\t차종: \"버스\",\r\n\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\t차종: \"화물차\",\r\n\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\t차종: \"이륜차\",\r\n\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t},\r\n\t];\r\n\r\n\tvar dayNightLaneData = {};\r\n\r\n\tfor (let idx = 1; idx <= totalLaneNumber; idx++) {\r\n\t\tdayNightLaneData[idx.toString()] = dataSample;\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(\"trafficTotalData,1\", trafficTotalData);\r\n\t\tif (isLoadingTrafficTotal === false && isLoadingTrafficLane === false) {\r\n\t\t\tsetTotalData([]);\r\n\t\t\tsetLaneData({});\r\n\t\t\tcurrentLaneNumber === 0 ? parseTotalData() : parseLaneData();\r\n\t\t}\r\n\t}, [\r\n\t\ttrafficLaneData,\r\n\t\ttrafficTotalData,\r\n\t\tisLoadingTrafficTotal,\r\n\t\tisLoadingTrafficLane,\r\n\t]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"6\") {\r\n\t\t\tif (isLoadingTrafficTotal === false && isLoadingTrafficLane === false) {\r\n\t\t\t\tcurrentLaneNumber === 0 ? parseTotalData() : parseLaneData();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [\r\n\t\tcurrentLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\t// isLoadingTrafficTotal,\r\n\t\t// isLoadingTrafficLane,\r\n\t]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tif (totalData.length !== 0) {\r\n\t\t\tconsole.log(\"bi total has data\");\r\n\t\t\tsetData(totalData);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count bi total parse\");\r\n\t\t\ttrafficTotalData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\trecordTime,\r\n\t\t\t\t\tcarCnt,\r\n\t\t\t\t\tmBusCnt,\r\n\t\t\t\t\tmTruckCnt,\r\n\t\t\t\t\tmotorCnt,\r\n\t\t\t\t} = TrafficData;\r\n\r\n\t\t\t\tif (!flag) {\r\n\t\t\t\t\tdataSample[0][\"야간 12시간 교통량\"] += carCnt;\r\n\t\t\t\t\tdataSample[1][\"야간 12시간 교통량\"] += mBusCnt;\r\n\t\t\t\t\tdataSample[2][\"야간 12시간 교통량\"] += mTruckCnt;\r\n\t\t\t\t\tdataSample[3][\"야간 12시간 교통량\"] += motorCnt;\r\n\r\n\t\t\t\t\tif (recordTime.substring(11, 16) === \"06:45\") {\r\n\t\t\t\t\t\tflag = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"isDay\", flag);\r\n\r\n\t\t\t\t\tdataSample[0][\"주간 12시간 교통량\"] += carCnt;\r\n\t\t\t\t\tdataSample[1][\"주간 12시간 교통량\"] += mBusCnt;\r\n\t\t\t\t\tdataSample[2][\"주간 12시간 교통량\"] += mTruckCnt;\r\n\t\t\t\t\tdataSample[3][\"주간 12시간 교통량\"] += motorCnt;\r\n\t\t\t\t\tif (recordTime.substring(11, 16) === \"18:45\") {\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetTotalData(dataSample);\r\n\t\t\tsetData(dataSample);\r\n\t\t}\r\n\t};\r\n\r\n\tconst parseLaneData = () => {\r\n\t\tif (Object.keys(laneData).length !== 0) {\r\n\t\t\tconsole.log(\"bi lane has data\");\r\n\t\t\tsetData(laneData[currentLaneNumber.toString()]);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count bi lane parse\");\r\n\t\t\ttrafficLaneData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tlaneNumber,\r\n\t\t\t\t\trecordTime,\r\n\t\t\t\t\tcarCnt,\r\n\t\t\t\t\tmBusCnt,\r\n\t\t\t\t\tmTruckCnt,\r\n\t\t\t\t\tmotorCnt,\r\n\t\t\t\t} = TrafficData;\r\n\t\t\t\tif (!flag) {\r\n\t\t\t\t\tdayNightLaneData[laneNumber.toString()][0][\r\n\t\t\t\t\t\t\"야간 12시간 교통량\"\r\n\t\t\t\t\t] += carCnt;\r\n\t\t\t\t\tdayNightLaneData[laneNumber.toString()][1][\r\n\t\t\t\t\t\t\"야간 12시간 교통량\"\r\n\t\t\t\t\t] += mBusCnt;\r\n\t\t\t\t\tdayNightLaneData[laneNumber.toString()][2][\r\n\t\t\t\t\t\t\"야간 12시간 교통량\"\r\n\t\t\t\t\t] += mTruckCnt;\r\n\t\t\t\t\tdayNightLaneData[laneNumber.toString()][3][\r\n\t\t\t\t\t\t\"야간 12시간 교통량\"\r\n\t\t\t\t\t] += motorCnt;\r\n\t\t\t\t\tif (recordTime.substring(11, 16) === \"06:45\") {\r\n\t\t\t\t\t\tflag = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdayNightLaneData[laneNumber.toString()][0][\r\n\t\t\t\t\t\t\"주간 12시간 교통량\"\r\n\t\t\t\t\t] += carCnt;\r\n\t\t\t\t\tdayNightLaneData[laneNumber.toString()][1][\r\n\t\t\t\t\t\t\"주간 12시간 교통량\"\r\n\t\t\t\t\t] += mBusCnt;\r\n\t\t\t\t\tdayNightLaneData[laneNumber.toString()][2][\r\n\t\t\t\t\t\t\"주간 12시간 교통량\"\r\n\t\t\t\t\t] += mTruckCnt;\r\n\t\t\t\t\tdayNightLaneData[laneNumber.toString()][3][\r\n\t\t\t\t\t\t\"주간 12시간 교통량\"\r\n\t\t\t\t\t] += motorCnt;\r\n\t\t\t\t\tif (recordTime.substring(11, 16) === \"18:45\") {\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetLaneData(dayNightLaneData);\r\n\t\t\tsetData(dayNightLaneData[currentLaneNumber.toString()]);\r\n\t\t}\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\twidth: 400,\r\n\t\theight: 400,\r\n\t\txField: \"차종\",\r\n\t\txAxis: { position: \"bottom\" },\r\n\t\tinteractions: [{ type: \"active-region\" }],\r\n\t\tyField: [\"주간 12시간 교통량\", \"야간 12시간 교통량\"],\r\n\t\ttooltip: {\r\n\t\t\tshared: true,\r\n\t\t\tshowMarkers: false,\r\n\t\t},\r\n\t};\r\n\treturn <BidirectionalBar {...config} />;\r\n};\r\n\r\nexport default MyBidirectionalBar;\r\n",["423","424"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js",["425","426","427","428","429","430","431"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js",["432","433","434"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\dashLineChart\\pedestrians.js",["435","436","437","438","439"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js",["440"],"import React, { useState } from \"react\";\r\nimport { Tabs } from \"antd\";\r\n\r\nimport DayCnt from \"../../charts/barChart/DLCnt\";\r\nimport PCUBar from \"../../charts/barChart/DLPCU\";\r\nimport VehicleRatio from \"../../charts/barChart/DLVehicleRatio\";\r\nimport DayAvgSpeedLine from \"../../charts/lineChart/DLAvgSpeed\";\r\nimport DayOverSpeed from \"../../charts/barChart/DLOverSpeed\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst LaneDataVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\ttimeClassification,\r\n\t\tactiveVisualKey,\r\n\t\tsetActiveVisualKey,\r\n\r\n\t\tisLoadingTrafficTotal,\r\n\t\tisLoadingOverSpeed,\r\n\r\n\t\ttrafficTotalData,\r\n\t\toverSpeedData,\r\n\r\n\t\tcntTotalData,\r\n\t\tsetCntTotalData,\r\n\r\n\t\tPCUTotalData,\r\n\t\tsetPCUTotalData,\r\n\r\n\t\tratioTotalData,\r\n\t\tsetRatioTotalData,\r\n\r\n\t\tavgSpeedTotalData,\r\n\t\tsetAvgSpeedTotalData,\r\n\r\n\t\toverSpeedCntTotalData,\r\n\t\tsetOverSpeedCntTotalData,\r\n\t} = props;\r\n\r\n\tconst { TabPane } = Tabs;\r\n\r\n\tconst callback = (key) => {\r\n\t\tsetActiveVisualKey(key);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Tabs\r\n\t\t\tdefaultActiveKey=\"1\"\r\n\t\t\tactiveKey={activeVisualKey}\r\n\t\t\tonChange={callback}\r\n\t\t\ttabPosition=\"right\"\r\n\t\t>\r\n\t\t\t<TabPane tab=\"교통량\" key=\"1\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayCnt\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\tisLoadingTrafficTotal={isLoadingTrafficTotal}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\ttotalData={cntTotalData}\r\n\t\t\t\t\t\tsetTotalData={setCntTotalData}\r\n\t\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t// <CntLineChart\r\n\t\t\t\t\t// \tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\t// \ttotalLaneNumber={totalLaneNumber}\r\n\t\t\t\t\t// \tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t// \tisLoadingTrafficTotal={isLoadingTrafficTotal}\r\n\t\t\t\t\t// \tisLoadingTrafficLane={isLoadingTrafficLane}\r\n\t\t\t\t\t// \ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t// \ttrafficLaneData={trafficLaneData}\r\n\t\t\t\t\t// \ttotalData={cntTotalData}\r\n\t\t\t\t\t// \tsetTotalData={setCntTotalData}\r\n\t\t\t\t\t// \tlaneData={cntLaneData}\r\n\t\t\t\t\t// \tsetLaneData={setCntLaneData}\r\n\t\t\t\t\t// \ttimeClassification={timeClassification}\r\n\t\t\t\t\t// />\r\n\t\t\t\t\t<button />\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"PCU\" key=\"2\">\r\n\t\t\t\t<PCUBar\r\n\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\tisLoadingTrafficTotal={isLoadingTrafficTotal}\r\n\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\ttotalData={PCUTotalData}\r\n\t\t\t\t\tsetTotalData={setPCUTotalData}\r\n\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t/>\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"차종비율\" key=\"3\">\r\n\t\t\t\t<VehicleRatio\r\n\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\tisLoadingTrafficTotal={isLoadingTrafficTotal}\r\n\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\ttotalData={ratioTotalData}\r\n\t\t\t\t\tsetTotalData={setRatioTotalData}\r\n\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t/>\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"평균속도\" key=\"4\">\r\n\t\t\t\t<DayAvgSpeedLine\r\n\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\tisLoadingTrafficTotal={isLoadingTrafficTotal}\r\n\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\ttotalData={avgSpeedTotalData}\r\n\t\t\t\t\tsetTotalData={setAvgSpeedTotalData}\r\n\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t/>\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"과속차량\" key=\"5\">\r\n\t\t\t\t<DayOverSpeed\r\n\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\tisLoadingOverSpeed={isLoadingOverSpeed}\r\n\t\t\t\t\toverSpeedData={overSpeedData}\r\n\t\t\t\t\ttotalData={overSpeedCntTotalData}\r\n\t\t\t\t\tsetTotalData={setOverSpeedCntTotalData}\r\n\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t/>\r\n\t\t\t</TabPane>\r\n\t\t</Tabs>\r\n\t);\r\n};\r\n\r\nexport default LaneDataVisualization;\r\n",["441","442"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\comVisualOne\\ComVisualOne.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js",["443","444","445"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport moment from \"moment\";\r\n\r\n// import axios from \"axios\";\r\n// import { connect } from \"react-redux\";\r\n// import * as actions from \"../../../actions\";\r\n\r\nconst PCULine = (props) => {\r\n\tconst {\r\n\t\tcurrentLaneNumber,\r\n\t\ttotalLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingTrafficTotal,\r\n\t\tisLoadingTrafficLane,\r\n\t\ttrafficTotalData,\r\n\t\ttrafficLaneData,\r\n\r\n\t\ttotalData,\r\n\t\tsetTotalData,\r\n\t\tlaneData,\r\n\t\tsetLaneData,\r\n\r\n\t\ttimeClassification,\r\n\t} = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tvar PCUTotalData = [];\r\n\tvar PCULaneData = {};\r\n\tfor (let idx = 1; idx <= totalLaneNumber; idx++) {\r\n\t\tPCULaneData[idx.toString()] = [];\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLoadingTrafficTotal === false && isLoadingTrafficLane === false) {\r\n\t\t\tconsole.log(\"trafficTotalData,1\");\r\n\r\n\t\t\tsetTotalData([]);\r\n\t\t\tsetLaneData({});\r\n\t\t\tcurrentLaneNumber === 0 ? parseTotalData() : parseLaneData();\r\n\t\t}\r\n\t}, [\r\n\t\ttrafficLaneData,\r\n\t\ttrafficTotalData,\r\n\t\tisLoadingTrafficTotal,\r\n\t\tisLoadingTrafficLane,\r\n\t]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tif (isLoadingTrafficLane === false && isLoadingTrafficLane === false) {\r\n\t\t\t\tconsole.log(\"activeVisualKey\", activeVisualKey);\r\n\t\t\t\tcurrentLaneNumber === 0 ? parseTotalData() : parseLaneData();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [\r\n\t\tcurrentLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\t// isLoadingTrafficTotal,\r\n\t\t// isLoadingTrafficLane,\r\n\t]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tif (totalData.length !== 0) {\r\n\t\t\tconsole.log(\"count total has data\");\r\n\t\t\tsetData(totalData);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count count parse\");\r\n\t\t\ttrafficTotalData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\trecordTime,\r\n\t\t\t\t\tcarCnt,\r\n\t\t\t\t\tmBusCnt,\r\n\t\t\t\t\tmTruckCnt,\r\n\t\t\t\t\tmotorCnt,\r\n\t\t\t\t} = TrafficData;\r\n\t\t\t\tlet tempCar = {};\r\n\t\t\t\tlet tempBus = {};\r\n\t\t\t\tlet tempTruck = {};\r\n\t\t\t\tlet tempMotor = {};\r\n\r\n\t\t\t\ttempCar[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempCar[\"value\"] = carCnt;\r\n\t\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\t\ttempBus[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempBus[\"value\"] = parseFloat((mBusCnt * 1.8).toFixed(1));\r\n\t\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\t\ttempTruck[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempTruck[\"value\"] = parseFloat((mTruckCnt * 1.8).toFixed(1));\r\n\t\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\t\ttempMotor[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempMotor[\"value\"] = motorCnt;\r\n\t\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\t\t\t\tPCUTotalData.push(tempCar);\r\n\t\t\t\tPCUTotalData.push(tempBus);\r\n\t\t\t\tPCUTotalData.push(tempTruck);\r\n\t\t\t\tPCUTotalData.push(tempMotor);\r\n\t\t\t});\r\n\t\t\tsetTotalData(PCUTotalData);\r\n\t\t\tsetData(PCUTotalData);\r\n\t\t}\r\n\t};\r\n\r\n\tconst parseLaneData = () => {\r\n\t\tif (Object.keys(laneData).length !== 0) {\r\n\t\t\tconsole.log(\"count lane has data\");\r\n\t\t\tsetData(laneData[currentLaneNumber.toString()]);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count count parse lane\");\r\n\t\t\ttrafficLaneData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tlaneNumber,\r\n\t\t\t\t\trecordTime,\r\n\t\t\t\t\tcarCnt,\r\n\t\t\t\t\tmBusCnt,\r\n\t\t\t\t\tmTruckCnt,\r\n\t\t\t\t\tmotorCnt,\r\n\t\t\t\t} = TrafficData;\r\n\t\t\t\tlet tempCar = {};\r\n\t\t\t\tlet tempBus = {};\r\n\t\t\t\tlet tempTruck = {};\r\n\t\t\t\tlet tempMotor = {};\r\n\r\n\t\t\t\ttempCar[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempCar[\"value\"] = carCnt;\r\n\t\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\t\ttempBus[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempBus[\"value\"] = (mBusCnt * 1.8).toFixed(1);\r\n\t\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\t\ttempTruck[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempTruck[\"value\"] = (mTruckCnt * 1.8).toFixed(1);\r\n\t\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\t\ttempMotor[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempMotor[\"value\"] = motorCnt;\r\n\t\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\t\tPCULaneData[laneNumber.toString()].push(tempCar);\r\n\t\t\t\tPCULaneData[laneNumber.toString()].push(tempBus);\r\n\t\t\t\tPCULaneData[laneNumber.toString()].push(tempTruck);\r\n\t\t\t\tPCULaneData[laneNumber.toString()].push(tempMotor);\r\n\t\t\t});\r\n\t\t\tsetLaneData(PCULaneData);\r\n\t\t\tsetData(PCULaneData[currentLaneNumber.toString()]);\r\n\t\t}\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\t// xAxis: { type: \"time\" },\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn \"\".concat(v).replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn <Line {...config} />;\r\n};\r\n\r\nexport default PCULine;\r\n",["446","447"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\TimeDataVisualization.js",["448","449","450","451"],"import React, { useState } from \"react\";\r\nimport { Tabs, Spin } from \"antd\";\r\nimport DayCntLineChart from \"../../charts/lineChart/DTCnt\";\r\nimport DayPCULineChart from \"../../charts/lineChart/DTPCU\";\r\nimport DayVehicleRatio from \"../../charts/lineChart/DTVehicleRatio\";\r\nimport DayAvgSpeedLine from \"../../charts/lineChart/DTAvgSpeed\";\r\nimport DayOverSpeed from \"../../charts/lineChart/DTOverSpeed\";\r\nimport Peak15 from \"../../charts/statisticText/Peak15\";\r\nimport PeakHour from \"../../charts/statisticText/PeakHour\";\r\nimport PHF from \"../../charts/statisticText/PHF\";\r\nimport SliderBarChart from \"../../charts/slideBarChart\";\r\nimport AreaChart from \"../../charts/areaChart\";\r\nimport PeakRatio from \"../../charts/liquidChart/PeakRatio\";\r\nimport BidirectionalBar from \"../../charts/bidirectionalBar/DayNight\";\r\nimport DashLineChart from \"../../charts/dashLineChart/pedestrians\";\r\n\r\nimport WeekCnt from \"../../charts/lineChart/WTCnt\";\r\nimport WeekPCU from \"../../charts/lineChart/WTPCU\";\r\nimport WeekAvgSpeed from \"../../charts/lineChart/WTAvgSpeed\";\r\nimport WeekOverSpeed from \"../../charts/lineChart/WTOverSpeed\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst TimeDataVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tcurrentLaneNum,\r\n\t\ttotalLaneNumber,\r\n\r\n\t\ttimeClassification,\r\n\t\tactiveVisualKey,\r\n\t\tsetActiveVisualKey,\r\n\r\n\t\tisLoadingTrafficTotal,\r\n\t\tisLoadingTrafficLane,\r\n\t\tisLoadingOverSpeedTotal,\r\n\t\tisLoadingOverSpeedLane,\r\n\t\tisLoadingPedestrians,\r\n\t\tisLoadingPeak,\r\n\r\n\t\ttrafficTotalData,\r\n\t\ttrafficLaneData,\r\n\t\toverSpeedTotalData,\r\n\t\toverSpeedLaneData,\r\n\t\tpeakData,\r\n\t\tpedestriansData,\r\n\r\n\t\tcntTotalData,\r\n\t\tsetCntTotalData,\r\n\t\tcntLaneData,\r\n\t\tsetCntLaneData,\r\n\r\n\t\tPCUTotalData,\r\n\t\tsetPCUTotalData,\r\n\t\tPCULaneData,\r\n\t\tsetPCULaneData,\r\n\r\n\t\tratioTotalData,\r\n\t\tsetRatioTotalData,\r\n\t\tratioLaneData,\r\n\t\tsetRatioLaneData,\r\n\r\n\t\tavgSpeedTotalData,\r\n\t\tsetAvgSpeedTotalData,\r\n\t\tavgSpeedLaneData,\r\n\t\tsetAvgSpeedLaneData,\r\n\r\n\t\tdayNightTotalData,\r\n\t\tsetDayNightTotalData,\r\n\t\tdayNightLaneData,\r\n\t\tsetDayNightLaneData,\r\n\r\n\t\toverSpeedCntTotalData,\r\n\t\tsetOverSpeedCntTotalData,\r\n\t\toverSpeedCntLaneData,\r\n\t\tsetOverSpeedCntLaneData,\r\n\t} = props;\r\n\r\n\tconst { TabPane } = Tabs;\r\n\r\n\tconst callback = (key) => {\r\n\t\tsetActiveVisualKey(key);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Tabs\r\n\t\t\tdefaultActiveKey=\"1\"\r\n\t\t\tactiveKey={activeVisualKey}\r\n\t\t\tonChange={callback}\r\n\t\t\ttabPosition=\"right\"\r\n\t\t>\r\n\t\t\t<TabPane tab=\"교통량\" key=\"1\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayCntLineChart\r\n\t\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\t\ttotalLaneNumber={totalLaneNumber}\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\tisLoadingTrafficTotal={isLoadingTrafficTotal}\r\n\t\t\t\t\t\tisLoadingTrafficLane={isLoadingTrafficLane}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\ttrafficLaneData={trafficLaneData}\r\n\t\t\t\t\t\ttotalData={cntTotalData}\r\n\t\t\t\t\t\tsetTotalData={setCntTotalData}\r\n\t\t\t\t\t\tlaneData={cntLaneData}\r\n\t\t\t\t\t\tsetLaneData={setCntLaneData}\r\n\t\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<WeekCnt\r\n\t\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\t\ttotalLaneNumber={totalLaneNumber}\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\tisLoadingTrafficTotal={isLoadingTrafficTotal}\r\n\t\t\t\t\t\tisLoadingTrafficLane={isLoadingTrafficLane}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\ttrafficLaneData={trafficLaneData}\r\n\t\t\t\t\t\ttotalData={cntTotalData}\r\n\t\t\t\t\t\tsetTotalData={setCntTotalData}\r\n\t\t\t\t\t\tlaneData={cntLaneData}\r\n\t\t\t\t\t\tsetLaneData={setCntLaneData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"PCU\" key=\"2\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayPCULineChart\r\n\t\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\t\ttotalLaneNumber={totalLaneNumber}\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\tisLoadingTrafficTotal={isLoadingTrafficTotal}\r\n\t\t\t\t\t\tisLoadingTrafficLane={isLoadingTrafficLane}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\ttrafficLaneData={trafficLaneData}\r\n\t\t\t\t\t\ttotalData={PCUTotalData}\r\n\t\t\t\t\t\tsetTotalData={setPCUTotalData}\r\n\t\t\t\t\t\tlaneData={PCULaneData}\r\n\t\t\t\t\t\tsetLaneData={setPCULaneData}\r\n\t\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<WeekPCU\r\n\t\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\t\ttotalLaneNumber={totalLaneNumber}\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\tisLoadingTrafficTotal={isLoadingTrafficTotal}\r\n\t\t\t\t\t\tisLoadingTrafficLane={isLoadingTrafficLane}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\ttrafficLaneData={trafficLaneData}\r\n\t\t\t\t\t\ttotalData={PCUTotalData}\r\n\t\t\t\t\t\tsetTotalData={setPCUTotalData}\r\n\t\t\t\t\t\tlaneData={PCULaneData}\r\n\t\t\t\t\t\tsetLaneData={setPCULaneData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"차종비율\" key=\"3\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayVehicleRatio\r\n\t\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\t\ttotalLaneNumber={totalLaneNumber}\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\tisLoadingTrafficTotal={isLoadingTrafficTotal}\r\n\t\t\t\t\t\tisLoadingTrafficLane={isLoadingTrafficLane}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\ttrafficLaneData={trafficLaneData}\r\n\t\t\t\t\t\ttotalData={ratioTotalData}\r\n\t\t\t\t\t\tsetTotalData={setRatioTotalData}\r\n\t\t\t\t\t\tlaneData={ratioLaneData}\r\n\t\t\t\t\t\tsetLaneData={setRatioLaneData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : null}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"평균속도\" key=\"4\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayAvgSpeedLine\r\n\t\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\t\ttotalLaneNumber={totalLaneNumber}\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\tisLoadingTrafficTotal={isLoadingTrafficTotal}\r\n\t\t\t\t\t\tisLoadingTrafficLane={isLoadingTrafficLane}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\ttrafficLaneData={trafficLaneData}\r\n\t\t\t\t\t\ttotalData={avgSpeedTotalData}\r\n\t\t\t\t\t\tsetTotalData={setAvgSpeedTotalData}\r\n\t\t\t\t\t\tlaneData={avgSpeedLaneData}\r\n\t\t\t\t\t\tsetLaneData={setAvgSpeedLaneData}\r\n\t\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<WeekAvgSpeed\r\n\t\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\t\ttotalLaneNumber={totalLaneNumber}\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\tisLoadingTrafficTotal={isLoadingTrafficTotal}\r\n\t\t\t\t\t\tisLoadingTrafficLane={isLoadingTrafficLane}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\ttrafficLaneData={trafficLaneData}\r\n\t\t\t\t\t\ttotalData={avgSpeedTotalData}\r\n\t\t\t\t\t\tsetTotalData={setAvgSpeedTotalData}\r\n\t\t\t\t\t\tlaneData={avgSpeedLaneData}\r\n\t\t\t\t\t\tsetLaneData={setAvgSpeedLaneData}\r\n\t\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"과속차량\" key=\"5\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayOverSpeed\r\n\t\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\t\ttotalLaneNumber={totalLaneNumber}\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\tisLoadingOverSpeedTotal={isLoadingOverSpeedTotal}\r\n\t\t\t\t\t\tisLoadingOverSpeedLane={isLoadingOverSpeedLane}\r\n\t\t\t\t\t\toverSpeedTotalData={overSpeedTotalData}\r\n\t\t\t\t\t\toverSpeedLaneData={overSpeedLaneData}\r\n\t\t\t\t\t\ttotalData={overSpeedCntTotalData}\r\n\t\t\t\t\t\tsetTotalData={setOverSpeedCntTotalData}\r\n\t\t\t\t\t\tlaneData={overSpeedCntLaneData}\r\n\t\t\t\t\t\tsetLaneData={setOverSpeedCntLaneData}\r\n\t\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<WeekOverSpeed\r\n\t\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\t\ttotalLaneNumber={totalLaneNumber}\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\tisLoadingOverSpeedTotal={isLoadingOverSpeedTotal}\r\n\t\t\t\t\t\tisLoadingOverSpeedLane={isLoadingOverSpeedLane}\r\n\t\t\t\t\t\toverSpeedTotalData={overSpeedTotalData}\r\n\t\t\t\t\t\toverSpeedLaneData={overSpeedLaneData}\r\n\t\t\t\t\t\ttotalData={overSpeedCntTotalData}\r\n\t\t\t\t\t\tsetTotalData={setOverSpeedCntTotalData}\r\n\t\t\t\t\t\tlaneData={overSpeedCntLaneData}\r\n\t\t\t\t\t\tsetLaneData={setOverSpeedCntLaneData}\r\n\t\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\r\n\t\t\t<TabPane tab=\"주야율\" key=\"6\">\r\n\t\t\t\t<BidirectionalBar\r\n\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\ttotalLaneNumber={totalLaneNumber}\r\n\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\tisLoadingTrafficTotal={isLoadingTrafficTotal}\r\n\t\t\t\t\tisLoadingTrafficLane={isLoadingTrafficLane}\r\n\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\ttrafficLaneData={trafficLaneData}\r\n\t\t\t\t\ttotalData={dayNightTotalData}\r\n\t\t\t\t\tsetTotalData={setDayNightTotalData}\r\n\t\t\t\t\tlaneData={dayNightLaneData}\r\n\t\t\t\t\tsetLaneData={setDayNightLaneData}\r\n\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t/>\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"첨두시간\" key=\"7\">\r\n\t\t\t\t<Peak15\r\n\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\tisLoadingPeak={isLoadingPeak}\r\n\t\t\t\t\tpeakData={peakData}\r\n\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t/>\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"첨두유율\" key=\"8\">\r\n\t\t\t\t<PeakHour\r\n\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\tisLoadingPeak={isLoadingPeak}\r\n\t\t\t\t\tpeakData={peakData}\r\n\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t/>\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"PHF\" key=\"9\">\r\n\t\t\t\t<PHF\r\n\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\tisLoadingPeak={isLoadingPeak}\r\n\t\t\t\t\tpeakData={peakData}\r\n\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t/>\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"집중률\" key=\"10\">\r\n\t\t\t\t<PeakRatio\r\n\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\tisLoadingPeak={isLoadingPeak}\r\n\t\t\t\t\tpeakData={peakData}\r\n\t\t\t\t\ts\r\n\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t/>\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"무단횡단\" key=\"11\">\r\n\t\t\t\t<DashLineChart\r\n\t\t\t\t\tcurrentLaneNumber={parseInt(currentLaneNum)}\r\n\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\tisLoadingPedestrians={isLoadingPedestrians}\r\n\t\t\t\t\tpedestriansData={pedestriansData}\r\n\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t/>\r\n\t\t\t</TabPane>\r\n\t\t</Tabs>\r\n\t);\r\n};\r\n\r\nexport default TimeDataVisualization;\r\n",["452","453"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js",["454"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\dataComparison\\DataComparisonPage.js",["455","456"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js",["457"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTCnt.js",["458"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTVehicleRatio.js",["459","460"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\overSpeed.js",["461"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTOverSpeed.js",["462","463","464"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport moment from \"moment\";\r\n// import axios from \"axios\";\r\n// import { connect } from \"react-redux\";\r\n// import * as actions from \"../../../actions\";\r\n\r\nconst OverSpeedCnt = (props) => {\r\n\tconst {\r\n\t\tcurrentLaneNumber,\r\n\t\ttotalLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingOverSpeedTotal,\r\n\t\tisLoadingOverSpeedLane,\r\n\t\toverSpeedTotalData,\r\n\t\toverSpeedLaneData,\r\n\r\n\t\ttotalData,\r\n\t\tsetTotalData,\r\n\t\tlaneData,\r\n\t\tsetLaneData,\r\n\r\n\t\ttimeClassification,\r\n\t} = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tvar cntTotalData = [];\r\n\tvar cntLaneData = {};\r\n\tfor (let idx = 1; idx <= totalLaneNumber; idx++) {\r\n\t\tcntLaneData[idx.toString()] = [];\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLoadingOverSpeedTotal === false && isLoadingOverSpeedLane === false) {\r\n\t\t\tconsole.log(\"trafficTotalData,1\", overSpeedTotalData);\r\n\t\t\tsetTotalData([]);\r\n\t\t\tsetLaneData({});\r\n\t\t\tcurrentLaneNumber === 0 ? parseTotalData() : parseLaneData();\r\n\t\t}\r\n\t}, [\r\n\t\toverSpeedTotalData,\r\n\t\toverSpeedLaneData,\r\n\t\tisLoadingOverSpeedTotal,\r\n\t\tisLoadingOverSpeedLane,\r\n\t]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tif (\r\n\t\t\t\tisLoadingOverSpeedTotal === false &&\r\n\t\t\t\tisLoadingOverSpeedLane === false\r\n\t\t\t) {\r\n\t\t\t\tcurrentLaneNumber === 0 ? parseTotalData() : parseLaneData();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [\r\n\t\tcurrentLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\t// isLoadingOverSpeedTotal,\r\n\t\t// isLoadingOverSpeedLane,\r\n\t]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tif (totalData.length !== 0) {\r\n\t\t\tconsole.log(\"count total has data\");\r\n\t\t\tsetData(totalData);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count count parse\");\r\n\t\t\toverSpeedTotalData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\trecordTime,\r\n\t\t\t\t\tcarSpdCnt,\r\n\t\t\t\t\tmBusSpdCnt,\r\n\t\t\t\t\tmTruckSpdCnt,\r\n\t\t\t\t\tmotorSpdCnt,\r\n\t\t\t\t} = TrafficData;\r\n\t\t\t\tconst tempCar = {};\r\n\t\t\t\tconst tempBus = {};\r\n\t\t\t\tconst tempTruck = {};\r\n\t\t\t\tconst tempMotor = {};\r\n\t\t\t\ttempCar[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempCar[\"value\"] = carSpdCnt;\r\n\t\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\t\ttempBus[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempBus[\"value\"] = mBusSpdCnt;\r\n\t\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\t\ttempTruck[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempTruck[\"value\"] = mTruckSpdCnt;\r\n\t\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\t\ttempMotor[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempMotor[\"value\"] = motorSpdCnt;\r\n\t\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\t\t\t\tcntTotalData.push(tempCar);\r\n\t\t\t\tcntTotalData.push(tempBus);\r\n\t\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\t});\r\n\t\t\tsetTotalData(cntTotalData);\r\n\t\t\tsetData(cntTotalData);\r\n\t\t}\r\n\t};\r\n\r\n\tconst parseLaneData = () => {\r\n\t\tif (Object.keys(laneData).length !== 0) {\r\n\t\t\tconsole.log(\"count lane has data\");\r\n\t\t\tsetData(laneData[currentLaneNumber.toString()]);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count count parse lane\");\r\n\t\t\toverSpeedLaneData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tlaneNumber,\r\n\t\t\t\t\trecordTime,\r\n\t\t\t\t\tcarSpdCnt,\r\n\t\t\t\t\tmBusSpdCnt,\r\n\t\t\t\t\tmTruckSpdCnt,\r\n\t\t\t\t\tmotorSpdCnt,\r\n\t\t\t\t} = TrafficData;\r\n\t\t\t\tconst tempCar = {};\r\n\t\t\t\tconst tempBus = {};\r\n\t\t\t\tconst tempTruck = {};\r\n\t\t\t\tconst tempMotor = {};\r\n\t\t\t\ttempCar[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempCar[\"value\"] = carSpdCnt;\r\n\t\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\t\ttempBus[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempBus[\"value\"] = mBusSpdCnt;\r\n\t\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\t\ttempTruck[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempTruck[\"value\"] = mTruckSpdCnt;\r\n\t\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\t\ttempMotor[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempMotor[\"value\"] = motorSpdCnt;\r\n\t\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\t\tcntLaneData[laneNumber.toString()].push(tempCar);\r\n\t\t\t\tcntLaneData[laneNumber.toString()].push(tempBus);\r\n\t\t\t\tcntLaneData[laneNumber.toString()].push(tempTruck);\r\n\t\t\t\tcntLaneData[laneNumber.toString()].push(tempMotor);\r\n\t\t\t});\r\n\t\t\tsetLaneData(cntLaneData);\r\n\t\t\tsetData(cntLaneData[currentLaneNumber.toString()]);\r\n\t\t}\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\t// xAxis: { type: \"time\" },\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn \"\".concat(v).replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn <Line {...config} />;\r\n};\r\n\r\nexport default OverSpeedCnt;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\DLCnt.js",["465","466"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\DLOverSpeed.js",["467","468","469"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { act } from \"react-dom/cjs/react-dom-test-utils.production.min\";\r\n\r\nconst DLOverSpeed = (props) => {\r\n\tconst {\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingOverSpeed,\r\n\t\toverSpeedData,\r\n\r\n\t\ttotalData,\r\n\t\tsetTotalData,\r\n\t} = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tvar cntCar = [];\r\n\tvar cntBus = [];\r\n\tvar cntTruck = [];\r\n\tvar cntMotor = [];\r\n\tvar cntTotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLoadingOverSpeed === false) {\r\n\t\t\tsetTotalData([]);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [overSpeedData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tif (isLoadingOverSpeed === false) {\r\n\t\t\t\tparseTotalData();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [isLoadingOverSpeed, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tif (totalData.length !== 0) {\r\n\t\t\tconsole.log(\"count total has data\");\r\n\t\t\tsetData(totalData);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count count parse\");\r\n\t\t\toverSpeedData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tlaneNumber,\r\n\t\t\t\t\tcarSpdCnt,\r\n\t\t\t\t\tmBusSpdCnt,\r\n\t\t\t\t\tmTruckSpdCnt,\r\n\t\t\t\t\tmotorSpdCnt,\r\n\t\t\t\t} = TrafficData;\r\n\r\n\t\t\t\tconst tempCar = {};\r\n\t\t\t\tconst tempBus = {};\r\n\t\t\t\tconst tempTruck = {};\r\n\t\t\t\tconst tempMotor = {};\r\n\r\n\t\t\t\ttempCar[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempCar[\"value\"] = carSpdCnt;\r\n\t\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\t\ttempBus[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempBus[\"value\"] = mBusSpdCnt;\r\n\t\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\t\ttempTruck[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempTruck[\"value\"] = mTruckSpdCnt;\r\n\t\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\t\ttempMotor[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempMotor[\"value\"] = motorSpdCnt;\r\n\t\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\t\t\t\tcntCar.push(tempCar);\r\n\t\t\t\tcntBus.push(tempBus);\r\n\t\t\t\tcntTruck.push(tempTruck);\r\n\t\t\t\tcntMotor.push(tempMotor);\r\n\t\t\t});\r\n\t\t\tcntTotalData = cntCar.concat(cntBus.concat(cntTruck.concat(cntMotor)));\r\n\t\t\tsetTotalData(cntTotalData);\r\n\t\t\tsetData(cntTotalData);\r\n\t\t}\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"laneNum\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\treturn <Column {...config} />;\r\n};\r\nexport default DLOverSpeed;\r\n",["470","471"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js",["472","473"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Spin } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../actions\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport GeneralVisualization from \"../../organisms/generalVisualization/GeneralVisualization\";\r\nimport TimeStatistic from \"../../organisms/visualStatistic/timeStat/TimeStat\";\r\nimport LaneStatistic from \"../../organisms/visualStatistic/laneStat/LaneStat\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst DayStatPage = () => {\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [count, setCount] = useState(false);\r\n\r\n\tconst { Content } = Layout;\r\n\r\n\treturn (\r\n\t\t<div className=\"statistic-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"통계 분석\", \"일간 별\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\tcount ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<div className=\"statistic-general-visualization\">\r\n\t\t\t\t\t\t\t\t\t\t<GeneralVisualization\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{timeClassification ? (\r\n\t\t\t\t\t\t\t\t\t\t<TimeStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t\t\t\t\t\t\t\tinterval=\"15M\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<LaneStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\ttimeClassification={timeClassification}\r\n\t\t\t\t\t\t\t\t\t\t\tinterval=\"15M\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcity: state.location.city,\r\n\t\tdistrict: state.location.district,\r\n\t\troad: state.location.road,\r\n\t\tspot: state.location.spot,\r\n\t\tcamera: state.location.camera,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationInfo: () => {\r\n\t\t\tdispatch(actions.getLocation());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DayStatPage);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DLAvgSpeed.js",["474","475","476","477","478","479"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../actions\";\r\n\r\nconst LaneAvgSpeedLine = (props) => {\r\n\tconst {\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingTrafficTotal,\r\n\t\ttrafficTotalData,\r\n\t\ttotalData,\r\n\t\tsetTotalData,\r\n\t\ttimeClassification,\r\n\t} = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tvar avgSpeedTotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLoadingTrafficTotal === false) {\r\n\t\t\tsetTotalData([]);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tif (isLoadingTrafficTotal === false) {\r\n\t\t\t\tparseTotalData();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [isLoadingTrafficTotal, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tif (totalData.length !== 0) {\r\n\t\t\tconsole.log(\"avg speed has total data\");\r\n\t\t\tsetData(totalData);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count over speed parse\");\r\n\t\t\ttrafficTotalData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tlaneNumber,\r\n\t\t\t\t\tcarAvgSpeed,\r\n\t\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\t} = TrafficData;\r\n\r\n\t\t\t\tlet tempCar = {};\r\n\t\t\t\tlet tempBus = {};\r\n\t\t\t\tlet tempTruck = {};\r\n\t\t\t\tlet tempMotor = {};\r\n\r\n\t\t\t\ttempCar[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempCar[\"value\"] = parseFloat(carAvgSpeed);\r\n\t\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\t\ttempBus[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempBus[\"value\"] = parseFloat(mBusAvgSpeed);\r\n\t\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\t\ttempTruck[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempTruck[\"value\"] = parseFloat(mTruckAvgSpeed);\r\n\t\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\t\ttempMotor[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempMotor[\"value\"] = parseFloat(motorAvgSpeed);\r\n\t\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\t\tavgSpeedTotalData.push(tempCar);\r\n\t\t\t\tavgSpeedTotalData.push(tempBus);\r\n\t\t\t\tavgSpeedTotalData.push(tempTruck);\r\n\t\t\t\tavgSpeedTotalData.push(tempMotor);\r\n\t\t\t});\r\n\t\t\tsetTotalData(avgSpeedTotalData);\r\n\t\t\tsetData(avgSpeedTotalData);\r\n\t\t}\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"lane\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\t// xAxis: { type: \"time\" },\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn \"\".concat(v).replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn <Line {...config} />;\r\n};\r\nexport default LaneAvgSpeedLine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\DLVehicleRatio.js",["480","481","482"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\n\r\nconst VehicleRatio = (props) => {\r\n\tconst {\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingTrafficTotal,\r\n\t\ttrafficTotalData,\r\n\t\ttotalData,\r\n\t\tsetTotalData,\r\n\t\ttimeClassification,\r\n\t} = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tvar carRatio = [];\r\n\tvar busRatio = [];\r\n\tvar truckRatio = [];\r\n\tvar motorRatio = [];\r\n\tvar RatioTotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLoadingTrafficTotal === false) {\r\n\t\t\tsetTotalData([]);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"3\") {\r\n\t\t\tif (isLoadingTrafficTotal === false) {\r\n\t\t\t\tparseTotalData();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [isLoadingTrafficTotal, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tif (totalData.length !== 0) {\r\n\t\t\tconsole.log(\"count total has data\");\r\n\t\t\tsetData(totalData);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count count parse\");\r\n\t\t\ttrafficTotalData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tlaneNumber,\r\n\t\t\t\t\tcarCnt,\r\n\t\t\t\t\tmBusCnt,\r\n\t\t\t\t\tmTruckCnt,\r\n\t\t\t\t\tmotorCnt,\r\n\t\t\t\t} = TrafficData;\r\n\t\t\t\tconst totalCnt = carCnt + mBusCnt + mTruckCnt + motorCnt;\r\n\r\n\t\t\t\tconst tempCar = {};\r\n\t\t\t\tconst tempBus = {};\r\n\t\t\t\tconst tempTruck = {};\r\n\t\t\t\tconst tempMotor = {};\r\n\r\n\t\t\t\ttempCar[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempCar[\"value\"] = parseFloat(((carCnt / totalCnt) * 100).toFixed(2));\r\n\t\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\t\ttempBus[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempBus[\"value\"] = parseFloat(((mBusCnt / totalCnt) * 100).toFixed(2));\r\n\t\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\t\ttempTruck[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempTruck[\"value\"] = parseFloat(\r\n\t\t\t\t\t((mTruckCnt / totalCnt) * 100).toFixed(2)\r\n\t\t\t\t);\r\n\t\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\t\ttempMotor[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempMotor[\"value\"] = parseFloat(\r\n\t\t\t\t\t((motorCnt / totalCnt) * 100).toFixed(2)\r\n\t\t\t\t);\r\n\t\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\r\n\t\t\t\tcarRatio.push(tempCar);\r\n\t\t\t\tbusRatio.push(tempBus);\r\n\t\t\t\ttruckRatio.push(tempTruck);\r\n\t\t\t\tmotorRatio.push(tempMotor);\r\n\t\t\t});\r\n\t\t\tRatioTotalData = carRatio.concat(\r\n\t\t\t\tbusRatio.concat(truckRatio.concat(motorRatio))\r\n\t\t\t);\r\n\t\t\tsetTotalData(RatioTotalData);\r\n\t\t\tsetData(RatioTotalData);\r\n\t\t}\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"laneNum\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\treturn <Column {...config} />;\r\n};\r\nexport default VehicleRatio;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js",["483"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\n\r\nconst WTPCU = (props) => {\r\n\tconst {\r\n\t\tcurrentLaneNumber,\r\n\t\ttotalLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingTrafficTotal,\r\n\t\tisLoadingTrafficLane,\r\n\t\ttrafficTotalData,\r\n\t\ttrafficLaneData,\r\n\r\n\t\ttotalData,\r\n\t\tsetTotalData,\r\n\t\tlaneData,\r\n\t\tsetLaneData,\r\n\t} = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tvar cntTotalData = [];\r\n\tvar cntLaneData = {};\r\n\tfor (let idx = 1; idx <= totalLaneNumber; idx++) {\r\n\t\tcntLaneData[idx.toString()] = [];\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tif (isLoadingTrafficTotal === false && isLoadingTrafficLane === false) {\r\n\t\t\t\t// console.log(\"trafficTotalData\", trafficTotalData);\r\n\t\t\t\tcurrentLaneNumber === 0 ? parseTotalData() : parseLaneData();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [\r\n\t\tcurrentLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingTrafficTotal,\r\n\t\tisLoadingTrafficLane,\r\n\t]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tif (totalData.length !== 0) {\r\n\t\t\tconsole.log(\"count total has data\");\r\n\t\t\tsetData(totalData);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count count parse\");\r\n\t\t\ttrafficTotalData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\trecordTime,\r\n\t\t\t\t\tcarCnt,\r\n\t\t\t\t\tmBusCnt,\r\n\t\t\t\t\tmTruckCnt,\r\n\t\t\t\t\tmotorCnt,\r\n\t\t\t\t} = TrafficData;\r\n\t\t\t\tlet tempCar = {};\r\n\t\t\t\tlet tempBus = {};\r\n\t\t\t\tlet tempTruck = {};\r\n\t\t\t\tlet tempMotor = {};\r\n\r\n\t\t\t\ttempCar[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\t\ttempCar[\"value\"] = carCnt;\r\n\r\n\t\t\t\ttempBus[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\t\ttempBus[\"value\"] = parseFloat((mBusCnt * 1.8).toFixed(1));\r\n\r\n\t\t\t\ttempTruck[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\t\ttempTruck[\"value\"] = parseFloat((mTruckCnt * 1.8).toFixed(1));\r\n\r\n\t\t\t\ttempMotor[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\t\ttempMotor[\"value\"] = motorCnt;\r\n\r\n\t\t\t\tcntTotalData.push(tempCar);\r\n\t\t\t\tcntTotalData.push(tempBus);\r\n\t\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\t});\r\n\t\t\tsetTotalData(cntTotalData);\r\n\t\t\tsetData(cntTotalData);\r\n\t\t}\r\n\t};\r\n\r\n\tconst parseLaneData = () => {\r\n\t\tif (Object.keys(laneData).length !== 0) {\r\n\t\t\tconsole.log(\"count lane has data\");\r\n\t\t\tsetData(laneData[currentLaneNumber.toString()]);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count count parse lane\");\r\n\t\t\ttrafficLaneData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tlaneNumber,\r\n\t\t\t\t\trecordTime,\r\n\t\t\t\t\tcarCnt,\r\n\t\t\t\t\tmBusCnt,\r\n\t\t\t\t\tmTruckCnt,\r\n\t\t\t\t\tmotorCnt,\r\n\t\t\t\t} = TrafficData;\r\n\t\t\t\tlet tempCar = {};\r\n\t\t\t\tlet tempBus = {};\r\n\t\t\t\tlet tempTruck = {};\r\n\t\t\t\tlet tempMotor = {};\r\n\r\n\t\t\t\ttempCar[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\t\ttempCar[\"value\"] = carCnt;\r\n\r\n\t\t\t\ttempBus[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\t\ttempBus[\"value\"] = mBusCnt * 1.8;\r\n\r\n\t\t\t\ttempTruck[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\t\ttempTruck[\"value\"] = mTruckCnt * 1.8;\r\n\r\n\t\t\t\ttempMotor[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\t\ttempMotor[\"value\"] = motorCnt;\r\n\r\n\t\t\t\tcntLaneData[laneNumber.toString()].push(tempCar);\r\n\t\t\t\tcntLaneData[laneNumber.toString()].push(tempBus);\r\n\t\t\t\tcntLaneData[laneNumber.toString()].push(tempTruck);\r\n\t\t\t\tcntLaneData[laneNumber.toString()].push(tempMotor);\r\n\t\t\t});\r\n\t\t\tsetLaneData(cntLaneData);\r\n\t\t\tsetData(cntLaneData[currentLaneNumber.toString()]);\r\n\t\t}\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tlegend: false,\r\n\t\tseriesField: \"key\",\r\n\t\tstepType: \"hvh\",\r\n\t};\r\n\treturn <Line {...config} />;\r\n};\r\nexport default WTPCU;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js",["484"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js",["485"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\n\r\nconst WTOverSpeed = (props) => {\r\n\tconst {\r\n\t\tcurrentLaneNumber,\r\n\t\ttotalLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingOverSpeedTotal,\r\n\t\tisLoadingOverSpeedLane,\r\n\t\toverSpeedTotalData,\r\n\t\toverSpeedLaneData,\r\n\r\n\t\ttotalData,\r\n\t\tsetTotalData,\r\n\t\tlaneData,\r\n\t\tsetLaneData,\r\n\t} = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tvar TotalData = [];\r\n\tvar LaneData = {};\r\n\tfor (let idx = 1; idx <= totalLaneNumber; idx++) {\r\n\t\tLaneData[idx.toString()] = [];\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tif (\r\n\t\t\t\tisLoadingOverSpeedTotal === false &&\r\n\t\t\t\tisLoadingOverSpeedLane === false\r\n\t\t\t) {\r\n\t\t\t\t// console.log(\"trafficTotalData\", overSpeedTotalData);\r\n\t\t\t\tconsole.log(\"overSpeedLaneData\", overSpeedLaneData);\r\n\r\n\t\t\t\tcurrentLaneNumber === 0 ? parseTotalData() : parseLaneData();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [\r\n\t\tcurrentLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingOverSpeedTotal,\r\n\t\tisLoadingOverSpeedLane,\r\n\t]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tif (totalData.length !== 0) {\r\n\t\t\tconsole.log(\"count total has data\");\r\n\t\t\tsetData(totalData);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count count parse\");\r\n\t\t\toverSpeedTotalData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\trecordTime,\r\n\t\t\t\t\tcarSpdCnt,\r\n\t\t\t\t\tmBusSpdCnt,\r\n\t\t\t\t\tmTruckSpdCnt,\r\n\t\t\t\t\tmotorSpdCnt,\r\n\t\t\t\t} = TrafficData;\r\n\t\t\t\tlet tempCar = {};\r\n\t\t\t\tlet tempBus = {};\r\n\t\t\t\tlet tempTruck = {};\r\n\t\t\t\tlet tempMotor = {};\r\n\r\n\t\t\t\ttempCar[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\t\ttempCar[\"value\"] = carSpdCnt;\r\n\r\n\t\t\t\ttempBus[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\t\ttempBus[\"value\"] = mBusSpdCnt;\r\n\r\n\t\t\t\ttempTruck[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\t\ttempTruck[\"value\"] = mTruckSpdCnt;\r\n\r\n\t\t\t\ttempMotor[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\t\ttempMotor[\"value\"] = motorSpdCnt;\r\n\r\n\t\t\t\tTotalData.push(tempCar);\r\n\t\t\t\tTotalData.push(tempBus);\r\n\t\t\t\tTotalData.push(tempTruck);\r\n\t\t\t\tTotalData.push(tempMotor);\r\n\t\t\t});\r\n\t\t\tsetTotalData(TotalData);\r\n\t\t\tsetData(TotalData);\r\n\t\t}\r\n\t};\r\n\r\n\tconst parseLaneData = () => {\r\n\t\tif (Object.keys(laneData).length !== 0) {\r\n\t\t\tconsole.log(\"count lane has data\");\r\n\t\t\tsetData(laneData[currentLaneNumber.toString()]);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count count parse lane\");\r\n\t\t\toverSpeedLaneData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tlaneNumber,\r\n\t\t\t\t\trecordTime,\r\n\t\t\t\t\tcarSpdCnt,\r\n\t\t\t\t\tmBusSpdCnt,\r\n\t\t\t\t\tmTruckSpdCnt,\r\n\t\t\t\t\tmotorSpdCnt,\r\n\t\t\t\t} = TrafficData;\r\n\t\t\t\tlet tempCar = {};\r\n\t\t\t\tlet tempBus = {};\r\n\t\t\t\tlet tempTruck = {};\r\n\t\t\t\tlet tempMotor = {};\r\n\r\n\t\t\t\ttempCar[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\t\ttempCar[\"value\"] = carSpdCnt;\r\n\r\n\t\t\t\ttempBus[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\t\ttempBus[\"value\"] = mBusSpdCnt;\r\n\r\n\t\t\t\ttempTruck[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\t\ttempTruck[\"value\"] = mTruckSpdCnt;\r\n\r\n\t\t\t\ttempMotor[\"time\"] = recordTime.substring(0, 10);\r\n\t\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\t\ttempMotor[\"value\"] = motorSpdCnt;\r\n\r\n\t\t\t\tLaneData[laneNumber.toString()].push(tempCar);\r\n\t\t\t\tLaneData[laneNumber.toString()].push(tempBus);\r\n\t\t\t\tLaneData[laneNumber.toString()].push(tempTruck);\r\n\t\t\t\tLaneData[laneNumber.toString()].push(tempMotor);\r\n\t\t\t});\r\n\t\t\tsetLaneData(LaneData);\r\n\t\t\tsetData(LaneData[currentLaneNumber.toString()]);\r\n\t\t}\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tlegend: false,\r\n\t\tseriesField: \"key\",\r\n\t\tstepType: \"hvh\",\r\n\t};\r\n\treturn <Line {...config} />;\r\n};\r\nexport default WTOverSpeed;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\DLPCU.js",["486","487"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\n\r\nconst PCU = (props) => {\r\n\tconst {\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingTrafficTotal,\r\n\t\ttrafficTotalData,\r\n\r\n\t\ttotalData,\r\n\t\tsetTotalData,\r\n\t} = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tvar PCUCar = [];\r\n\tvar PCUBus = [];\r\n\tvar PCUTruck = [];\r\n\tvar PCUMotor = [];\r\n\tvar PCUTotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLoadingTrafficTotal === false) {\r\n\t\t\tsetTotalData([]);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tif (isLoadingTrafficTotal === false) {\r\n\t\t\t\tparseTotalData();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [isLoadingTrafficTotal, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tif (totalData.length !== 0) {\r\n\t\t\tconsole.log(\"count total has data\");\r\n\t\t\tsetData(totalData);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count count parse\");\r\n\t\t\ttrafficTotalData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tlaneNumber,\r\n\t\t\t\t\tcarCnt,\r\n\t\t\t\t\tmBusCnt,\r\n\t\t\t\t\tmTruckCnt,\r\n\t\t\t\t\tmotorCnt,\r\n\t\t\t\t} = TrafficData;\r\n\t\t\t\tconst tempCar = {};\r\n\t\t\t\tconst tempBus = {};\r\n\t\t\t\tconst tempTruck = {};\r\n\t\t\t\tconst tempMotor = {};\r\n\r\n\t\t\t\ttempCar[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempCar[\"value\"] = carCnt;\r\n\t\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\t\ttempBus[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempBus[\"value\"] = mBusCnt * 1.8;\r\n\t\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\t\ttempTruck[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempTruck[\"value\"] = mTruckCnt * 1.8;\r\n\t\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\t\ttempMotor[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\t\ttempMotor[\"value\"] = motorCnt;\r\n\t\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\t\t\t\tPCUCar.push(tempCar);\r\n\t\t\t\tPCUBus.push(tempBus);\r\n\t\t\t\tPCUTruck.push(tempTruck);\r\n\t\t\t\tPCUMotor.push(tempMotor);\r\n\t\t\t});\r\n\t\t\tPCUTotalData = PCUCar.concat(PCUBus.concat(PCUTruck.concat(PCUMotor)));\r\n\t\t\tconsole.log(PCUTotalData);\r\n\t\t\tsetTotalData(PCUTotalData);\r\n\t\t\tsetData(PCUTotalData);\r\n\t\t}\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"laneNum\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\treturn <Column {...config} />;\r\n};\r\nexport default PCU;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\funnelChart\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\areaChart\\index.js",[],["488","489"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js",["490"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTCnt.js",["491","492","493"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js",["494","495","496","497","498","499"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport moment from \"moment\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../actions\";\r\n\r\nconst LaneAvgSpeedLine = (props) => {\r\n\tconst {\r\n\t\tcurrentLaneNumber,\r\n\t\ttotalLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\tisLoadingTrafficTotal,\r\n\t\tisLoadingTrafficLane,\r\n\t\ttrafficTotalData,\r\n\t\ttrafficLaneData,\r\n\r\n\t\ttotalData,\r\n\t\tsetTotalData,\r\n\t\tlaneData,\r\n\t\tsetLaneData,\r\n\r\n\t\ttimeClassification,\r\n\t} = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\t// const group = timeClassification ? \"time\" : \"lane\";\r\n\tvar avgSpeedTotalData = [];\r\n\tvar avgSpeedLaneData = {};\r\n\r\n\tfor (let idx = 1; idx <= totalLaneNumber; idx++) {\r\n\t\tavgSpeedLaneData[idx.toString()] = [];\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tif (isLoadingTrafficTotal === false && isLoadingTrafficLane === false) {\r\n\t\t\tconsole.log(\"trafficTotalData,1\", trafficTotalData);\r\n\t\t\tsetTotalData([]);\r\n\t\t\tsetLaneData({});\r\n\t\t\tcurrentLaneNumber === 0 ? parseTotalData() : parseLaneData();\r\n\t\t}\r\n\t}, [\r\n\t\ttrafficLaneData,\r\n\t\ttrafficTotalData,\r\n\t\tisLoadingTrafficTotal,\r\n\t\tisLoadingTrafficLane,\r\n\t]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tif (isLoadingTrafficLane === false && isLoadingTrafficLane === false) {\r\n\t\t\t\tconsole.log(\"activeVisualKey\", activeVisualKey);\r\n\t\t\t\tcurrentLaneNumber === 0 ? parseTotalData() : parseLaneData();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [\r\n\t\tcurrentLaneNumber,\r\n\t\tactiveVisualKey,\r\n\t\t// isLoadingTrafficTotal,\r\n\t\t// isLoadingTrafficLane,\r\n\t]);\r\n\tconst parseTotalData = () => {\r\n\t\tif (totalData.length !== 0) {\r\n\t\t\tconsole.log(\"avg speed has total data\");\r\n\t\t\tsetData(totalData);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count over speed parse\");\r\n\t\t\ttrafficTotalData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\trecordTime,\r\n\t\t\t\t\tcarAvgSpeed,\r\n\t\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\t} = TrafficData;\r\n\t\t\t\tconst tempCar = {};\r\n\t\t\t\tconst tempBus = {};\r\n\t\t\t\tconst tempTruck = {};\r\n\t\t\t\tconst tempMotor = {};\r\n\t\t\t\ttempCar[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempCar[\"value\"] = parseFloat(carAvgSpeed);\r\n\t\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\t\ttempBus[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempBus[\"value\"] = parseFloat(mBusAvgSpeed);\r\n\t\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\t\ttempTruck[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempTruck[\"value\"] = parseFloat(mTruckAvgSpeed);\r\n\t\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\t\ttempMotor[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempMotor[\"value\"] = parseFloat(motorAvgSpeed);\r\n\t\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\t\tavgSpeedTotalData.push(tempCar);\r\n\t\t\t\tavgSpeedTotalData.push(tempBus);\r\n\t\t\t\tavgSpeedTotalData.push(tempTruck);\r\n\t\t\t\tavgSpeedTotalData.push(tempMotor);\r\n\t\t\t});\r\n\t\t\tsetTotalData(avgSpeedTotalData);\r\n\t\t\tsetData(avgSpeedTotalData);\r\n\t\t}\r\n\t};\r\n\r\n\tconst parseLaneData = () => {\r\n\t\tif (Object.keys(laneData).length !== 0) {\r\n\t\t\tconsole.log(\"avg speed has lane data\");\r\n\t\t\tsetData(laneData[currentLaneNumber.toString()]);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"count avg speed lane parse\");\r\n\t\t\ttrafficLaneData.forEach((TrafficData) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tlaneNumber,\r\n\t\t\t\t\trecordTime,\r\n\t\t\t\t\tcarAvgSpeed,\r\n\t\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\t} = TrafficData;\r\n\t\t\t\tconst tempCar = {};\r\n\t\t\t\tconst tempBus = {};\r\n\t\t\t\tconst tempTruck = {};\r\n\t\t\t\tconst tempMotor = {};\r\n\t\t\t\ttempCar[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempCar[\"value\"] = parseFloat(carAvgSpeed);\r\n\t\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\t\ttempBus[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempBus[\"value\"] = parseFloat(mBusAvgSpeed);\r\n\t\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\t\ttempTruck[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempTruck[\"value\"] = parseFloat(mTruckAvgSpeed);\r\n\t\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\t\ttempMotor[\"time\"] = moment(recordTime).format(\"HH:mm\");\r\n\t\t\t\ttempMotor[\"value\"] = parseFloat(motorAvgSpeed);\r\n\t\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\t\tavgSpeedLaneData[laneNumber.toString()].push(tempCar);\r\n\t\t\t\tavgSpeedLaneData[laneNumber.toString()].push(tempBus);\r\n\t\t\t\tavgSpeedLaneData[laneNumber.toString()].push(tempTruck);\r\n\t\t\t\tavgSpeedLaneData[laneNumber.toString()].push(tempMotor);\r\n\t\t\t});\r\n\t\t\tsetLaneData(avgSpeedLaneData);\r\n\t\t\tsetData(avgSpeedLaneData[currentLaneNumber.toString()]);\r\n\t\t}\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\t// xAxis: { type: \"time\" },\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn \"\".concat(v).replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn <Line {...config} />;\r\n};\r\nexport default LaneAvgSpeedLine;\r\n",["500","501"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js",["502"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchCollapsedTable\\SearchCollapsedTable.js",["503","504","505","506","507"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\TimeTableCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\LaneTableCard.js",["508","509","510","511","512","513","514","515","516"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTFirstTable.js",["517","518"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js",["519","520","521"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table } from \"antd\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../actions\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst DLFisrtTable = (props) => {\r\n\tconst { startDate, endTime, timeClassification, cameraCode, baseURL } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"lane\",\r\n\t\t\twidth: 60,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tvar FirstRow = {\r\n\t\tkey: 0,\r\n\t\tlane: \"전체\",\r\n\t\ttotalCount: 0,\r\n\t\ttotalAvgSpeed: 0,\r\n\t\ttotalpcu: 0,\r\n\t\ttotalOverSpeed: 0,\r\n\r\n\t\tcarCount: 0,\r\n\t\tcarAvgSpeed: 0,\r\n\t\tcarpcu: 0,\r\n\t\tcarRatio: 0,\r\n\t\tcarOverSpeed: 0,\r\n\r\n\t\tbusCount: 0,\r\n\t\tbusAvgSpeed: 0,\r\n\t\tbuspcu: 0,\r\n\t\tbusRatio: 0,\r\n\t\tbusOverSpeed: 0,\r\n\r\n\t\ttruckCount: 0,\r\n\t\ttruckAvgSpeed: 0,\r\n\t\ttruckpcu: 0,\r\n\t\ttruckRatio: 0,\r\n\t\ttruckOverSpeed: 0,\r\n\r\n\t\tmotorCount: 0,\r\n\t\tmotorAvgSpeed: 0,\r\n\t\tmotorpcu: 0,\r\n\t\tmotorRatio: 0,\r\n\t\tmotorOverSpeed: 0,\r\n\r\n\t\tperson: 0,\r\n\t\tjaywalk: 0,\r\n\t};\r\n\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\taxiosData();\r\n\t}, []);\r\n\tconst axiosData = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}/statistics/traffic/first?groupBy=lane&camCode=0004&startDate=${startDate}&endTime=${endTime} 23:59:59`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"count table axios\");\r\n\t\t\t\tres.data.forEach((eachData, index) => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tlaneNumber,\r\n\t\t\t\t\t\tcarCnt,\r\n\t\t\t\t\t\tcarAvgSpeed,\r\n\t\t\t\t\t\tcarPCU,\r\n\t\t\t\t\t\tcarRatio,\r\n\t\t\t\t\t\tcarSpdCnt,\r\n\t\t\t\t\t\tmBusCnt,\r\n\t\t\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\t\t\tmBusPCU,\r\n\t\t\t\t\t\tmBusRatio,\r\n\t\t\t\t\t\tmBusSpdCnt,\r\n\t\t\t\t\t\tmTruckCnt,\r\n\t\t\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\t\t\tmTruckPCU,\r\n\t\t\t\t\t\tmTruckRatio,\r\n\t\t\t\t\t\tmTruckSpdCnt,\r\n\t\t\t\t\t\tmotorCnt,\r\n\t\t\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\t\t\tmotorPCU,\r\n\t\t\t\t\t\tmotorRatio,\r\n\t\t\t\t\t\tmotorSpdCnt,\r\n\t\t\t\t\t} = eachData;\r\n\t\t\t\t\tlet dataTemp = {};\r\n\t\t\t\t\tlet totalCnt = carCnt + mBusCnt + mTruckCnt + motorCnt;\r\n\r\n\t\t\t\t\tlet carAvgSpeedNum = parseFloat(carAvgSpeed);\r\n\t\t\t\t\tlet mBusAvgSpeedNum = parseFloat(mBusAvgSpeed);\r\n\t\t\t\t\tlet mTruckAvgSpeedNum = parseFloat(mTruckAvgSpeed);\r\n\t\t\t\t\tlet motorAvgSpeedNum = parseFloat(motorAvgSpeed);\r\n\r\n\t\t\t\t\tlet carPCUNum = parseFloat(carPCU);\r\n\t\t\t\t\tlet mBusPCUNum = parseFloat(mBusPCU);\r\n\t\t\t\t\tlet mTruckPCUNum = parseFloat(mTruckPCU);\r\n\t\t\t\t\tlet motorPCUNum = parseFloat(motorPCU);\r\n\r\n\t\t\t\t\tlet totalAvgSpeed = parseFloat(\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(carAvgSpeedNum +\r\n\t\t\t\t\t\t\t\tmBusAvgSpeedNum +\r\n\t\t\t\t\t\t\t\tmTruckAvgSpeedNum +\r\n\t\t\t\t\t\t\t\tmotorAvgSpeedNum) /\r\n\t\t\t\t\t\t\t4\r\n\t\t\t\t\t\t).toFixed(2)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tlet totalpcu = parseFloat(\r\n\t\t\t\t\t\t(carPCUNum + mBusPCUNum + mTruckPCUNum + motorPCUNum).toFixed(1)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tlet totalOverSpeed =\r\n\t\t\t\t\t\tcarSpdCnt + mBusSpdCnt + mTruckSpdCnt + motorSpdCnt;\r\n\t\t\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\t\t\tdataTemp[\"lane\"] = `${laneNumber} 차선`;\r\n\t\t\t\t\tdataTemp[\"totalCount\"] = totalCnt;\r\n\t\t\t\t\tdataTemp[\"totalAvgSpeed\"] = totalAvgSpeed;\r\n\t\t\t\t\tdataTemp[\"totalpcu\"] = totalpcu;\r\n\t\t\t\t\tdataTemp[\"totalOverSpeed\"] = totalOverSpeed;\r\n\r\n\t\t\t\t\tdataTemp[\"carCount\"] = carCnt;\r\n\t\t\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeedNum;\r\n\t\t\t\t\tdataTemp[\"carpcu\"] = carPCU;\r\n\t\t\t\t\tdataTemp[\"carRatio\"] = carRatio;\r\n\t\t\t\t\tdataTemp[\"carOverSpeed\"] = carSpdCnt;\r\n\r\n\t\t\t\t\tdataTemp[\"busCount\"] = mBusCnt;\r\n\t\t\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeedNum;\r\n\t\t\t\t\tdataTemp[\"buspcu\"] = mBusPCU;\r\n\t\t\t\t\tdataTemp[\"busRatio\"] = mBusRatio;\r\n\t\t\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdCnt;\r\n\r\n\t\t\t\t\tdataTemp[\"truckCount\"] = mTruckCnt;\r\n\t\t\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeedNum;\r\n\t\t\t\t\tdataTemp[\"truckpcu\"] = mTruckPCU;\r\n\t\t\t\t\tdataTemp[\"truckRatio\"] = mTruckRatio;\r\n\t\t\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdCnt;\r\n\r\n\t\t\t\t\tdataTemp[\"motorCount\"] = motorCnt;\r\n\t\t\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeedNum;\r\n\t\t\t\t\tdataTemp[\"motorpcu\"] = motorPCU;\r\n\t\t\t\t\tdataTemp[\"motorRatio\"] = motorRatio;\r\n\t\t\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdCnt;\r\n\r\n\t\t\t\t\tTotalData.push(dataTemp);\r\n\t\t\t\t\tFirstRow[\"totalCount\"] += totalCnt;\r\n\t\t\t\t\tFirstRow[\"totalAvgSpeed\"] += totalAvgSpeed;\r\n\t\t\t\t\tFirstRow[\"totalpcu\"] += totalpcu;\r\n\t\t\t\t\tFirstRow[\"totalOverSpeed\"] += totalOverSpeed;\r\n\r\n\t\t\t\t\tFirstRow[\"carCount\"] += carCnt;\r\n\t\t\t\t\tFirstRow[\"carAvgSpeed\"] += carAvgSpeedNum;\r\n\t\t\t\t\tFirstRow[\"carpcu\"] += carPCUNum;\r\n\t\t\t\t\tFirstRow[\"carOverSpeed\"] += carSpdCnt;\r\n\r\n\t\t\t\t\tFirstRow[\"busCount\"] += mBusCnt;\r\n\t\t\t\t\tFirstRow[\"busAvgSpeed\"] += mBusAvgSpeedNum;\r\n\t\t\t\t\tFirstRow[\"buspcu\"] += mBusPCUNum;\r\n\t\t\t\t\tFirstRow[\"busOverSpeed\"] += mBusSpdCnt;\r\n\r\n\t\t\t\t\tFirstRow[\"truckCount\"] += mTruckCnt;\r\n\t\t\t\t\tFirstRow[\"truckAvgSpeed\"] += mTruckAvgSpeedNum;\r\n\t\t\t\t\tFirstRow[\"truckpcu\"] += mTruckPCUNum;\r\n\t\t\t\t\tFirstRow[\"truckOverSpeed\"] += mTruckSpdCnt;\r\n\r\n\t\t\t\t\tFirstRow[\"motorCount\"] += motorCnt;\r\n\t\t\t\t\tFirstRow[\"motorAvgSpeed\"] += motorAvgSpeedNum;\r\n\t\t\t\t\tFirstRow[\"motorpcu\"] += motorPCUNum;\r\n\t\t\t\t\tFirstRow[\"motorOverSpeed\"] += motorSpdCnt;\r\n\t\t\t\t});\r\n\t\t\t\tFirstRow[\"totalAvgSpeed\"] = (FirstRow[\"totalAvgSpeed\"] / 96).toFixed(2);\r\n\t\t\t\tFirstRow[\"carAvgSpeed\"] = (FirstRow[\"carAvgSpeed\"] / 96).toFixed(2);\r\n\t\t\t\tFirstRow[\"busAvgSpeed\"] = (FirstRow[\"busAvgSpeed\"] / 96).toFixed(2);\r\n\t\t\t\tFirstRow[\"truckAvgSpeed\"] = (FirstRow[\"truckAvgSpeed\"] / 96).toFixed(2);\r\n\t\t\t\tFirstRow[\"motorAvgSpeed\"] = (FirstRow[\"motorAvgSpeed\"] / 96).toFixed(2);\r\n\r\n\t\t\t\tFirstRow[\"carRatio\"] = (\r\n\t\t\t\t\tFirstRow[\"carCount\"] / FirstRow[\"totalCount\"]\r\n\t\t\t\t).toFixed(2);\r\n\t\t\t\tFirstRow[\"busRatio\"] = (\r\n\t\t\t\t\tFirstRow[\"busCount\"] / FirstRow[\"totalCount\"]\r\n\t\t\t\t).toFixed(2);\r\n\t\t\t\tFirstRow[\"truckRatio\"] = (\r\n\t\t\t\t\tFirstRow[\"truckCount\"] / FirstRow[\"totalCount\"]\r\n\t\t\t\t).toFixed(2);\r\n\t\t\t\tFirstRow[\"motorRatio\"] = (\r\n\t\t\t\t\tFirstRow[\"motorCount\"] / FirstRow[\"totalCount\"]\r\n\t\t\t\t).toFixed(2);\r\n\r\n\t\t\t\tFirstRow[\"totalpcu\"] = FirstRow[\"totalpcu\"].toFixed(1);\r\n\t\t\t\tFirstRow[\"carpcu\"] = FirstRow[\"carpcu\"].toFixed(1);\r\n\t\t\t\tFirstRow[\"buspcu\"] = FirstRow[\"buspcu\"].toFixed(1);\r\n\t\t\t\tFirstRow[\"truckpcu\"] = FirstRow[\"truckpcu\"].toFixed(1);\r\n\t\t\t\tFirstRow[\"motorpcu\"] = FirstRow[\"motorpcu\"].toFixed(1);\r\n\r\n\t\t\t\tconst arr = [FirstRow];\r\n\t\t\t\tconst dataWithTotal = arr.concat(TotalData);\r\n\t\t\t\t// console.log(dataWithTotal);\r\n\t\t\t\tsetData(dataWithTotal);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn <Table columns={columns} dataSource={Data} size=\"small\" bordered />;\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationCodeInfo: () => {\r\n\t\t\tdispatch(actions.getLocationCode());\r\n\t\t},\r\n\t\tgetBaseURL: () => {\r\n\t\t\tdispatch(actions.getURL());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DLFisrtTable);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoStreaming\\VideoContainer.js",["522"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchResultTab\\SearchResultTab.js",["523","524","525","526"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTSecondTable.js",["527","528","529"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js",["530","531","532"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js",["533","534","535"],"import React from \"react\";\r\nimport { Table } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst WTSecondTable = (props) => {\r\n\tconst { startDate, endTime, interval } = props;\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"totalDayNightRatio\",\r\n\t\t\t\t\tkey: \"totalNightRatio\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"totalPHF\",\r\n\t\t\t\t\tkey: \"totalPHF\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"ADT\",\r\n\t\t\t\t\tdataIndex: \"totalADT\",\r\n\t\t\t\t\tkey: \"totalADT\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"totalPeekHourCnt\",\r\n\t\t\t\t\tkey: \"totalPeekHourCnt\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\t// dataIndex: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"carDayNightRatio\",\r\n\t\t\t\t\tkey: \"carNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"carPHF\",\r\n\t\t\t\t\tkey: \"carPHF\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"ADT\",\r\n\t\t\t\t\tdataIndex: \"carADT\",\r\n\t\t\t\t\tkey: \"carADT\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"carPeekHourCnt\",\r\n\t\t\t\t\tkey: \"carPeekHourCnt\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\t// dataIndex: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"busDayNightRatio\",\r\n\t\t\t\t\tkey: \"busNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"busPHF\",\r\n\t\t\t\t\tkey: \"busPHF\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"ADT\",\r\n\t\t\t\t\tdataIndex: \"busADT\",\r\n\t\t\t\t\tkey: \"busADT\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"busPeekHourCnt\",\r\n\t\t\t\t\tkey: \"busPeekHourCnt\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\t// dataIndex: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"truckDayNightRatio\",\r\n\t\t\t\t\tkey: \"truckNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"truckPHF\",\r\n\t\t\t\t\tkey: \"truckPHF\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"ADT\",\r\n\t\t\t\t\tdataIndex: \"truckADT\",\r\n\t\t\t\t\tkey: \"truckADT\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"truckPeekHourCnt\",\r\n\t\t\t\t\tkey: \"truckPeekHourCnt\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\t// dataIndex: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"motorDayNightRatio\",\r\n\t\t\t\t\tkey: \"motorNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"motorPHF\",\r\n\t\t\t\t\tkey: \"motorPHF\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"ADT\",\r\n\t\t\t\t\tdataIndex: \"motorADT\",\r\n\t\t\t\t\tkey: \"motorADT\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"motorPeekHourCnt\",\r\n\t\t\t\t\tkey: \"motorPeekHourCnt\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst data = [\r\n\t\t{\r\n\t\t\tkey: \"0\",\r\n\t\t\ttime: \"전체\",\r\n\t\t\ttotalDayNightRatio: \"10%\",\r\n\t\t\ttotalPHF: \"10%\",\r\n\t\t\ttotalADT: \"10000\",\r\n\t\t\ttotalPeekHourCnt: \"1000\",\r\n\r\n\t\t\tcarDayNightRatio: \"10%\",\r\n\t\t\tcarPHF: \"10%\",\r\n\t\t\tcarADT: \"10000\",\r\n\t\t\tcarPeekHourCnt: \"1000\",\r\n\r\n\t\t\tbusDayNightRatio: \"10%\",\r\n\t\t\tbusPHF: \"10%\",\r\n\t\t\tbusADT: \"10000\",\r\n\t\t\tbusPeekHourCnt: \"1000\",\r\n\r\n\t\t\ttruckDayNightRatio: \"10%\",\r\n\t\t\ttruckPHF: \"10%\",\r\n\t\t\ttruckADT: \"10000\",\r\n\t\t\ttruckPeekHourCnt: \"1000\",\r\n\r\n\t\t\tmotorDayNightRatio: \"10%\",\r\n\t\t\tmotorPHF: \"10%\",\r\n\t\t\tmotorADT: \"10000\",\r\n\t\t\tmotorPeekHourCnt: \"1000\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"1\",\r\n\t\t\ttime: \"평일 전체\",\r\n\t\t\ttotalDayNightRatio: \"10%\",\r\n\t\t\ttotalPHF: \"10%\",\r\n\t\t\ttotalADT: \"10000\",\r\n\t\t\ttotalPeekHourCnt: \"1000\",\r\n\r\n\t\t\tcarDayNightRatio: \"10%\",\r\n\t\t\tcarPHF: \"10%\",\r\n\t\t\tcarADT: \"10000\",\r\n\t\t\tcarPeekHourCnt: \"1000\",\r\n\r\n\t\t\tbusDayNightRatio: \"10%\",\r\n\t\t\tbusPHF: \"10%\",\r\n\t\t\tbusADT: \"10000\",\r\n\t\t\tbusPeekHourCnt: \"1000\",\r\n\r\n\t\t\ttruckDayNightRatio: \"10%\",\r\n\t\t\ttruckPHF: \"10%\",\r\n\t\t\ttruckADT: \"10000\",\r\n\t\t\ttruckPeekHourCnt: \"1000\",\r\n\r\n\t\t\tmotorDayNightRatio: \"10%\",\r\n\t\t\tmotorPHF: \"10%\",\r\n\t\t\tmotorADT: \"10000\",\r\n\t\t\tmotorPeekHourCnt: \"1000\",\r\n\t\t},\r\n\t];\r\n\treturn <Table columns={columns} dataSource={data} size=\"small\" bordered />;\r\n};\r\nexport default WTSecondTable;\r\n",["536","537"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js",["538","539","540"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js",["541","542","543"],"import React from \"react\";\r\nimport { Table } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst MTSecondTable = (props) => {\r\n\tconst { startDate, endTime, interval } = props;\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"totalDayNightRatio\",\r\n\t\t\t\t\tkey: \"totalDayNightRatio\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"totalPHF\",\r\n\t\t\t\t\tkey: \"totalPHF\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"ADT\",\r\n\t\t\t\t\tdataIndex: \"totalADT\",\r\n\t\t\t\t\tkey: \"totalADT\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"totalPeekHourCnt\",\r\n\t\t\t\t\tkey: \"totalPeekHourCnt\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\t// dataIndex: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"carDayNightRatio\",\r\n\t\t\t\t\tkey: \"carDayNightRatio\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"carPHF\",\r\n\t\t\t\t\tkey: \"carPHF\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"ADT\",\r\n\t\t\t\t\tdataIndex: \"carADT\",\r\n\t\t\t\t\tkey: \"carADT\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"carPeekHourCnt\",\r\n\t\t\t\t\tkey: \"carPeekHourCnt\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"busDayNightRatio\",\r\n\t\t\t\t\tkey: \"busDayNightRatio\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"busPHF\",\r\n\t\t\t\t\tkey: \"busPHF\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"ADT\",\r\n\t\t\t\t\tdataIndex: \"busADT\",\r\n\t\t\t\t\tkey: \"busADT\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"busPeekHourCnt\",\r\n\t\t\t\t\tkey: \"busPeekHourCnt\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\t// dataIndex: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"truckDayNightRatio\",\r\n\t\t\t\t\tkey: \"truckDayNightRatio\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"truckPHF\",\r\n\t\t\t\t\tkey: \"truckPHF\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"ADT\",\r\n\t\t\t\t\tdataIndex: \"truckADT\",\r\n\t\t\t\t\tkey: \"truckADT\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"truckPeekHourCnt\",\r\n\t\t\t\t\tkey: \"truckPeekHourCnt\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\t// dataIndex: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"motorDayNightRatio\",\r\n\t\t\t\t\tkey: \"motorDayNightRatio\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"motorPHF\",\r\n\t\t\t\t\tkey: \"motorPHF\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"ADT\",\r\n\t\t\t\t\tdataIndex: \"motorADT\",\r\n\t\t\t\t\tkey: \"motorADT\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"motorPeekHourCnt\",\r\n\t\t\t\t\tkey: \"motorPeekHourCnt\",\r\n\t\t\t\t\t// width: 50,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst data = [\r\n\t\t{\r\n\t\t\tkey: \"0\",\r\n\t\t\ttime: \"전체\",\r\n\t\t\ttotalDayNightRatio: \"10%\",\r\n\t\t\ttotalPHF: \"10%\",\r\n\t\t\ttotalADT: \"10000\",\r\n\t\t\ttotalPeekHourCnt: \"1000\",\r\n\r\n\t\t\tcarDayNightRatio: \"10%\",\r\n\t\t\tcarPHF: \"10%\",\r\n\t\t\tcarADT: \"10000\",\r\n\t\t\tcarPeekHourCnt: \"1000\",\r\n\r\n\t\t\tbusDayNightRatio: \"10%\",\r\n\t\t\tbusPHF: \"10%\",\r\n\t\t\tbusADT: \"10000\",\r\n\t\t\tbusPeekHourCnt: \"1000\",\r\n\r\n\t\t\ttruckDayNightRatio: \"10%\",\r\n\t\t\ttruckPHF: \"10%\",\r\n\t\t\ttruckADT: \"10000\",\r\n\t\t\ttruckPeekHourCnt: \"1000\",\r\n\r\n\t\t\tmotorDayNightRatio: \"10%\",\r\n\t\t\tmotorPHF: \"10%\",\r\n\t\t\tmotorADT: \"10000\",\r\n\t\t\tmotorPeekHourCnt: \"1000\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"1\",\r\n\t\t\ttime: \"평일 전체\",\r\n\t\t\ttotalDayNightRatio: \"10%\",\r\n\t\t\ttotalPHF: \"10%\",\r\n\t\t\ttotalADT: \"10000\",\r\n\t\t\ttotalPeekHourCnt: \"1000\",\r\n\r\n\t\t\tcarDayNightRatio: \"10%\",\r\n\t\t\tcarPHF: \"10%\",\r\n\t\t\tcarADT: \"10000\",\r\n\t\t\tcarPeekHourCnt: \"1000\",\r\n\r\n\t\t\tbusDayNightRatio: \"10%\",\r\n\t\t\tbusPHF: \"10%\",\r\n\t\t\tbusADT: \"10000\",\r\n\t\t\tbusPeekHourCnt: \"1000\",\r\n\r\n\t\t\ttruckDayNightRatio: \"10%\",\r\n\t\t\ttruckPHF: \"10%\",\r\n\t\t\ttruckADT: \"10000\",\r\n\t\t\ttruckPeekHourCnt: \"1000\",\r\n\r\n\t\t\tmotorDayNightRatio: \"10%\",\r\n\t\t\tmotorPHF: \"10%\",\r\n\t\t\tmotorADT: \"10000\",\r\n\t\t\tmotorPeekHourCnt: \"1000\",\r\n\t\t},\r\n\t];\r\n\treturn <Table columns={columns} dataSource={data} size=\"small\" bordered />;\r\n};\r\nexport default MTSecondTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js",["544"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js",["545"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\PasswordPage.js",["546"],"import React, { useState } from \"react\";\r\nimport { Layout, Typography, Divider } from \"antd\";\r\n\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport PasswordForm from \"../../organisms/accountForm/PasswordFrom\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst PasswordPage = () => {\r\n\tconst { Content } = Layout;\r\n\tconst { Title } = Typography;\r\n\treturn (\r\n\t\t<div className=\"account-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb\r\n\t\t\t\t\t\t\tpageHierarchy={[\"데시보드\", \"개인정보\", \"비밀번호 변경\"]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Title level={3} style={{ minWidth: 160 }}>\r\n\t\t\t\t\t\t\t비밀번호 변경\r\n\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t<PasswordForm />\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PasswordPage;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchComparison\\SearchComparison.js",[],["547","548"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\slideBarChart\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\accountDescription\\AccountDescriptionFrom.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js",["549"],"import React, { useState } from \"react\";\r\nimport { Radio, Typography } from \"antd\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst TimeFilter = (props) => {\r\n\tconst { value, setValue } = props;\r\n\tconst { Text } = Typography;\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetValue(e.target.value);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"multi-radio-body\">\r\n\t\t\t<Text strong style={{ marginRight: 10, minWidth: 60 }}>\r\n\t\t\t\t선택사항\r\n\t\t\t</Text>\r\n\t\t\t<Radio.Group onChange={onChange} value={value}>\r\n\t\t\t\t<Radio value=\"ALL\">전체</Radio>\r\n\t\t\t\t<Radio value=\"DAY\">평일</Radio>\r\n\t\t\t\t<Radio value=\"END\">주말</Radio>\r\n\t\t\t</Radio.Group>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TimeFilter;\r\n",["550","551"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\pieChart\\index.js",["552","553"],"import React, { useEffect } from \"react\";\r\nimport { Pie } from \"@ant-design/charts\";\r\nconst DemoPie = () => {\r\n\tlet ref;\r\n\tvar data = [\r\n\t\t{\r\n\t\t\ttype: \"分类一\",\r\n\t\t\tvalue: 27,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: \"分类二\",\r\n\t\t\tvalue: 25,\r\n\t\t},\r\n\t\t// {\r\n\t\t// \ttype: \"分类三\",\r\n\t\t// \tvalue: 18,\r\n\t\t// },\r\n\t\t// {\r\n\t\t// \ttype: \"分类四\",\r\n\t\t// \tvalue: 15,\r\n\t\t// },\r\n\t\t// {\r\n\t\t// \ttype: \"分类五\",\r\n\t\t// \tvalue: 10,\r\n\t\t// },\r\n\t\t// {\r\n\t\t// \ttype: \"其他\",\r\n\t\t// \tvalue: 5,\r\n\t\t// },\r\n\t];\r\n\tvar config = {\r\n\t\tappendPadding: 10,\r\n\t\tdata: data,\r\n\t\tangleField: \"value\",\r\n\t\tcolorField: \"type\",\r\n\t\tradius: 0.6,\r\n\t\tlegend: false,\r\n\t\tlabel: {\r\n\t\t\ttype: \"inner\",\r\n\t\t\toffset: \"-30%\",\r\n\t\t\tcontent: \"{name}\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfontSize: 12,\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tstate: {\r\n\t\t\tactive: {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tlineWidth: 0,\r\n\t\t\t\t\tfillOpacity: 0.65,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tinteractions: [{ type: \"element-selected\" }, { type: \"element-active\" }],\r\n\t};\r\n\t// useEffect(() => {\r\n\t// \tif (ref) {\r\n\t// \t\tref.setState(\"active\", (data) => data.type === \"分类一\");\r\n\t// \t\tref.setState(\r\n\t// \t\t\t\"selected\",\r\n\t// \t\t\t(data) => data.type === \"分类一\" || data.type === \"分类二\"\r\n\t// \t\t);\r\n\t// \t}\r\n\t// }, []);\r\n\treturn <Pie {...config} chartRef={(chartRef) => (ref = chartRef)} />;\r\n};\r\nexport default DemoPie;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\comVisualization\\ComVisualization.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js",["554"],"import React, { useState } from \"react\";\r\nimport { Layout, Typography, Divider } from \"antd\";\r\n\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport SignupForm from \"../../organisms/accountForm/SignupForm\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst SignupPage = () => {\r\n\tconst { Content } = Layout;\r\n\tconst { Title } = Typography;\r\n\treturn (\r\n\t\t<div className=\"account-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"데시보드\", \"개인정보\", \"계정 발급\"]} />\r\n\t\t\t\t\t\t<Title level={3} style={{ minWidth: 120 }}>\r\n\t\t\t\t\t\t\t계정 발급\r\n\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t<SignupForm />\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SignupPage;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js",["555","556","557"],"import React from \"react\";\r\n// import axios from \"axios\";\r\nimport { Form, Input, message, Button } from \"antd\";\r\nimport { BankOutlined, UserOutlined } from \"@ant-design/icons\";\r\n\r\nimport Cascader from \"../../atoms/cascader/Cascader\";\r\n\r\n// import { useRecoilValue, useSetRecoilState } from \"recoil\";\r\n// import { isLoginState } from \"../../../states/app\";\r\n// import { userInfoState } from \"../../../states/ui\";\r\n// import { CHANGE_PASSWORD_API_URL } from \"../../../constants/url\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst formItemLayout = {\r\n\tlabelCol: {\r\n\t\txs: {\r\n\t\t\tspan: 24,\r\n\t\t},\r\n\t\tsm: {\r\n\t\t\tspan: 8,\r\n\t\t},\r\n\t},\r\n\twrapperCol: {\r\n\t\txs: {\r\n\t\t\tspan: 24,\r\n\t\t},\r\n\t\tsm: {\r\n\t\t\tspan: 16,\r\n\t\t},\r\n\t},\r\n};\r\nconst tailFormItemLayout = {\r\n\twrapperCol: {\r\n\t\txs: {\r\n\t\t\tspan: 24,\r\n\t\t\toffset: 0,\r\n\t\t},\r\n\t\tsm: {\r\n\t\t\tspan: 16,\r\n\t\t\toffset: 8,\r\n\t\t},\r\n\t},\r\n};\r\n\r\nconst PasswordForm = () => {\r\n\tconst [form] = Form.useForm();\r\n\t// const { username, affiliation, permission } = useRecoilValue(userInfoState);\r\n\t// const setIsLoggedIn = useSetRecoilState(isLoginState);\r\n\r\n\tconst changePassword = (values) => {\r\n\t\t// console.log('Received values of form: ', values);\r\n\t\tconst { oldPassword, newPassword } = values;\r\n\r\n\t\t// axios\r\n\t\t// \t.post(\r\n\t\t// \t\tCHANGE_PASSWORD_API_URL,\r\n\t\t// \t\tJSON.stringify({\r\n\t\t// \t\t\tusername,\r\n\t\t// \t\t\toldPassword,\r\n\t\t// \t\t\tnewPassword,\r\n\t\t// \t\t}),\r\n\t\t// \t\t{ headers: { \"Content-Type\": \"application/json\" } }\r\n\t\t// \t)\r\n\t\t// \t.then((res) => {\r\n\t\t// \t\tif (res.status === 200) {\r\n\t\t// \t\t\tmessage.success(res.data.message);\r\n\t\t// \t\t\tsetIsLoggedIn(false);\r\n\t\t// \t\t}\r\n\t\t// \t\t// redirect\r\n\t\t// \t})\r\n\t\t// \t.catch((err) => {\r\n\t\t// \t\tif (err.response.status === 401) {\r\n\t\t// \t\t\tmessage.error(err.response.data.message);\r\n\t\t// \t\t} else {\r\n\t\t// \t\t\tmessage.error(\"Unknown error\");\r\n\t\t// \t\t}\r\n\t\t// \t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\t{...formItemLayout}\r\n\t\t\tform={form}\r\n\t\t\tname=\"register\"\r\n\t\t\tonFinish={changePassword}\r\n\t\t\tinitialValues={{\r\n\t\t\t\tregion: [\"인천광역시\", \"중구\", \"수인사거리\"],\r\n\t\t\t}}\r\n\t\t\tscrollToFirstError\r\n\t\t\tsize=\"large\"\r\n\t\t>\r\n\t\t\t<Form.Item name=\"username\" label=\"계정\" initialValue=\"username\">\r\n\t\t\t\t<Input\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t\tprefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item name=\"affiliation\" label=\"소속\" initialValue=\"affiliation\">\r\n\t\t\t\t<Input\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t\tprefix={<BankOutlined className=\"site-form-item-icon\" />}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item name=\"permission\" label=\"권한\" initialValue=\"permission\">\r\n\t\t\t\t<Cascader />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"oldPassword\"\r\n\t\t\t\tlabel=\"현재 비밀번호\"\r\n\t\t\t\trules={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"현재 비밀번호를 입력하세요\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\thasFeedback\r\n\t\t\t>\r\n\t\t\t\t<Input.Password />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"newPassword\"\r\n\t\t\t\tlabel=\"새 비밀번호\"\r\n\t\t\t\trules={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"새 비밀번호를 입력하세요\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\thasFeedback\r\n\t\t\t>\r\n\t\t\t\t<Input.Password />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item\r\n\t\t\t\tname=\"confirm\"\r\n\t\t\t\tlabel=\"비밀번호 확인\"\r\n\t\t\t\tdependencies={[\"password\"]}\r\n\t\t\t\thasFeedback\r\n\t\t\t\trules={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: \"새 비밀번호를 다시 한번 입력하세요\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t({ getFieldValue }) => ({\r\n\t\t\t\t\t\tvalidator(rule, value) {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t!value ||\r\n\t\t\t\t\t\t\t\t(getFieldValue(\"newPassword\") === value &&\r\n\t\t\t\t\t\t\t\t\tgetFieldValue(\"oldPassword\") !== value)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (getFieldValue(\"newPassword\") !== value) {\r\n\t\t\t\t\t\t\t\treturn Promise.reject(\"비밀번호 확인이 올바르지 않습니다\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn Promise.reject(\r\n\t\t\t\t\t\t\t\t\"현재 비밀번호와 다른 비밀번호를 입력해주세요\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}),\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<Input.Password />\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item {...tailFormItemLayout}>\r\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\t\t확인\r\n\t\t\t\t</Button>\r\n\t\t\t</Form.Item>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default PasswordForm;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js",["558","559","560","561"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nimport VisualizationCard from \"../../molecules/genVisualizationCard/GenVisualizationCard\";\r\nimport TrafficPie from \"../../charts/doughnutChart/Traffic\";\r\nimport AvgSpeedGauge from \"../../charts/gaugeChart/AvgSpeed\";\r\nimport AvgSpeedTinyBar from \"../../charts/tinyBarChart/AvgSpeed\";\r\nimport OverSpeedTinyBar from \"../../charts/tinyBarChart/overSpeed\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst StreamingGeneralVisualization = (props) => {\r\n\tconst {\r\n\t\tpage = \"DEFAULT\",\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcurrentTime,\r\n\t\trealtimeCamCode,\r\n\t\tbaseURL,\r\n\t} = props;\r\n\r\n\tconst trafficURL = \"/statistics/traffic?groupBy=time\";\r\n\tconst violationURL = \"/violations/speeding?groupBy=lane\";\r\n\t// const group = timeClassification ? \"time\" : \"lane\";\r\n\tconst [isLoadingTraffic, setLoadingTraffic] = useState(true);\r\n\tconst [isLoadingViolation, setLoadingViolation] = useState(true);\r\n\r\n\tconst [trafficData, setTrafficData] = useState([]);\r\n\tconst [violationData, setViolationData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetTrafficData();\r\n\t\tgetViolationData();\r\n\t}, [realtimeCamCode, startDate, endTime]);\r\n\r\n\tconst getTrafficData = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${trafficURL}&camCode=${realtimeCamCode}&startDate=${startDate}&endTime=${endTime} ${currentTime}&interval=15M&limit=0&offset=0`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetTrafficData(res.data);\r\n\t\t\t\tsetLoadingTraffic(false);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\tconst getViolationData = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${violationURL}&camCode=${realtimeCamCode}&startDate=${startDate}&endTime=${startDate} ${currentTime}`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetViolationData(res.data);\r\n\t\t\t\tsetLoadingViolation(false);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\tconst TrafficPieChart = (\r\n\t\t<TrafficPie isLoading={isLoadingTraffic} trafficData={trafficData} />\r\n\t);\r\n\t// const GaugeChart = (\r\n\t// \t<AvgSpeedGauge isLoading={isLoadingTraffic} trafficData={trafficData} />\r\n\t// );\r\n\t// var AvgSpeedTinyBarChart = (\r\n\t// \t<AvgSpeedTinyBar isLoading={isLoadingTraffic} trafficData={trafficData} />\r\n\t// );\r\n\r\n\tvar OverSpeedTinyBarChart = (\r\n\t\t<OverSpeedTinyBar\r\n\t\t\tisLoading={isLoadingViolation}\r\n\t\t\tviolationData={violationData}\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"general-graph-layout\">\r\n\t\t\t{/* {page === \"STREAMING\" ? ( */}\r\n\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t<VisualizationCard title=\"차종별 통행량\" chart={TrafficPieChart} />\r\n\t\t\t\t<VisualizationCard\r\n\t\t\t\t\ttitle=\"차종별 과속차량\"\r\n\t\t\t\t\tchart={OverSpeedTinyBarChart}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t{/* ) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t\t<VisualizationCard title=\"차종별 통행량\" chart={TrafficPieChart} />\r\n\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\ttitle=\"차종별 과속차량\"\r\n\t\t\t\t\t\t\tchart={OverSpeedTinyBarChart}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t\t<VisualizationCard title=\"평균속도\" chart={GaugeChart} />\r\n\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\ttitle=\"차종별 평균속도\"\r\n\t\t\t\t\t\t\tchart={AvgSpeedTinyBarChart}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)} */}\r\n\t\t</div>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationCodeInfo: () => {\r\n\t\t\tdispatch(actions.getLocationCode());\r\n\t\t},\r\n\t\tgetBaseURL: () => {\r\n\t\t\tdispatch(actions.getURL());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(StreamingGeneralVisualization);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\store\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\login\\LoginPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\userInfo.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js",[],{"ruleId":"562","severity":1,"message":"563","line":17,"column":3,"nodeType":"564","messageId":"565","endLine":17,"endColumn":11},{"ruleId":"562","severity":1,"message":"566","line":18,"column":3,"nodeType":"564","messageId":"565","endLine":18,"endColumn":13},{"ruleId":"562","severity":1,"message":"567","line":26,"column":9,"nodeType":"564","messageId":"565","endLine":26,"endColumn":26},{"ruleId":"562","severity":1,"message":"568","line":27,"column":9,"nodeType":"564","messageId":"565","endLine":27,"endColumn":27},{"ruleId":"562","severity":1,"message":"569","line":27,"column":29,"nodeType":"564","messageId":"565","endLine":27,"endColumn":48},{"ruleId":"562","severity":1,"message":"570","line":39,"column":24,"nodeType":"564","messageId":"565","endLine":39,"endColumn":40},{"ruleId":"562","severity":1,"message":"571","line":57,"column":8,"nodeType":"564","messageId":"565","endLine":57,"endColumn":20},{"ruleId":"572","severity":1,"message":"573","line":69,"column":5,"nodeType":"574","endLine":69,"endColumn":7,"suggestions":"575"},{"ruleId":"562","severity":1,"message":"576","line":7,"column":3,"nodeType":"564","messageId":"565","endLine":7,"endColumn":18},{"ruleId":"562","severity":1,"message":"577","line":10,"column":3,"nodeType":"564","messageId":"565","endLine":10,"endColumn":21},{"ruleId":"578","replacedBy":"579"},{"ruleId":"580","replacedBy":"581"},{"ruleId":"562","severity":1,"message":"576","line":7,"column":3,"nodeType":"564","messageId":"565","endLine":7,"endColumn":18},{"ruleId":"562","severity":1,"message":"577","line":10,"column":3,"nodeType":"564","messageId":"565","endLine":10,"endColumn":21},{"ruleId":"562","severity":1,"message":"576","line":7,"column":3,"nodeType":"564","messageId":"565","endLine":7,"endColumn":18},{"ruleId":"562","severity":1,"message":"577","line":10,"column":3,"nodeType":"564","messageId":"565","endLine":10,"endColumn":21},{"ruleId":"578","replacedBy":"582"},{"ruleId":"580","replacedBy":"583"},{"ruleId":"572","severity":1,"message":"584","line":42,"column":5,"nodeType":"574","endLine":42,"endColumn":34,"suggestions":"585"},{"ruleId":"572","severity":1,"message":"586","line":12,"column":5,"nodeType":"574","endLine":12,"endColumn":16,"suggestions":"587"},{"ruleId":"572","severity":1,"message":"588","line":16,"column":5,"nodeType":"574","endLine":16,"endColumn":29,"suggestions":"589"},{"ruleId":"572","severity":1,"message":"590","line":16,"column":5,"nodeType":"574","endLine":16,"endColumn":29,"suggestions":"591"},{"ruleId":"572","severity":1,"message":"586","line":15,"column":5,"nodeType":"574","endLine":15,"endColumn":29,"suggestions":"592"},{"ruleId":"562","severity":1,"message":"576","line":7,"column":3,"nodeType":"564","messageId":"565","endLine":7,"endColumn":18},{"ruleId":"562","severity":1,"message":"577","line":10,"column":3,"nodeType":"564","messageId":"565","endLine":10,"endColumn":21},{"ruleId":"578","replacedBy":"593"},{"ruleId":"580","replacedBy":"594"},{"ruleId":"562","severity":1,"message":"595","line":8,"column":8,"nodeType":"564","messageId":"565","endLine":8,"endColumn":23},{"ruleId":"578","replacedBy":"596"},{"ruleId":"580","replacedBy":"597"},{"ruleId":"562","severity":1,"message":"598","line":7,"column":10,"nodeType":"564","messageId":"565","endLine":7,"endColumn":14},{"ruleId":"562","severity":1,"message":"577","line":19,"column":3,"nodeType":"564","messageId":"565","endLine":19,"endColumn":21},{"ruleId":"572","severity":1,"message":"599","line":62,"column":5,"nodeType":"574","endLine":67,"endColumn":3,"suggestions":"600"},{"ruleId":"572","severity":1,"message":"601","line":75,"column":5,"nodeType":"574","endLine":80,"endColumn":3,"suggestions":"602"},{"ruleId":"578","replacedBy":"603"},{"ruleId":"580","replacedBy":"604"},{"ruleId":"562","severity":1,"message":"605","line":2,"column":16,"nodeType":"564","messageId":"565","endLine":2,"endColumn":20},{"ruleId":"562","severity":1,"message":"606","line":2,"column":22,"nodeType":"564","messageId":"565","endLine":2,"endColumn":27},{"ruleId":"572","severity":1,"message":"607","line":74,"column":5,"nodeType":"574","endLine":74,"endColumn":17,"suggestions":"608"},{"ruleId":"572","severity":1,"message":"609","line":83,"column":5,"nodeType":"574","endLine":83,"endColumn":37,"suggestions":"610"},{"ruleId":"562","severity":1,"message":"611","line":85,"column":8,"nodeType":"564","messageId":"565","endLine":85,"endColumn":18},{"ruleId":"612","severity":2,"message":"613","line":100,"column":6,"nodeType":"564","messageId":"614","endLine":100,"endColumn":16},{"ruleId":"612","severity":2,"message":"613","line":102,"column":21,"nodeType":"564","messageId":"614","endLine":102,"endColumn":31},{"ruleId":"562","severity":1,"message":"563","line":16,"column":3,"nodeType":"564","messageId":"565","endLine":16,"endColumn":11},{"ruleId":"562","severity":1,"message":"615","line":19,"column":3,"nodeType":"564","messageId":"565","endLine":19,"endColumn":19},{"ruleId":"572","severity":1,"message":"616","line":49,"column":5,"nodeType":"574","endLine":49,"endColumn":37,"suggestions":"617"},{"ruleId":"562","severity":1,"message":"618","line":5,"column":8,"nodeType":"564","messageId":"565","endLine":5,"endColumn":13},{"ruleId":"562","severity":1,"message":"619","line":6,"column":10,"nodeType":"564","messageId":"565","endLine":6,"endColumn":17},{"ruleId":"562","severity":1,"message":"620","line":7,"column":13,"nodeType":"564","messageId":"565","endLine":7,"endColumn":20},{"ruleId":"562","severity":1,"message":"577","line":15,"column":3,"nodeType":"564","messageId":"565","endLine":15,"endColumn":21},{"ruleId":"572","severity":1,"message":"621","line":29,"column":5,"nodeType":"574","endLine":29,"endColumn":61,"suggestions":"622"},{"ruleId":"562","severity":1,"message":"623","line":1,"column":17,"nodeType":"564","messageId":"565","endLine":1,"endColumn":25},{"ruleId":"578","replacedBy":"624"},{"ruleId":"580","replacedBy":"625"},{"ruleId":"562","severity":1,"message":"577","line":24,"column":3,"nodeType":"564","messageId":"565","endLine":24,"endColumn":21},{"ruleId":"572","severity":1,"message":"599","line":43,"column":5,"nodeType":"574","endLine":48,"endColumn":3,"suggestions":"626"},{"ruleId":"572","severity":1,"message":"627","line":57,"column":5,"nodeType":"574","endLine":62,"endColumn":3,"suggestions":"628"},{"ruleId":"578","replacedBy":"629"},{"ruleId":"580","replacedBy":"630"},{"ruleId":"562","severity":1,"message":"623","line":1,"column":17,"nodeType":"564","messageId":"565","endLine":1,"endColumn":25},{"ruleId":"562","severity":1,"message":"605","line":2,"column":16,"nodeType":"564","messageId":"565","endLine":2,"endColumn":20},{"ruleId":"562","severity":1,"message":"631","line":11,"column":8,"nodeType":"564","messageId":"565","endLine":11,"endColumn":22},{"ruleId":"562","severity":1,"message":"632","line":12,"column":8,"nodeType":"564","messageId":"565","endLine":12,"endColumn":17},{"ruleId":"578","replacedBy":"633"},{"ruleId":"580","replacedBy":"634"},{"ruleId":"562","severity":1,"message":"620","line":4,"column":13,"nodeType":"564","messageId":"565","endLine":4,"endColumn":20},{"ruleId":"562","severity":1,"message":"635","line":12,"column":9,"nodeType":"564","messageId":"565","endLine":12,"endColumn":18},{"ruleId":"562","severity":1,"message":"636","line":13,"column":9,"nodeType":"564","messageId":"565","endLine":13,"endColumn":16},{"ruleId":"562","severity":1,"message":"637","line":10,"column":10,"nodeType":"564","messageId":"565","endLine":10,"endColumn":15},{"ruleId":"572","severity":1,"message":"638","line":35,"column":5,"nodeType":"574","endLine":40,"endColumn":3,"suggestions":"639"},{"ruleId":"572","severity":1,"message":"599","line":40,"column":5,"nodeType":"574","endLine":45,"endColumn":3,"suggestions":"640"},{"ruleId":"572","severity":1,"message":"627","line":55,"column":5,"nodeType":"574","endLine":60,"endColumn":3,"suggestions":"641"},{"ruleId":"572","severity":1,"message":"642","line":16,"column":5,"nodeType":"574","endLine":16,"endColumn":31,"suggestions":"643"},{"ruleId":"562","severity":1,"message":"577","line":23,"column":3,"nodeType":"564","messageId":"565","endLine":23,"endColumn":21},{"ruleId":"572","severity":1,"message":"599","line":41,"column":5,"nodeType":"574","endLine":46,"endColumn":3,"suggestions":"644"},{"ruleId":"572","severity":1,"message":"645","line":57,"column":5,"nodeType":"574","endLine":62,"endColumn":3,"suggestions":"646"},{"ruleId":"572","severity":1,"message":"647","line":27,"column":5,"nodeType":"574","endLine":27,"endColumn":23,"suggestions":"648"},{"ruleId":"572","severity":1,"message":"649","line":35,"column":5,"nodeType":"574","endLine":35,"endColumn":45,"suggestions":"650"},{"ruleId":"562","severity":1,"message":"651","line":3,"column":10,"nodeType":"564","messageId":"565","endLine":3,"endColumn":13},{"ruleId":"572","severity":1,"message":"652","line":28,"column":5,"nodeType":"574","endLine":28,"endColumn":20,"suggestions":"653"},{"ruleId":"572","severity":1,"message":"649","line":36,"column":5,"nodeType":"574","endLine":36,"endColumn":42,"suggestions":"654"},{"ruleId":"578","replacedBy":"655"},{"ruleId":"580","replacedBy":"656"},{"ruleId":"562","severity":1,"message":"657","line":1,"column":27,"nodeType":"564","messageId":"565","endLine":1,"endColumn":36},{"ruleId":"562","severity":1,"message":"618","line":3,"column":8,"nodeType":"564","messageId":"565","endLine":3,"endColumn":13},{"ruleId":"562","severity":1,"message":"618","line":4,"column":8,"nodeType":"564","messageId":"565","endLine":4,"endColumn":13},{"ruleId":"562","severity":1,"message":"619","line":5,"column":10,"nodeType":"564","messageId":"565","endLine":5,"endColumn":17},{"ruleId":"562","severity":1,"message":"620","line":6,"column":13,"nodeType":"564","messageId":"565","endLine":6,"endColumn":20},{"ruleId":"562","severity":1,"message":"577","line":15,"column":3,"nodeType":"564","messageId":"565","endLine":15,"endColumn":21},{"ruleId":"572","severity":1,"message":"647","line":27,"column":5,"nodeType":"574","endLine":27,"endColumn":23,"suggestions":"658"},{"ruleId":"572","severity":1,"message":"649","line":35,"column":5,"nodeType":"574","endLine":35,"endColumn":45,"suggestions":"659"},{"ruleId":"562","severity":1,"message":"577","line":11,"column":3,"nodeType":"564","messageId":"565","endLine":11,"endColumn":21},{"ruleId":"572","severity":1,"message":"647","line":27,"column":5,"nodeType":"574","endLine":27,"endColumn":23,"suggestions":"660"},{"ruleId":"572","severity":1,"message":"649","line":35,"column":5,"nodeType":"574","endLine":35,"endColumn":45,"suggestions":"661"},{"ruleId":"572","severity":1,"message":"662","line":35,"column":5,"nodeType":"574","endLine":40,"endColumn":3,"suggestions":"663"},{"ruleId":"572","severity":1,"message":"664","line":35,"column":5,"nodeType":"574","endLine":40,"endColumn":3,"suggestions":"665"},{"ruleId":"572","severity":1,"message":"666","line":40,"column":5,"nodeType":"574","endLine":45,"endColumn":3,"suggestions":"667"},{"ruleId":"572","severity":1,"message":"647","line":27,"column":5,"nodeType":"574","endLine":27,"endColumn":23,"suggestions":"668"},{"ruleId":"572","severity":1,"message":"649","line":35,"column":5,"nodeType":"574","endLine":35,"endColumn":45,"suggestions":"669"},{"ruleId":"578","replacedBy":"670"},{"ruleId":"580","replacedBy":"671"},{"ruleId":"572","severity":1,"message":"672","line":39,"column":5,"nodeType":"574","endLine":39,"endColumn":7,"suggestions":"673"},{"ruleId":"562","severity":1,"message":"577","line":24,"column":3,"nodeType":"564","messageId":"565","endLine":24,"endColumn":21},{"ruleId":"572","severity":1,"message":"599","line":44,"column":5,"nodeType":"574","endLine":49,"endColumn":3,"suggestions":"674"},{"ruleId":"572","severity":1,"message":"601","line":59,"column":5,"nodeType":"574","endLine":64,"endColumn":3,"suggestions":"675"},{"ruleId":"562","severity":1,"message":"618","line":5,"column":8,"nodeType":"564","messageId":"565","endLine":5,"endColumn":13},{"ruleId":"562","severity":1,"message":"619","line":6,"column":10,"nodeType":"564","messageId":"565","endLine":6,"endColumn":17},{"ruleId":"562","severity":1,"message":"620","line":7,"column":13,"nodeType":"564","messageId":"565","endLine":7,"endColumn":20},{"ruleId":"562","severity":1,"message":"577","line":24,"column":3,"nodeType":"564","messageId":"565","endLine":24,"endColumn":21},{"ruleId":"572","severity":1,"message":"599","line":43,"column":5,"nodeType":"574","endLine":48,"endColumn":3,"suggestions":"676"},{"ruleId":"572","severity":1,"message":"627","line":57,"column":5,"nodeType":"574","endLine":62,"endColumn":3,"suggestions":"677"},{"ruleId":"578","replacedBy":"678"},{"ruleId":"580","replacedBy":"679"},{"ruleId":"562","severity":1,"message":"680","line":47,"column":21,"nodeType":"564","messageId":"565","endLine":47,"endColumn":34},{"ruleId":"562","severity":1,"message":"657","line":1,"column":17,"nodeType":"564","messageId":"565","endLine":1,"endColumn":26},{"ruleId":"562","severity":1,"message":"618","line":5,"column":8,"nodeType":"564","messageId":"565","endLine":5,"endColumn":13},{"ruleId":"562","severity":1,"message":"620","line":7,"column":13,"nodeType":"564","messageId":"565","endLine":7,"endColumn":20},{"ruleId":"562","severity":1,"message":"566","line":12,"column":38,"nodeType":"564","messageId":"565","endLine":12,"endColumn":48},{"ruleId":"562","severity":1,"message":"681","line":12,"column":50,"nodeType":"564","messageId":"565","endLine":12,"endColumn":57},{"ruleId":"562","severity":1,"message":"682","line":2,"column":10,"nodeType":"564","messageId":"565","endLine":2,"endColumn":21},{"ruleId":"562","severity":1,"message":"683","line":2,"column":23,"nodeType":"564","messageId":"565","endLine":2,"endColumn":39},{"ruleId":"562","severity":1,"message":"684","line":3,"column":10,"nodeType":"564","messageId":"565","endLine":3,"endColumn":18},{"ruleId":"562","severity":1,"message":"685","line":3,"column":20,"nodeType":"564","messageId":"565","endLine":3,"endColumn":30},{"ruleId":"562","severity":1,"message":"686","line":3,"column":32,"nodeType":"564","messageId":"565","endLine":3,"endColumn":39},{"ruleId":"562","severity":1,"message":"687","line":3,"column":41,"nodeType":"564","messageId":"565","endLine":3,"endColumn":47},{"ruleId":"562","severity":1,"message":"688","line":22,"column":3,"nodeType":"564","messageId":"565","endLine":22,"endColumn":11},{"ruleId":"562","severity":1,"message":"689","line":28,"column":3,"nodeType":"564","messageId":"565","endLine":28,"endColumn":9},{"ruleId":"562","severity":1,"message":"690","line":31,"column":8,"nodeType":"564","messageId":"565","endLine":31,"endColumn":13},{"ruleId":"562","severity":1,"message":"566","line":18,"column":3,"nodeType":"564","messageId":"565","endLine":18,"endColumn":13},{"ruleId":"572","severity":1,"message":"691","line":69,"column":5,"nodeType":"574","endLine":69,"endColumn":21,"suggestions":"692"},{"ruleId":"562","severity":1,"message":"577","line":11,"column":30,"nodeType":"564","messageId":"565","endLine":11,"endColumn":48},{"ruleId":"562","severity":1,"message":"566","line":11,"column":50,"nodeType":"564","messageId":"565","endLine":11,"endColumn":60},{"ruleId":"572","severity":1,"message":"691","line":208,"column":5,"nodeType":"574","endLine":208,"endColumn":7,"suggestions":"693"},{"ruleId":"562","severity":1,"message":"618","line":4,"column":8,"nodeType":"564","messageId":"565","endLine":4,"endColumn":13},{"ruleId":"562","severity":1,"message":"635","line":9,"column":10,"nodeType":"564","messageId":"565","endLine":9,"endColumn":19},{"ruleId":"562","severity":1,"message":"636","line":9,"column":21,"nodeType":"564","messageId":"565","endLine":9,"endColumn":28},{"ruleId":"562","severity":1,"message":"694","line":10,"column":10,"nodeType":"564","messageId":"565","endLine":10,"endColumn":17},{"ruleId":"562","severity":1,"message":"695","line":12,"column":8,"nodeType":"564","messageId":"565","endLine":12,"endColumn":16},{"ruleId":"562","severity":1,"message":"635","line":7,"column":10,"nodeType":"564","messageId":"565","endLine":7,"endColumn":19},{"ruleId":"562","severity":1,"message":"636","line":7,"column":21,"nodeType":"564","messageId":"565","endLine":7,"endColumn":28},{"ruleId":"562","severity":1,"message":"563","line":7,"column":30,"nodeType":"564","messageId":"565","endLine":7,"endColumn":38},{"ruleId":"562","severity":1,"message":"635","line":7,"column":10,"nodeType":"564","messageId":"565","endLine":7,"endColumn":19},{"ruleId":"562","severity":1,"message":"636","line":7,"column":21,"nodeType":"564","messageId":"565","endLine":7,"endColumn":28},{"ruleId":"562","severity":1,"message":"563","line":7,"column":30,"nodeType":"564","messageId":"565","endLine":7,"endColumn":38},{"ruleId":"562","severity":1,"message":"635","line":7,"column":10,"nodeType":"564","messageId":"565","endLine":7,"endColumn":19},{"ruleId":"562","severity":1,"message":"636","line":7,"column":21,"nodeType":"564","messageId":"565","endLine":7,"endColumn":28},{"ruleId":"562","severity":1,"message":"563","line":7,"column":30,"nodeType":"564","messageId":"565","endLine":7,"endColumn":38},{"ruleId":"578","replacedBy":"696"},{"ruleId":"580","replacedBy":"697"},{"ruleId":"562","severity":1,"message":"635","line":7,"column":10,"nodeType":"564","messageId":"565","endLine":7,"endColumn":19},{"ruleId":"562","severity":1,"message":"636","line":7,"column":21,"nodeType":"564","messageId":"565","endLine":7,"endColumn":28},{"ruleId":"562","severity":1,"message":"563","line":7,"column":30,"nodeType":"564","messageId":"565","endLine":7,"endColumn":38},{"ruleId":"562","severity":1,"message":"635","line":7,"column":10,"nodeType":"564","messageId":"565","endLine":7,"endColumn":19},{"ruleId":"562","severity":1,"message":"636","line":7,"column":21,"nodeType":"564","messageId":"565","endLine":7,"endColumn":28},{"ruleId":"562","severity":1,"message":"563","line":7,"column":30,"nodeType":"564","messageId":"565","endLine":7,"endColumn":38},{"ruleId":"562","severity":1,"message":"577","line":19,"column":3,"nodeType":"564","messageId":"565","endLine":19,"endColumn":21},{"ruleId":"572","severity":1,"message":"691","line":22,"column":5,"nodeType":"574","endLine":22,"endColumn":37,"suggestions":"698"},{"ruleId":"562","severity":1,"message":"623","line":1,"column":17,"nodeType":"564","messageId":"565","endLine":1,"endColumn":25},{"ruleId":"578","replacedBy":"699"},{"ruleId":"580","replacedBy":"700"},{"ruleId":"562","severity":1,"message":"623","line":1,"column":17,"nodeType":"564","messageId":"565","endLine":1,"endColumn":25},{"ruleId":"578","replacedBy":"701"},{"ruleId":"580","replacedBy":"702"},{"ruleId":"562","severity":1,"message":"657","line":1,"column":17,"nodeType":"564","messageId":"565","endLine":1,"endColumn":26},{"ruleId":"562","severity":1,"message":"703","line":66,"column":51,"nodeType":"564","messageId":"565","endLine":66,"endColumn":54},{"ruleId":"562","severity":1,"message":"623","line":1,"column":17,"nodeType":"564","messageId":"565","endLine":1,"endColumn":25},{"ruleId":"562","severity":1,"message":"704","line":3,"column":23,"nodeType":"564","messageId":"565","endLine":3,"endColumn":30},{"ruleId":"562","severity":1,"message":"705","line":53,"column":11,"nodeType":"564","messageId":"565","endLine":53,"endColumn":22},{"ruleId":"562","severity":1,"message":"706","line":53,"column":24,"nodeType":"564","messageId":"565","endLine":53,"endColumn":35},{"ruleId":"562","severity":1,"message":"707","line":8,"column":8,"nodeType":"564","messageId":"565","endLine":8,"endColumn":21},{"ruleId":"562","severity":1,"message":"708","line":9,"column":8,"nodeType":"564","messageId":"565","endLine":9,"endColumn":23},{"ruleId":"562","severity":1,"message":"598","line":16,"column":3,"nodeType":"564","messageId":"565","endLine":16,"endColumn":7},{"ruleId":"572","severity":1,"message":"584","line":36,"column":5,"nodeType":"574","endLine":36,"endColumn":42,"suggestions":"709"},"no-unused-vars","'interval' is assigned a value but never used.","Identifier","unusedVar","'cameraCode' is assigned a value but never used.","'isLoadingTrafficH' is assigned a value but never used.","'isLoadingOverSpeed' is assigned a value but never used.","'setLoadingOverSpeed' is assigned a value but never used.","'setOverSpeedData' is assigned a value but never used.","'violationURL' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getLaneNum', 'getPeakData', 'getPedestriansData', 'getTrafficHData', 'getTrafficLaneData', and 'getTrafficTotalData'. Either include them or remove the dependency array.","ArrayExpression",["710"],"'activeVisualKey' is assigned a value but never used.","'timeClassification' is assigned a value but never used.","no-native-reassign",["711"],"no-negated-in-lhs",["712"],["711"],["712"],"React Hook useEffect has missing dependencies: 'getTrafficData' and 'getViolationData'. Either include them or remove the dependency array.",["713"],"React Hook useEffect has a missing dependency: 'parseTraffic'. Either include it or remove the dependency array.",["714"],"React Hook useEffect has a missing dependency: 'parseTrafficData'. Either include it or remove the dependency array.",["715"],"React Hook useEffect has a missing dependency: 'parseAvgData'. Either include it or remove the dependency array.",["716"],["717"],["711"],["712"],"'SearchResultTab' is defined but never used.",["711"],["712"],"'page' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentLaneNumber', 'parseLaneData', 'parseTotalData', 'setLaneData', and 'setTotalData'. Either include them or remove the dependency array.",["718"],"React Hook useEffect has missing dependencies: 'isLoadingTrafficLane', 'isLoadingTrafficTotal', 'parseLaneData', and 'parseTotalData'. Either include them or remove the dependency array.",["719"],["711"],["712"],"'Spin' is defined but never used.","'Space' is defined but never used.","React Hook useEffect has a missing dependency: 'camLanes'. Either include it or remove the dependency array.",["720"],"React Hook useEffect has missing dependencies: 'getOverSpeedLaneData', 'getOverSpeedTotalData', 'getPeakData', 'getPedestriansData', 'getTrafficLaneData', and 'getTrafficTotalData'. Either include them or remove the dependency array.",["721"],"'getLaneNum' is assigned a value but never used.","no-undef","'tabLaneNum' is not defined.","undef","'additionalFilter' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getOverSpeedData', 'getPeakData', and 'getTrafficTotalData'. Either include them or remove the dependency array.",["722"],"'axios' is defined but never used.","'connect' is defined but never used.","'actions' is defined but never used.","React Hook useEffect has a missing dependency: 'Parse'. Either include it or remove the dependency array.",["723"],"'useState' is defined but never used.",["711"],["712"],["724"],"React Hook useEffect has missing dependencies: 'isLoadingTrafficLane', 'parseLaneData', and 'parseTotalData'. Either include them or remove the dependency array.",["725"],["711"],["712"],"'SliderBarChart' is defined but never used.","'AreaChart' is defined but never used.",["711"],["712"],"'startDate' is assigned a value but never used.","'endTime' is assigned a value but never used.","'Title' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isLoadingTrafficTotal', 'parseLaneData', and 'parseTotalData'. Either include them or remove the dependency array.",["726"],["727"],["728"],"React Hook useEffect has a missing dependency: 'parseViolationData'. Either include it or remove the dependency array.",["729"],["730"],"React Hook useEffect has missing dependencies: 'isLoadingOverSpeedLane', 'isLoadingOverSpeedTotal', 'parseLaneData', and 'parseTotalData'. Either include them or remove the dependency array.",["731"],"React Hook useEffect has missing dependencies: 'isLoadingTrafficTotal', 'parseTotalData', and 'setTotalData'. Either include them or remove the dependency array.",["732"],"React Hook useEffect has a missing dependency: 'parseTotalData'. Either include it or remove the dependency array.",["733"],"'act' is defined but never used.","React Hook useEffect has missing dependencies: 'isLoadingOverSpeed', 'parseTotalData', and 'setTotalData'. Either include them or remove the dependency array.",["734"],["735"],["711"],["712"],"'useEffect' is defined but never used.",["736"],["737"],["738"],["739"],"React Hook useEffect has missing dependencies: 'parseLaneData' and 'parseTotalData'. Either include them or remove the dependency array.",["740"],"React Hook useEffect has missing dependencies: 'parseLaneData', 'parseTotalData', and 'trafficTotalData'. Either include them or remove the dependency array.",["741"],"React Hook useEffect has missing dependencies: 'overSpeedLaneData', 'parseLaneData', and 'parseTotalData'. Either include them or remove the dependency array.",["742"],["743"],["744"],["711"],["712"],"React Hook useEffect has a missing dependency: 'getOptions'. Either include it or remove the dependency array.",["745"],["746"],["747"],["748"],["749"],["711"],["712"],"'setSignupInfo' is assigned a value but never used.","'baseURL' is assigned a value but never used.","'EyeOutlined' is defined but never used.","'DownloadOutlined' is defined but never used.","'Collapse' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","'tableKey' is assigned a value but never used.","'camera' is assigned a value but never used.","'group' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'axiosData'. Either include it or remove the dependency array.",["750"],["751"],"'TabPane' is assigned a value but never used.","'callback' is assigned a value but never used.",["711"],["712"],["752"],["711"],["712"],["711"],["712"],"'ref' is assigned a value but never used.","'message' is defined but never used.","'oldPassword' is assigned a value but never used.","'newPassword' is assigned a value but never used.","'AvgSpeedGauge' is defined but never used.","'AvgSpeedTinyBar' is defined but never used.",["753"],{"desc":"754","fix":"755"},"no-global-assign","no-unsafe-negation",{"desc":"756","fix":"757"},{"desc":"758","fix":"759"},{"desc":"760","fix":"761"},{"desc":"762","fix":"763"},{"desc":"764","fix":"765"},{"desc":"766","fix":"767"},{"desc":"768","fix":"769"},{"desc":"770","fix":"771"},{"desc":"772","fix":"773"},{"desc":"774","fix":"775"},{"desc":"776","fix":"777"},{"desc":"766","fix":"778"},{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},{"desc":"766","fix":"783"},{"desc":"779","fix":"784"},{"desc":"785","fix":"786"},{"desc":"787","fix":"788"},{"desc":"789","fix":"790"},{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},{"desc":"795","fix":"796"},{"desc":"797","fix":"798"},{"desc":"791","fix":"799"},{"desc":"793","fix":"800"},{"desc":"791","fix":"801"},{"desc":"793","fix":"802"},{"desc":"768","fix":"803"},{"desc":"804","fix":"805"},{"desc":"806","fix":"807"},{"desc":"791","fix":"808"},{"desc":"793","fix":"809"},{"desc":"810","fix":"811"},{"desc":"766","fix":"812"},{"desc":"768","fix":"813"},{"desc":"766","fix":"814"},{"desc":"779","fix":"815"},{"desc":"816","fix":"817"},{"desc":"818","fix":"819"},{"desc":"820","fix":"821"},{"desc":"822","fix":"823"},"Update the dependencies array to be: [getLaneNum, getPeakData, getPedestriansData, getTrafficHData, getTrafficLaneData, getTrafficTotalData]",{"range":"824","text":"825"},"Update the dependencies array to be: [camCode, startDate, endTime, getTrafficData, getViolationData]",{"range":"826","text":"827"},"Update the dependencies array to be: [isLoading, parseTraffic]",{"range":"828","text":"829"},"Update the dependencies array to be: [isLoading, parseTrafficData, trafficData]",{"range":"830","text":"831"},"Update the dependencies array to be: [isLoading, parseAvgData, trafficData]",{"range":"832","text":"833"},"Update the dependencies array to be: [isLoading, parseTraffic, trafficData]",{"range":"834","text":"835"},"Update the dependencies array to be: [trafficLaneData, trafficTotalData, isLoadingTrafficTotal, isLoadingTrafficLane, setTotalData, setLaneData, currentLaneNumber, parseTotalData, parseLaneData]",{"range":"836","text":"837"},"Update the dependencies array to be: [currentLaneNumber, activeVisualKey, isLoadingTrafficTotal, isLoadingTrafficLane, parseTotalData, parseLaneData]",{"range":"838","text":"839"},"Update the dependencies array to be: [camLanes, cameraCode]",{"range":"840","text":"841"},"Update the dependencies array to be: [cameraCode, startDate, endTime, getTrafficTotalData, getTrafficLaneData, getOverSpeedTotalData, getOverSpeedLaneData, getPeakData, getPedestriansData]",{"range":"842","text":"843"},"Update the dependencies array to be: [cameraCode, startDate, endTime, getTrafficTotalData, getOverSpeedData, getPeakData]",{"range":"844","text":"845"},"Update the dependencies array to be: [isLoadingPedestrians, pedestriansData, activeVisualKey, Parse]",{"range":"846","text":"847"},{"range":"848","text":"837"},"Update the dependencies array to be: [currentLaneNumber, activeVisualKey, isLoadingTrafficLane, parseTotalData, parseLaneData]",{"range":"849","text":"850"},"Update the dependencies array to be: [currentLaneNumber, activeVisualKey, isLoadingTrafficLane, isLoadingTrafficTotal, parseTotalData, parseLaneData]",{"range":"851","text":"852"},{"range":"853","text":"837"},{"range":"854","text":"850"},"Update the dependencies array to be: [isLoading, parseViolationData, violationData]",{"range":"855","text":"856"},"Update the dependencies array to be: [overSpeedTotalData, overSpeedLaneData, isLoadingOverSpeedTotal, isLoadingOverSpeedLane, setTotalData, setLaneData, currentLaneNumber, parseTotalData, parseLaneData]",{"range":"857","text":"858"},"Update the dependencies array to be: [currentLaneNumber, activeVisualKey, isLoadingOverSpeedTotal, isLoadingOverSpeedLane, parseTotalData, parseLaneData]",{"range":"859","text":"860"},"Update the dependencies array to be: [isLoadingTrafficTotal, parseTotalData, setTotalData, trafficTotalData]",{"range":"861","text":"862"},"Update the dependencies array to be: [isLoadingTrafficTotal, activeVisualKey, parseTotalData]",{"range":"863","text":"864"},"Update the dependencies array to be: [isLoadingOverSpeed, overSpeedData, parseTotalData, setTotalData]",{"range":"865","text":"866"},"Update the dependencies array to be: [isLoadingOverSpeed, activeVisualKey, parseTotalData]",{"range":"867","text":"868"},{"range":"869","text":"862"},{"range":"870","text":"864"},{"range":"871","text":"862"},{"range":"872","text":"864"},{"range":"873","text":"839"},"Update the dependencies array to be: [currentLaneNumber, activeVisualKey, isLoadingTrafficTotal, isLoadingTrafficLane, trafficTotalData, parseTotalData, parseLaneData]",{"range":"874","text":"875"},"Update the dependencies array to be: [currentLaneNumber, activeVisualKey, isLoadingOverSpeedTotal, isLoadingOverSpeedLane, overSpeedLaneData, parseTotalData, parseLaneData]",{"range":"876","text":"877"},{"range":"878","text":"862"},{"range":"879","text":"864"},"Update the dependencies array to be: [getOptions]",{"range":"880","text":"881"},{"range":"882","text":"837"},{"range":"883","text":"839"},{"range":"884","text":"837"},{"range":"885","text":"850"},"Update the dependencies array to be: [axiosData, currentLaneNum]",{"range":"886","text":"887"},"Update the dependencies array to be: [axiosData]",{"range":"888","text":"889"},"Update the dependencies array to be: [startDate, endTime, cameraCode, axiosData]",{"range":"890","text":"891"},"Update the dependencies array to be: [realtimeCamCode, startDate, endTime, getTrafficData, getViolationData]",{"range":"892","text":"893"},[2496,2498],"[getLaneNum, getPeakData, getPedestriansData, getTrafficHData, getTrafficLaneData, getTrafficTotalData]",[1365,1394],"[camCode, startDate, endTime, getTrafficData, getViolationData]",[303,314],"[isLoading, parseTraffic]",[430,454],"[isLoading, parseTrafficData, trafficData]",[412,436],"[isLoading, parseAvgData, trafficData]",[409,433],"[isLoading, parseTraffic, trafficData]",[1271,1368],"[trafficLaneData, trafficTotalData, isLoadingTrafficTotal, isLoadingTrafficLane, setTotalData, setLaneData, currentLaneNumber, parseTotalData, parseLaneData]",[1587,1691],"[currentLaneNumber, activeVisualKey, isLoadingTrafficTotal, isLoadingTrafficLane, parseTotalData, parseLaneData]",[2838,2850],"[camLanes, cameraCode]",[3029,3061],"[cameraCode, startDate, endTime, getTrafficTotalData, getTrafficLaneData, getOverSpeedTotalData, getOverSpeedLaneData, getPeakData, getPedestriansData]",[1657,1689],"[cameraCode, startDate, endTime, getTrafficTotalData, getOverSpeedData, getPeakData]",[687,743],"[isLoadingPedestrians, pedestriansData, activeVisualKey, Parse]",[992,1089],[1361,1465],"[currentLaneNumber, activeVisualKey, isLoadingTrafficLane, parseTotalData, parseLaneData]",[827,928],"[currentLaneNumber, activeVisualKey, isLoadingTrafficLane, isLoadingTrafficTotal, parseTotalData, parseLaneData]",[978,1075],[1335,1439],[427,453],"[isLoading, parseViolationData, violationData]",[1025,1130],"[overSpeedTotalData, overSpeedLaneData, isLoadingOverSpeedTotal, isLoadingOverSpeedLane, setTotalData, setLaneData, currentLaneNumber, parseTotalData, parseLaneData]",[1369,1477],"[currentLaneNumber, activeVisualKey, isLoadingOverSpeedTotal, isLoadingOverSpeedLane, parseTotalData, parseLaneData]",[520,538],"[isLoadingTrafficTotal, parseTotalData, setTotalData, trafficTotalData]",[679,719],"[isLoadingTrafficTotal, activeVisualKey, parseTotalData]",[589,604],"[isLoadingOverSpeed, overSpeedData, parseTotalData, setTotalData]",[742,779],"[isLoadingOverSpeed, activeVisualKey, parseTotalData]",[589,607],[748,788],[556,574],[715,755],[827,925],[820,918],"[currentLaneNumber, activeVisualKey, isLoadingTrafficTotal, isLoadingTrafficLane, trafficTotalData, parseTotalData, parseLaneData]",[914,1016],"[currentLaneNumber, activeVisualKey, isLoadingOverSpeedTotal, isLoadingOverSpeedLane, overSpeedLaneData, parseTotalData, parseLaneData]",[516,534],[675,715],[921,923],"[getOptions]",[1043,1140],[1430,1534],[1080,1177],[1449,1553],[1188,1204],"[axiosData, currentLaneNum]",[3531,3533],"[axiosData]",[631,663],"[startDate, endTime, cameraCode, axiosData]",[1218,1255],"[realtimeCamCode, startDate, endTime, getTrafficData, getViolationData]"]