[{"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js":"1","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\comVisualHalf\\ComVisualHalf.js":"2","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTCnt.js":"3","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js":"4","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js":"5","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js":"6","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js":"7","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js":"8","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StatContainer.js":"9","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js":"10","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js":"11","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\AvgSpeed.js":"12","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTVehicleRatio.js":"13","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTCnt.js":"14","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js":"15","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js":"16","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\store\\index.js":"17","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js":"18","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js":"19","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js":"20","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js":"21","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js":"22","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\Peak15.js":"23","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTCnt.js":"24","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js":"25","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js":"26","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js":"27","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js":"28","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js":"29","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\date.js":"30","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js":"31","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\index.js":"32","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js":"33","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js":"34","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js":"35","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js":"36","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\pieChart\\index.js":"37","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js":"38","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js":"39","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js":"40","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js":"41","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js":"42","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\searchDownload\\SearchDownloadPage.js":"43","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js":"44","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\userInfo.js":"45","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StreamingContainer.js":"46","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MonthPeakTime.js":"47","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js":"48","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js":"49","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\header\\index.js":"50","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchComparison\\SearchComparison.js":"51","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js":"52","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WeekPeakTime.js":"53","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTVehicleRatio.js":"54","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\accountDescription\\AccountDescriptionFrom.js":"55","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\TimeDataVisualization.js":"56","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js":"57","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\dataComparison\\DataComparisonPage.js":"58","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js":"59","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\bidirectionalBar\\DayNight.js":"60","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js":"61","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js":"62","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js":"63","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js":"64","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\PasswordPage.js":"65","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\login\\LoginPage.js":"66","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\overSpeed.js":"67","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\dashLineChart\\WeekPedestrians.js":"68","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js":"69","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js":"70","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js":"71","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js":"72","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js":"73","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTAvgSpeed.js":"74","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js":"75","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js":"76","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\GenAvgSpeed.js":"77","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PeakHourFlowRate.js":"78","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PHF.js":"79","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js":"80","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTSecondTable.js":"81","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleRatio.js":"82","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\dashLineChart\\DayPedestrians.js":"83","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js":"84","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\reportWebVitals.js":"85","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js":"86","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js":"87","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTPCU.js":"88","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\TimeTableCard.js":"89","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleCnt.js":"90","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js":"91","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTFirstTable.js":"92","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MLFirstTable.js":"93","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\GenOverSpeed.js":"94","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WMFlowRate.js":"95","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTConcentrationRatio.js":"96","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTPHF.js":"97","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTOverSpeed.js":"98","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js":"99","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTVehicleRatio.js":"100","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\LaneTableCard.js":"101"},{"size":832,"mtime":1617066324590,"results":"102","hashOfConfig":"103"},{"size":703,"mtime":1611036002732,"results":"104","hashOfConfig":"103"},{"size":2393,"mtime":1617955626285,"results":"105","hashOfConfig":"103"},{"size":2521,"mtime":1617952408073,"results":"106","hashOfConfig":"103"},{"size":6483,"mtime":1616475606541,"results":"107","hashOfConfig":"103"},{"size":997,"mtime":1615964214432,"results":"108","hashOfConfig":"103"},{"size":341,"mtime":1617930324955,"results":"109","hashOfConfig":"103"},{"size":2743,"mtime":1618282503198,"results":"110","hashOfConfig":"103"},{"size":410,"mtime":1616232271503,"results":"111","hashOfConfig":"103"},{"size":1874,"mtime":1618301947326,"results":"112","hashOfConfig":"103"},{"size":5695,"mtime":1617942380415,"results":"113","hashOfConfig":"103"},{"size":1704,"mtime":1617778087323,"results":"114","hashOfConfig":"103"},{"size":2933,"mtime":1617952265402,"results":"115","hashOfConfig":"103"},{"size":2428,"mtime":1617952396958,"results":"116","hashOfConfig":"103"},{"size":7768,"mtime":1618302045874,"results":"117","hashOfConfig":"103"},{"size":1324,"mtime":1618205775634,"results":"118","hashOfConfig":"103"},{"size":732,"mtime":1617611066840,"results":"119","hashOfConfig":"103"},{"size":4218,"mtime":1617871151519,"results":"120","hashOfConfig":"103"},{"size":6447,"mtime":1617065942524,"results":"121","hashOfConfig":"103"},{"size":3505,"mtime":1617942423872,"results":"122","hashOfConfig":"103"},{"size":2683,"mtime":1617952237288,"results":"123","hashOfConfig":"103"},{"size":654,"mtime":1615877296950,"results":"124","hashOfConfig":"103"},{"size":486,"mtime":1616236053868,"results":"125","hashOfConfig":"103"},{"size":2608,"mtime":1617955652272,"results":"126","hashOfConfig":"103"},{"size":1240,"mtime":1617695212432,"results":"127","hashOfConfig":"103"},{"size":1927,"mtime":1616548661791,"results":"128","hashOfConfig":"103"},{"size":9759,"mtime":1617942470631,"results":"129","hashOfConfig":"103"},{"size":2651,"mtime":1617955635022,"results":"130","hashOfConfig":"103"},{"size":2436,"mtime":1617952240226,"results":"131","hashOfConfig":"103"},{"size":920,"mtime":1616735288812,"results":"132","hashOfConfig":"103"},{"size":652,"mtime":1616735276373,"results":"133","hashOfConfig":"103"},{"size":764,"mtime":1616059632862,"results":"134","hashOfConfig":"103"},{"size":2609,"mtime":1617955556798,"results":"135","hashOfConfig":"103"},{"size":2693,"mtime":1617676080949,"results":"136","hashOfConfig":"103"},{"size":3670,"mtime":1617066244048,"results":"137","hashOfConfig":"103"},{"size":3414,"mtime":1617942373586,"results":"138","hashOfConfig":"103"},{"size":1302,"mtime":1611016634488,"results":"139","hashOfConfig":"103"},{"size":3444,"mtime":1618289077288,"results":"140","hashOfConfig":"103"},{"size":4009,"mtime":1618295720253,"results":"141","hashOfConfig":"103"},{"size":2492,"mtime":1617874475185,"results":"142","hashOfConfig":"103"},{"size":3425,"mtime":1617065580102,"results":"143","hashOfConfig":"103"},{"size":4327,"mtime":1618301845577,"results":"144","hashOfConfig":"103"},{"size":1691,"mtime":1617693534237,"results":"145","hashOfConfig":"103"},{"size":17432,"mtime":1618302573690,"results":"146","hashOfConfig":"103"},{"size":459,"mtime":1617066391537,"results":"147","hashOfConfig":"103"},{"size":1490,"mtime":1618211718129,"results":"148","hashOfConfig":"103"},{"size":2292,"mtime":1617952428918,"results":"149","hashOfConfig":"103"},{"size":2513,"mtime":1618281466561,"results":"150","hashOfConfig":"103"},{"size":3395,"mtime":1617942576942,"results":"151","hashOfConfig":"103"},{"size":1392,"mtime":1617693219716,"results":"152","hashOfConfig":"103"},{"size":2006,"mtime":1614056265112,"results":"153","hashOfConfig":"103"},{"size":5698,"mtime":1617942455513,"results":"154","hashOfConfig":"103"},{"size":2484,"mtime":1617952460803,"results":"155","hashOfConfig":"103"},{"size":2490,"mtime":1617952413912,"results":"156","hashOfConfig":"103"},{"size":595,"mtime":1617698868099,"results":"157","hashOfConfig":"103"},{"size":6902,"mtime":1617842228304,"results":"158","hashOfConfig":"103"},{"size":1729,"mtime":1618281941189,"results":"159","hashOfConfig":"103"},{"size":1909,"mtime":1616049387277,"results":"160","hashOfConfig":"103"},{"size":2458,"mtime":1617952444674,"results":"161","hashOfConfig":"103"},{"size":2458,"mtime":1617951106927,"results":"162","hashOfConfig":"103"},{"size":2335,"mtime":1617693321590,"results":"163","hashOfConfig":"103"},{"size":2006,"mtime":1618213362403,"results":"164","hashOfConfig":"103"},{"size":3125,"mtime":1618282494051,"results":"165","hashOfConfig":"103"},{"size":2749,"mtime":1618282499666,"results":"166","hashOfConfig":"103"},{"size":1126,"mtime":1617693544733,"results":"167","hashOfConfig":"103"},{"size":943,"mtime":1617610651752,"results":"168","hashOfConfig":"103"},{"size":1702,"mtime":1616224489464,"results":"169","hashOfConfig":"103"},{"size":2840,"mtime":1617952273091,"results":"170","hashOfConfig":"103"},{"size":6208,"mtime":1617697499337,"results":"171","hashOfConfig":"103"},{"size":2329,"mtime":1618209865516,"results":"172","hashOfConfig":"103"},{"size":4681,"mtime":1617698850286,"results":"173","hashOfConfig":"103"},{"size":7919,"mtime":1617696349831,"results":"174","hashOfConfig":"103"},{"size":410,"mtime":1613529006303,"results":"175","hashOfConfig":"103"},{"size":2504,"mtime":1617952435674,"results":"176","hashOfConfig":"103"},{"size":2504,"mtime":1617952388594,"results":"177","hashOfConfig":"103"},{"size":4063,"mtime":1618301849256,"results":"178","hashOfConfig":"103"},{"size":2399,"mtime":1618281817409,"results":"179","hashOfConfig":"103"},{"size":493,"mtime":1617846633259,"results":"180","hashOfConfig":"103"},{"size":453,"mtime":1617842235449,"results":"181","hashOfConfig":"103"},{"size":745,"mtime":1617842272800,"results":"182","hashOfConfig":"103"},{"size":3414,"mtime":1617942394913,"results":"183","hashOfConfig":"103"},{"size":2800,"mtime":1617952245379,"results":"184","hashOfConfig":"103"},{"size":2507,"mtime":1617951093112,"results":"185","hashOfConfig":"103"},{"size":2610,"mtime":1617955639588,"results":"186","hashOfConfig":"103"},{"size":362,"mtime":1608013233748,"results":"187","hashOfConfig":"103"},{"size":1435,"mtime":1618295360219,"results":"188","hashOfConfig":"103"},{"size":1622,"mtime":1616400207822,"results":"189","hashOfConfig":"103"},{"size":2525,"mtime":1617952447991,"results":"190","hashOfConfig":"103"},{"size":3807,"mtime":1618295756094,"results":"191","hashOfConfig":"103"},{"size":2586,"mtime":1617952242868,"results":"192","hashOfConfig":"103"},{"size":9886,"mtime":1617943280280,"results":"193","hashOfConfig":"103"},{"size":9805,"mtime":1618296032749,"results":"194","hashOfConfig":"103"},{"size":5701,"mtime":1617942404191,"results":"195","hashOfConfig":"103"},{"size":2082,"mtime":1618282370571,"results":"196","hashOfConfig":"103"},{"size":1922,"mtime":1617952248511,"results":"197","hashOfConfig":"103"},{"size":1970,"mtime":1617952254615,"results":"198","hashOfConfig":"103"},{"size":1901,"mtime":1617952261013,"results":"199","hashOfConfig":"103"},{"size":2458,"mtime":1617952402469,"results":"200","hashOfConfig":"103"},{"size":2319,"mtime":1617952421240,"results":"201","hashOfConfig":"103"},{"size":2490,"mtime":1617952452122,"results":"202","hashOfConfig":"103"},{"size":936,"mtime":1616394535146,"results":"203","hashOfConfig":"103"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},"12xqqm0",{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"262"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"232"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"275"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"275"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"219"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"295"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"275"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"323"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"275"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"295"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"219"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"262"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"295"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"373"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"295"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"262"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"295"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"408"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"323"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"262"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"295"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js",[],["447","448"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\comVisualHalf\\ComVisualHalf.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTCnt.js",["449"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js",["450"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js",["451"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst SearchFisrtTable = (props) => {\r\n\tconst { firstData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData(firstData);\r\n\t}, [firstData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t\tkey: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tkey: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tkey: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tkey: \"bus\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tkey: \"truck\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tkey: \"motor\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"motorpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"보행자\",\r\n\t\t\tkey: \"totalPerson\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"수(명)\",\r\n\t\t\t\t\tdataIndex: \"person\",\r\n\t\t\t\t\tkey: \"person\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"무단횡단(명)\",\r\n\t\t\t\t\tdataIndex: \"jaywalk\",\r\n\t\t\t\t\tkey: \"jaywalk\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\t// const axiosData = () => {\r\n\t// \tconsole.log(\"count table axios\");\r\n\t// \ttrafficTotalData.some((eachData, index) => {\r\n\t// \t\tconst {\r\n\t// \t\t\trecordTime,\r\n\t// \t\t\ttotalVehicleVolume,\r\n\t// \t\t\ttotalVehicleAvgSpeed,\r\n\t// \t\t\ttotalVehiclePassengerCarUnit,\r\n\t// \t\t\ttotalVehicleSpdVolume,\r\n\t// \t\t\tcarVolume,\r\n\t// \t\t\tcarAvgSpeed,\r\n\t// \t\t\tcarPassengerCarUnit,\r\n\t// \t\t\tcarVehicleRatio,\r\n\t// \t\t\tcarSpdVolume,\r\n\t// \t\t\tmBusVolume,\r\n\t// \t\t\tmBusAvgSpeed,\r\n\t// \t\t\tmBusPassengerCarUnit,\r\n\t// \t\t\tmBusVehicleRatio,\r\n\t// \t\t\tmBusSpdVolume,\r\n\t// \t\t\tmTruckVolume,\r\n\t// \t\t\tmTruckAvgSpeed,\r\n\t// \t\t\tmTruckPassengerCarUnit,\r\n\t// \t\t\tmTruckVehicleRatio,\r\n\t// \t\t\tmTruckSpdVolume,\r\n\t// \t\t\tmotorVolume,\r\n\t// \t\t\tmotorAvgSpeed,\r\n\t// \t\t\tmotorPassengerCarUnit,\r\n\t// \t\t\tmotorVehicleRatio,\r\n\t// \t\t\tmotorSpdVolume,\r\n\t// \t\t\tpedestrianVolume,\r\n\t// \t\t\tjaywalkVolume,\r\n\t// \t\t} = eachData;\r\n\t// \t\tif (recordTime === \"ALL\") {\r\n\t// \t\t\treturn false;\r\n\t// \t\t}\r\n\t// \t\tif (countCol === 6) {\r\n\t// \t\t\treturn true;\r\n\t// \t\t}\r\n\t// \t\tcountCol += 1;\r\n\r\n\t// \t\tlet dataTemp = {};\r\n\r\n\t// \t\tdataTemp[\"key\"] = index + 1;\r\n\t// \t\tdataTemp[\"time\"] = moment(recordTime).format(\"YYYY년 MM월 DD일 HH:mm:ss\");\r\n\r\n\t// \t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t// \t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t// \t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t// \t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"carCount\"] = carVolume;\r\n\t// \t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t// \t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t// \t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t// \t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t// \t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t// \t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t// \t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t// \t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t// \t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t// \t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t// \t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t// \t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t// \t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t// \t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t// \t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t// \t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t// \t\tdataTemp[\"person\"] = pedestrianVolume;\r\n\t// \t\tdataTemp[\"jaywalk\"] = jaywalkVolume;\r\n\r\n\t// \t\tTotalData.push(dataTemp);\r\n\t// \t});\r\n\t// \tsetFirstData(TotalData);\r\n\t// \tsetData(TotalData);\r\n\t// \tsetLoading(false);\r\n\t// \tsetLoadingFirst(false);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{Data.length === 0 ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SearchFisrtTable;\r\n",["452","453"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js",[],["454","455"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StatContainer.js",[],["456","457"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js",["458"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst DLFisrtTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar FristRow;\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tFristRow = true;\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"lane\",\r\n\t\t\twidth: 60,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\tconsole.log(\"count 일간 차선별 1차데이블 parse\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (FristRow) {\r\n\t\t\t\tdataTemp[\"lane\"] = \"전체\";\r\n\t\t\t\tFristRow = false;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"lane\"] = `${laneNumber} 차선`;\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default DLFisrtTable;\r\n",["459","460"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\AvgSpeed.js",["461"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTVehicleRatio.js",["462"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTCnt.js",["463"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst CntLine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"1\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 통행량 parse\");\r\n\t\tvar cntTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordTime,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst Time = moment(recordTime).format(\"HH:mm\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carVolume;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusVolume;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckVolume;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorVolume;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleVolume;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\t\t\tcntTotalData.push(tempCar);\r\n\t\t\tcntTotalData.push(tempBus);\r\n\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\tcntTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\t// xAxis: { type: \"time\" },\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default CntLine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js",["464"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\store\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js",["465","466"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js",["467"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js",["468","469"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js",["470"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\Peak15.js",[],["471","472"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTCnt.js",["473"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"1\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 통행량 그래프 parse\");\r\n\t\tvar cntTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carVolume;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusVolume;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckVolume;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorVolume;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleVolume;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tcntTotalData.push(tempCar);\r\n\t\t\tcntTotalData.push(tempBus);\r\n\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\tcntTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlegend: true,\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTCnt;\r\n",["474","475"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js",["476"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js",["477"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTPCU = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 PCU 그래프 parse\");\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tlet tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehiclePassengerCarUnit;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlegend: true,\r\n\t\tseriesField: \"key\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTPCU;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js",["478"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst PCU = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 차선별 PCU parse\");\r\n\t\tvar PCUCar = [];\r\n\t\tvar PCUBus = [];\r\n\t\tvar PCUTruck = [];\r\n\t\tvar PCUMotor = [];\r\n\t\tvar PCUTotalData = [];\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\r\n\t\t\ttempCar[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\t\t\tPCUCar.push(tempCar);\r\n\t\t\tPCUBus.push(tempBus);\r\n\t\t\tPCUTruck.push(tempTruck);\r\n\t\t\tPCUMotor.push(tempMotor);\r\n\t\t});\r\n\t\tPCUTotalData = PCUCar.concat(PCUBus.concat(PCUTruck.concat(PCUMotor)));\r\n\t\tsetData(PCUTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"laneNum\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default PCU;\r\n",["479","480"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\date.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\index.js",[],["481","482"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js",["483"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTAvgSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 평균속도 그래프 parse\");\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleAvgSpeed;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tseriesField: \"key\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTAvgSpeed;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js",["484","485"],"import React from \"react\";\r\nimport { Form, Input, Button, message, Card, Typography } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nconst LoginCard = (props) => {\r\n\tconst { baseURL, setLoggedIn } = props;\r\n\tconst { Title } = Typography;\r\n\r\n\tconst login = (values) => {\r\n\t\tconst { username, password } = values;\r\n\t\tconsole.log(username, password);\r\n\r\n\t\taxios\r\n\t\t\t.post(\r\n\t\t\t\t`${baseURL}/auth/tokens`,\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tusername,\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t}),\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tconst { jwt } = res.data;\r\n\t\t\t\twindow.localStorage.setItem(\"token\", jwt);\r\n\t\t\t\twindow.localStorage.setItem(\"username\", username);\r\n\t\t\t\tgetUserInfo();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tmessage.error(\"로그인 실패\");\r\n\t\t\t});\r\n\t};\r\n\tconst getUserInfo = () => {\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}/users/${localStorage.getItem(\"username\")}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\twindow.localStorage.setItem(\"affiliate\", res.data.affiliate);\r\n\t\t\t\tsetLoggedIn(true);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Form\r\n\t\t\t\tname=\"normal_login\"\r\n\t\t\t\tclassName=\"login-form\"\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tremember: true,\r\n\t\t\t\t}}\r\n\t\t\t\tonFinish={login}\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: \"아이디를 입력하세요\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tprefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n\t\t\t\t\t\tplaceholder=\"아이디\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: \"비밀번호를 입력하세요\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tprefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"비밀번호\"\r\n\t\t\t\t\t\tautoComplete=\"true\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\thtmlType=\"submit\"\r\n\t\t\t\t\t\tclassName=\"login-form-button\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t로그인\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(LoginCard);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js",["486"],"import React, { useState, useEffect } from \"react\";\r\nimport { DatePicker, ConfigProvider, Typography } from \"antd\";\r\n// import locale from \"antd/lib/locale/ko_KR\";\r\nimport locale from \"antd/es/locale/ko_KR\";\r\nimport \"moment/locale/ko\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst MyDatePicker = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tsetTempStartDate,\r\n\t\tsetTempEndTime,\r\n\t\tdayStartDate,\r\n\t\tdayEndTime,\r\n\t\tweekStartDate,\r\n\t\tweekEndTime,\r\n\t\tmonthStartDate,\r\n\t\tmonthEndTime,\r\n\t\tsearchStartDate,\r\n\t\tsearchEndTime,\r\n\t} = props;\r\n\tconst { RangePicker } = DatePicker;\r\n\tconst { Text } = Typography;\r\n\tconst [week, setWeek] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (period === \"WEEK\" && weekStartDate) {\r\n\t\t\tsetTempStartDate(weekStartDate);\r\n\t\t\tsetTempEndTime(weekEndTime);\r\n\t\t} else if (period === \"MONTH\" && monthStartDate) {\r\n\t\t\tsetTempStartDate(monthStartDate);\r\n\t\t\tsetTempEndTime(monthEndTime);\r\n\t\t} else if (period === \"SEARCH\" && searchStartDate) {\r\n\t\t\tsetTempStartDate(searchStartDate);\r\n\t\t\tsetTempEndTime(searchEndTime);\r\n\t\t} else if (period === \"DAY\" && dayStartDate) {\r\n\t\t\tsetTempStartDate(dayStartDate);\r\n\t\t\tsetTempEndTime(dayEndTime);\r\n\t\t} else {\r\n\t\t\treturn () => {\r\n\t\t\t\tsetTempStartDate(\"\");\r\n\t\t\t\tsetTempEndTime(\"\");\r\n\t\t\t};\r\n\t\t}\r\n\t}, [period]);\r\n\r\n\tvar defaultDay = dayStartDate && moment(dayStartDate);\r\n\tvar defaultWeek = weekStartDate && moment(weekStartDate);\r\n\tvar defaultMonth = monthStartDate && moment(monthStartDate, \"YYYY-MM\");\r\n\tvar defaultSearch =\r\n\t\tsearchStartDate || searchEndTime\r\n\t\t\t? [moment(searchStartDate), moment(searchEndTime)]\r\n\t\t\t: null;\r\n\r\n\tmoment.locale(\"ko\", {\r\n\t\tweek: {\r\n\t\t\tdow: 7,\r\n\t\t},\r\n\t});\r\n\r\n\tconst onChange = (date, dateString) => {\r\n\t\tvar startDate = \"\";\r\n\t\tvar endDate = \"\";\r\n\t\tif (period === \"WEEK\") {\r\n\t\t\tstartDate = moment(date).startOf(\"week\").format(\"YYYY-MM-DD\");\r\n\t\t\tendDate = moment(date).endOf(\"week\").format(\"YYYY-MM-DD\");\r\n\t\t\tsetWeek([startDate, endDate]);\r\n\t\t} else if (period === \"MONTH\") {\r\n\t\t\tstartDate = moment(date).startOf(\"month\").format(\"YYYY-MM-DD\");\r\n\t\t\tendDate = moment(date).endOf(\"month\").format(\"YYYY-MM-DD\");\r\n\t\t} else if (period === \"SEARCH\") {\r\n\t\t\tstartDate = dateString[0];\r\n\t\t\tendDate = dateString[1];\r\n\t\t} else {\r\n\t\t\tstartDate = endDate = dateString;\r\n\t\t}\r\n\t\tsetTempStartDate(startDate);\r\n\t\tsetTempEndTime(endDate);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ConfigProvider locale={locale}>\r\n\t\t\t{period === \"WEEK\" ? (\r\n\t\t\t\t<div className=\"week-description\">\r\n\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tpicker=\"week\"\r\n\t\t\t\t\t\tplaceholder=\"주 선택\"\r\n\t\t\t\t\t\tdefaultValue={defaultWeek}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{week[1] && (\r\n\t\t\t\t\t\t<Text type=\"secondary\" style={{ marginLeft: 10, marginTop: 5 }}>\r\n\t\t\t\t\t\t\t{week[0]} ~ {week[1]}\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t) : period === \"MONTH\" ? (\r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tpicker=\"month\"\r\n\t\t\t\t\tplaceholder=\"월 선택\"\r\n\t\t\t\t\tdefaultValue={defaultMonth}\r\n\t\t\t\t/>\r\n\t\t\t) : period === \"SEARCH\" ? (\r\n\t\t\t\t<RangePicker onChange={onChange} defaultValue={defaultSearch} />\r\n\t\t\t) : (\r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tplaceholder=\"날짜 선택\"\r\n\t\t\t\t\tdefaultValue={defaultDay}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</ConfigProvider>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdayStartDate: state.date.dayStartDate,\r\n\t\tdayEndTime: state.date.dayEndTime,\r\n\t\tweekStartDate: state.date.weekStartDate,\r\n\t\tweekEndTime: state.date.weekEndTime,\r\n\t\tmonthStartDate: state.date.monthStartDate,\r\n\t\tmonthEndTime: state.date.monthEndTime,\r\n\t\tsearchStartDate: state.date.searchStartDate,\r\n\t\tsearchEndTime: state.date.searchEndTime,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(MyDatePicker);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js",["487"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst WTSecondTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentLaneNum === 0) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseData();\r\n\t\t}\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t\tkey: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tkey: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"totalDayNightRatio\",\r\n\t\t\t\t\tkey: \"totalNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"totalPHF\",\r\n\t\t\t\t\tkey: \"totalPHF\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"totalPeekHourCnt\",\r\n\t\t\t\t\tkey: \"totalPeekHourCnt\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"집중률\",\r\n\t\t\t\t\tdataIndex: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t\tkey: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"차종별 주야율\",\r\n\t\t\tdataIndex: \"TypeDayNightRatio\",\r\n\t\t\tkey: \"TypeNightRatio\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\t\tdataIndex: \"carDayNightRatio\",\r\n\t\t\t\t\tkey: \"carNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"버스\",\r\n\t\t\t\t\tdataIndex: \"busDayNightRatio\",\r\n\t\t\t\t\tkey: \"busNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\t\tdataIndex: \"truckDayNightRatio\",\r\n\t\t\t\t\tkey: \"truckNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\t\tdataIndex: \"motorDayNightRatio\",\r\n\t\t\t\t\tkey: \"motorNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\tconst parseData = () => {\r\n\t\tconsole.log(\"count table axios\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\ttotalVehicleDayNightRatio,\r\n\t\t\t\ttotalVehiclePeakHourFactor,\r\n\t\t\t\ttotalVehiclePeakHourConcentrationRatio,\r\n\t\t\t\ttotalVehiclePeakHourFlowRate,\r\n\t\t\t\tcarDayNightRatio,\r\n\t\t\t\tmBusDayNightRatio,\r\n\t\t\t\tmTruckDayNightRatio,\r\n\t\t\t\tmotorDayNightRatio,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tdataTemp[\"time\"] = WeekKey[weekOption];\r\n\t\t\tdataTemp[\"totalDayNightRatio\"] = totalVehicleDayNightRatio;\r\n\t\t\tdataTemp[\"totalPHF\"] = totalVehiclePeakHourFactor;\r\n\t\t\tdataTemp[\"totalPeekHourCnt\"] = totalVehiclePeakHourFlowRate;\r\n\t\t\tdataTemp[\r\n\t\t\t\t\"totalVehiclePeakHourConcentrationRatio\"\r\n\t\t\t] = totalVehiclePeakHourConcentrationRatio;\r\n\r\n\t\t\tdataTemp[\"carDayNightRatio\"] = carDayNightRatio;\r\n\t\t\tdataTemp[\"busDayNightRatio\"] = mBusDayNightRatio;\r\n\t\t\tdataTemp[\"truckDayNightRatio\"] = mTruckDayNightRatio;\r\n\t\t\tdataTemp[\"motorDayNightRatio\"] = motorDayNightRatio;\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTSecondTable;\r\n",["488","489"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\pieChart\\index.js",["490","491"],"import React, { useEffect } from \"react\";\r\nimport { Pie } from \"@ant-design/charts\";\r\nconst DemoPie = () => {\r\n\tlet ref;\r\n\tvar data = [\r\n\t\t{\r\n\t\t\ttype: \"分类一\",\r\n\t\t\tvalue: 27,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: \"分类二\",\r\n\t\t\tvalue: 25,\r\n\t\t},\r\n\t\t// {\r\n\t\t// \ttype: \"分类三\",\r\n\t\t// \tvalue: 18,\r\n\t\t// },\r\n\t\t// {\r\n\t\t// \ttype: \"分类四\",\r\n\t\t// \tvalue: 15,\r\n\t\t// },\r\n\t\t// {\r\n\t\t// \ttype: \"分类五\",\r\n\t\t// \tvalue: 10,\r\n\t\t// },\r\n\t\t// {\r\n\t\t// \ttype: \"其他\",\r\n\t\t// \tvalue: 5,\r\n\t\t// },\r\n\t];\r\n\tvar config = {\r\n\t\tappendPadding: 10,\r\n\t\tdata: data,\r\n\t\tangleField: \"value\",\r\n\t\tcolorField: \"type\",\r\n\t\tradius: 0.6,\r\n\t\tlegend: false,\r\n\t\tlabel: {\r\n\t\t\ttype: \"inner\",\r\n\t\t\toffset: \"-30%\",\r\n\t\t\tcontent: \"{name}\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfontSize: 12,\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tstate: {\r\n\t\t\tactive: {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tlineWidth: 0,\r\n\t\t\t\t\tfillOpacity: 0.65,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tinteractions: [{ type: \"element-selected\" }, { type: \"element-active\" }],\r\n\t};\r\n\t// useEffect(() => {\r\n\t// \tif (ref) {\r\n\t// \t\tref.setState(\"active\", (data) => data.type === \"分类一\");\r\n\t// \t\tref.setState(\r\n\t// \t\t\t\"selected\",\r\n\t// \t\t\t(data) => data.type === \"分类一\" || data.type === \"分类二\"\r\n\t// \t\t);\r\n\t// \t}\r\n\t// }, []);\r\n\treturn <Pie {...config} chartRef={(chartRef) => (ref = chartRef)} />;\r\n};\r\nexport default DemoPie;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js",["492"],"import React, { useEffect, useState } from \"react\";\r\nimport { Spin, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nimport VisualizationCard from \"../../molecules/genVisualizationCard/GenVisualizationCard\";\r\nimport VehicleRatio from \"../../charts/doughnutChart/VehicleRatio\";\r\n// import OverSpeedTinyBar from \"../../charts/tinyBarChart/overSpeed\";\r\nimport OverSpeedBar from \"../../charts/barChart/GenOverSpeed\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst StreamingGeneralVisualization = (props) => {\r\n\tconst {\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcurrentTime,\r\n\t\trealtimeCamCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t} = props;\r\n\r\n\tconst [isLoadingTraffic, setLoadingTraffic] = useState(true);\r\n\tconst [trafficData, setTrafficData] = useState([]);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingTraffic(true);\r\n\t\tsetEmptyData(false);\r\n\t\tsetTrafficData([]);\r\n\t\tgetTrafficData();\r\n\t}, [realtimeCamCode, startDate, endTime]);\r\n\r\n\tconst getTrafficData = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${trafficURL}/daily?camCode=${realtimeCamCode}&startDate=${startDate}&endTime=${endTime} ${currentTime}&axis=time&laneNumber=0`,\r\n\t\t\t\t// `${baseURL}/statistics/road-traffic/daily?camCode=0004&startDate=2020-03-15&endTime=2020-03-15 23:59:59&axis=time&laneNumber=0`,\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetTrafficData(res.data);\r\n\t\t\t\t\tsetLoadingTraffic(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetLoadingTraffic(true);\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t\tif (err.response.status === 500) {\r\n\t\t\t\t\tmessage.warning(\"서버에 문제가 있습니다\");\r\n\t\t\t\t}\r\n\t\t\t\tsetLoadingTraffic(true);\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"general-graph-layout\">\r\n\t\t\t{!isEmptyData ? (\r\n\t\t\t\tisLoadingTraffic ? (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\ttitle=\"차종별 통행량(대) \"\r\n\t\t\t\t\t\t\tchart={\r\n\t\t\t\t\t\t\t\t<VehicleRatio trafficData={trafficData} page=\"STREAMING\" />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\ttitle=\"차종별 과속차량(대) \"\r\n\t\t\t\t\t\t\tchart={\r\n\t\t\t\t\t\t\t\t<OverSpeedBar trafficData={trafficData} page=\"STREAMING\" />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t<VisualizationCard title=\"차종별 통행량(대)\" />\r\n\t\t\t\t\t<VisualizationCard title=\"차종별 과속차량(대)\" />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationCodeInfo: () => {\r\n\t\t\tdispatch(actions.getLocationCode());\r\n\t\t},\r\n\t\tgetBaseURL: () => {\r\n\t\t\tdispatch(actions.getURL());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(StreamingGeneralVisualization);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js",["493","494"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js",["495"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js",["496","497"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\searchDownload\\SearchDownloadPage.js",["498","499"],"import React, { useState } from \"react\";\r\nimport { Layout, Spin } from \"antd\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport SearchCollapsedTable from \"../../organisms/searchCollapsedTable/SearchCollapsedTable\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst SearchDownloadPage = (props) => {\r\n\tconst { setLoggedIn, isMaster } = props;\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [count, setCount] = useState(false);\r\n\r\n\tconst { Content } = Layout;\r\n\r\n\treturn (\r\n\t\t<div className=\"page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"기간 별 데이터 조회\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"SEARCH\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\t<SearchCollapsedTable startDate={startDate} endTime={endTime} />\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchDownloadPage;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js",["500","501","502","503","504"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\userInfo.js",[],["505","506"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StreamingContainer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MonthPeakTime.js",["507"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst MonthPeakTime = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"7\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst { recordDate, totalVehiclePeak15MinuteTime } = TrafficData;\r\n\t\t\tlet temp = {};\r\n\t\t\ttemp[\"date\"] = moment(recordDate).format(\"MM-DD\");\r\n\t\t\ttemp[\"value\"] = new Date(totalVehiclePeak15MinuteTime).getHours();\r\n\t\t\ttemp[\"test\"] = new Date(totalVehiclePeak15MinuteTime).getMinutes();\r\n\t\t\tTotalData.push(temp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tconsole.log(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"date\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: false,\r\n\r\n\t\tlabel: {\r\n\t\t\tformatter: function formatter(v) {\r\n\t\t\t\tlet timeStr = v[\"value\"] + \":\" + v[\"test\"];\r\n\t\t\t\treturn \"\"\r\n\t\t\t\t\t.concat(timeStr)\r\n\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t},\r\n\t\tpoint: {\r\n\t\t\tsize: 5,\r\n\t\t\tshape: \"diamond\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfill: \"white\",\r\n\t\t\t\tstroke: \"#5B8FF9\",\r\n\t\t\t\tlineWidth: 2,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: false,\r\n\r\n\t\tstate: {\r\n\t\t\tactive: {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tshadowColor: \"yellow\",\r\n\t\t\t\t\tshadowBlur: 4,\r\n\t\t\t\t\tstroke: \"transparent\",\r\n\t\t\t\t\tfill: \"red\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\ttheme: {\r\n\t\t\tgeometries: {\r\n\t\t\t\tpoint: {\r\n\t\t\t\t\tdiamond: {\r\n\t\t\t\t\t\tactive: {\r\n\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\tshadowColor: \"#FCEBB9\",\r\n\t\t\t\t\t\t\t\tshadowBlur: 2,\r\n\t\t\t\t\t\t\t\tstroke: \"#F6BD16\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tinteractions: [{ type: \"marker-active\" }],\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MonthPeakTime;\r\n",["508","509"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js",["510"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js",["511","512"],"import React, { useState, useEffect } from \"react\";\r\nimport { Spin, Typography, message } from \"antd\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../redux/actions\";\r\n\r\nimport LaneTableCard from \"../../../molecules/tableCard/LaneTableCard\";\r\nimport LaneDataVisualization from \"../../../molecules/dataVisualization/LaneDataVisualization\";\r\nimport \"../style.less\";\r\n\r\nconst LaneVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcameraCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\tadditionalFilter,\r\n\t} = props;\r\n\tconst { Text } = Typography;\r\n\r\n\tconst [activeVisualKey, setActiveVisualKey] = useState(\"1\");\r\n\r\n\tconst [isLoadingTrafficTotal, setLoadingTrafficTotal] = useState(true);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [trafficTotalData, setTrafficTotalData] = useState([]);\r\n\r\n\tconst periodURL =\r\n\t\tperiod === \"DAY\" ? \"/daily\" : period === \"WEEK\" ? \"/weekly\" : \"/monthly\";\r\n\r\n\tconst currentURL =\r\n\t\tperiod === \"DAY\"\r\n\t\t\t? `${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane`\r\n\t\t\t: `${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane&weekOption=${additionalFilter}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEmptyData(false);\r\n\t\tsetLoadingTrafficTotal(true);\r\n\t\tsetTrafficTotalData([]);\r\n\t\tgetTrafficTotalData();\r\n\t}, [cameraCode, startDate, endTime, additionalFilter]);\r\n\r\n\tconst getTrafficTotalData = () => {\r\n\t\taxios\r\n\t\t\t.get(`${currentURL}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetTrafficTotalData(res.data);\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetLoadingTrafficTotal(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t\tmessage.warning(\"해당 기간 차선 별 데이터가 없습니다\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t\tmessage.warning(\"해당 기간 차선 별 데이터가 없습니다\");\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isEmptyData ? (\r\n\t\t\t\tisLoadingTrafficTotal ? (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<LaneDataVisualization\r\n\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\tsetActiveVisualKey={setActiveVisualKey}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<LaneTableCard\r\n\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\ttableKey=\"first\"\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tcamLanes: state.locationCode.camLanes,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationCodeInfo: () => {\r\n\t\t\tdispatch(actions.getLocationCode());\r\n\t\t},\r\n\t\tgetBaseURL: () => {\r\n\t\t\tdispatch(actions.getURL());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LaneVisualization);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\header\\index.js",["513"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchComparison\\SearchComparison.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js",["514"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WeekPeakTime.js",["515","516"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTVehicleRatio.js",["517"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\accountDescription\\AccountDescriptionFrom.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\TimeDataVisualization.js",["518"],"import React, { useState } from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport DayCntLineChart from \"../../charts/lineChart/DTCnt\";\r\nimport DayPCULineChart from \"../../charts/lineChart/DTPCU\";\r\nimport DayVehicleRatio from \"../../charts/lineChart/DTVehicleRatio\";\r\nimport DayAvgSpeed from \"../../charts/lineChart/DTAvgSpeed\";\r\nimport DayOverSpeed from \"../../charts/lineChart/DTOverSpeed\";\r\nimport Peak15 from \"../../charts/statisticText/Peak15\";\r\nimport PeakHourFlowRate from \"../../charts/statisticText/PeakHourFlowRate\";\r\nimport DayPHF from \"../../charts/statisticText/PHF\";\r\nimport DayConcentrationRatio from \"../../charts/liquidChart/PeakRatio\";\r\nimport BidirectionalBar from \"../../charts/bidirectionalBar/DayNight\";\r\nimport PedestriansDashLine from \"../../charts/dashLineChart/DayPedestrians\";\r\n\r\nimport WeekCnt from \"../../charts/lineChart/WTCnt\";\r\nimport WeekPCU from \"../../charts/lineChart/WTPCU\";\r\nimport WeekAvgSpeed from \"../../charts/lineChart/WTAvgSpeed\";\r\nimport WeekOverSpeed from \"../../charts/lineChart/WTOverSpeed\";\r\nimport WeekVehicleRatio from \"../../charts/barChart/WTVehicleRatio\";\r\nimport WeekPeakTime from \"../../charts/lineChart/WeekPeakTime\";\r\n\r\nimport WeekMonthFlowRate from \"../../charts/barChart/WMFlowRate\";\r\nimport WeekMonthPHF from \"../../charts/barChart/WTPHF\";\r\nimport WeekMonthConcentrationRatio from \"../../charts/barChart/WTConcentrationRatio\";\r\nimport WeekMonthPedstrians from \"../../charts/dashLineChart/WeekPedestrians\";\r\n\r\nimport MonthCnt from \"../../charts/lineChart/MTCnt\";\r\nimport MonthPCU from \"../../charts/lineChart/MTPCU\";\r\nimport MonthVehicleRatio from \"../../charts/lineChart/MTVehicleRatio\";\r\nimport MonthAvgSpeed from \"../../charts/lineChart/MTAvgSpeed\";\r\nimport MonthOverSpeed from \"../../charts/lineChart/MTOverSpeed\";\r\nimport MonthPeakTime from \"../../charts/lineChart/MonthPeakTime\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst TimeDataVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tcurrentLaneNum,\r\n\t\tactiveVisualKey,\r\n\t\tsetActiveVisualKey,\r\n\t\ttrafficTotalData,\r\n\t} = props;\r\n\r\n\tconst { TabPane } = Tabs;\r\n\r\n\tconst callback = (key) => {\r\n\t\tsetActiveVisualKey(key);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Tabs\r\n\t\t\tdefaultActiveKey=\"1\"\r\n\t\t\tactiveKey={activeVisualKey}\r\n\t\t\tonChange={callback}\r\n\t\t\ttabPosition=\"right\"\r\n\t\t>\r\n\t\t\t<TabPane tab=\"교통량\" key=\"1\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayCntLineChart\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekCnt\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthCnt\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"PCU\" key=\"2\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayPCULineChart\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekPCU\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthPCU\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"차종비율\" key=\"3\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayVehicleRatio\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekVehicleRatio\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthVehicleRatio\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"평균속도\" key=\"4\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayAvgSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekAvgSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthAvgSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"과속차량\" key=\"5\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayOverSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekOverSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthOverSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t{parseInt(currentLaneNum) === 0 ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<TabPane tab=\"주야율\" key=\"6\">\r\n\t\t\t\t\t\t<BidirectionalBar\r\n\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"첨두시간\" key=\"7\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<Peak15\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t\t\t<WeekPeakTime\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<MonthPeakTime\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"첨두유율\" key=\"8\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<PeakHourFlowRate\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthFlowRate\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"PHF\" key=\"9\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<DayPHF\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthPHF\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"집중률\" key=\"10\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<DayConcentrationRatio\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthConcentrationRatio\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"무단횡단\" key=\"11\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<PedestriansDashLine\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthPedstrians\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\tsetActiveVisualKey(\"1\")\r\n\t\t\t)}\r\n\t\t</Tabs>\r\n\t);\r\n};\r\n\r\nexport default TimeDataVisualization;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js",["519"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\dataComparison\\DataComparisonPage.js",["520","521"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js",["522"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport moment from \"moment\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst OverSpeedCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 과속 parse\");\r\n\t\tvar cntTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleSpdVolume;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tcntTotalData.push(tempCar);\r\n\t\t\tcntTotalData.push(tempBus);\r\n\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\tcntTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default OverSpeedCnt;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\bidirectionalBar\\DayNight.js",["523"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js",["524"],"import React from \"react\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Menu, Dropdown, Typography, Divider, Avatar, Button } from \"antd\";\r\nimport {\r\n\tIdcardOutlined,\r\n\tUserOutlined,\r\n\tExportOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst MyAvatar = (props) => {\r\n\tconst { baseURL, setLoggedIn, isMaster } = props;\r\n\tconst { Text } = Typography;\r\n\tconst HandleLogout = () => {\r\n\t\taxios\r\n\t\t\t.delete(`${baseURL}/auth/tokens`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tconsole.log(\"check delete\");\r\n\t\t\t\twindow.localStorage.clear();\r\n\t\t\t\tsetLoggedIn(false);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\tconst dropdownContent = (\r\n\t\t<Menu style={{ width: 190 }}>\r\n\t\t\t<Menu.Item>\r\n\t\t\t\t<Text type=\"secondary\" strong style={{ marginBottom: 6 }}>\r\n\t\t\t\t\t접속 계정:{localStorage.getItem(\"username\")}\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text type=\"secondary\" strong>\r\n\t\t\t\t\t소속: {localStorage.getItem(\"affiliate\")}\r\n\t\t\t\t</Text>\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Divider />\r\n\t\t\t{isMaster && (\r\n\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t<Link to=\"/signup\" style={{ color: \"#595c97\" }}>\r\n\t\t\t\t\t\t<IdcardOutlined />\r\n\t\t\t\t\t\t계정 발급\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t)}\r\n\r\n\t\t\t<Menu.Item>\r\n\t\t\t\t<Link to=\"/password\" style={{ color: \"#595c97\" }}>\r\n\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t비밀번호 변경\r\n\t\t\t\t</Link>\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Divider />\r\n\t\t\t<Menu.Item>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\ttype=\"link\"\r\n\t\t\t\t\tstyle={{ color: \"#595c97\" }}\r\n\t\t\t\t\tonClick={HandleLogout}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ExportOutlined />\r\n\t\t\t\t\t로그아웃\r\n\t\t\t\t</Button>\r\n\t\t\t</Menu.Item>\r\n\t\t</Menu>\r\n\t);\r\n\treturn (\r\n\t\t<Dropdown\r\n\t\t\toverlay={dropdownContent}\r\n\t\t\ttrigger={[\"click\"]}\r\n\t\t\tplacement=\"bottomRight\"\r\n\t\t\tarrow\r\n\t\t>\r\n\t\t\t<Avatar\r\n\t\t\t\tshape=\"square\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundColor: \"#e4e9f0\",\r\n\t\t\t\t\tverticalAlign: \"middle\",\r\n\t\t\t\t}}\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t>\r\n\t\t\t\t{localStorage.getItem(\"username\").slice(0, 1)}\r\n\t\t\t</Avatar>\r\n\t\t</Dropdown>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t};\r\n};\r\nexport default connect(mapStateToProps)(MyAvatar);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js",["525","526"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Spin } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport GeneralVisualization from \"../../organisms/generalVisualization/GeneralVisualization\";\r\nimport TimeStatistic from \"../../organisms/visualStatistic/timeStat/TimeStat\";\r\nimport LaneStatistic from \"../../organisms/visualStatistic/laneStat/LaneStat\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst DayStatPage = (props) => {\r\n\tconst { setLoggedIn, isMaster } = props;\r\n\tconst { Content } = Layout;\r\n\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [count, setCount] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className=\"statistic-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"통계 분석\", \"일간 별\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\tcount ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<div className=\"statistic-general-visualization\">\r\n\t\t\t\t\t\t\t\t\t\t<GeneralVisualization\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\trefresh={false}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{timeClassification ? (\r\n\t\t\t\t\t\t\t\t\t\t<TimeStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<LaneStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcity: state.location.city,\r\n\t\tdistrict: state.location.district,\r\n\t\troad: state.location.road,\r\n\t\tspot: state.location.spot,\r\n\t\tcamera: state.location.camera,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationInfo: () => {\r\n\t\t\tdispatch(actions.getLocation());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DayStatPage);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\PasswordPage.js",["527"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\login\\LoginPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\tinyBarChart\\overSpeed.js",["528"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\dashLineChart\\WeekPedestrians.js",["529"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js",[],["530","531"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js",["532","533"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js",["534"],"import React, { useState, useEffect } from \"react\";\r\nimport { Cascader } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nconst MyCascader = (props) => {\r\n\tconst {\r\n\t\tsize,\r\n\t\tsetSelectedLocation,\r\n\t\tsetSelectedLocationCode,\r\n\t\tdisplayLocation = true,\r\n\t\tsetLocationChange,\r\n\t\tbaseURL,\r\n\t\tisDisabled,\r\n\t\tplaceholdertxt,\r\n\t} = props;\r\n\r\n\tconst [parsedOptions, setParsedOptions] = useState([]);\r\n\tconst [camAddress, setCamAddress] = useState({});\r\n\tconst [camLanes, setCamLanes] = useState({});\r\n\r\n\tconst currentURL = \"/locations\";\r\n\tvar locationOptionsParse = [];\r\n\tvar cameraAddress = {};\r\n\tvar cameraLanes = {};\r\n\r\n\tif (props.city === \"\" || displayLocation === false) {\r\n\t\tvar defaultOption = [];\r\n\t} else {\r\n\t\tdefaultOption = [\r\n\t\t\tprops.city,\r\n\t\t\tprops.district,\r\n\t\t\tprops.road,\r\n\t\t\tprops.spot,\r\n\t\t\tprops.camera,\r\n\t\t];\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tgetOptions();\r\n\t}, []);\r\n\r\n\tconst getOptions = () => {\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}${currentURL}/cities`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tres.data.forEach((cityInfo) => {\r\n\t\t\t\t\tconst { cityCode, cityName } = cityInfo;\r\n\t\t\t\t\tconst cityTemp = {};\r\n\t\t\t\t\tcityTemp[\"value\"] = cityCode;\r\n\t\t\t\t\tcityTemp[\"label\"] = cityName;\r\n\t\t\t\t\tcityTemp[\"children\"] = [];\r\n\t\t\t\t\tlocationOptionsParse.push(cityTemp);\r\n\t\t\t\t\tgetDisricts(cityCode);\r\n\t\t\t\t\tsetParsedOptions(locationOptionsParse);\r\n\t\t\t\t\tsetCamAddress(cameraAddress);\r\n\t\t\t\t\tsetCamLanes(cameraLanes);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\t// }\r\n\t};\r\n\tconst getDisricts = (cityCode) => {\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}${currentURL}/${cityCode}/districts`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tres.data.forEach((districtInfo) => {\r\n\t\t\t\t\tconst districtTemp = {};\r\n\r\n\t\t\t\t\tconst { districtCode, districtName } = districtInfo;\r\n\t\t\t\t\tdistrictTemp[\"value\"] = districtCode;\r\n\t\t\t\t\tdistrictTemp[\"label\"] = districtName;\r\n\t\t\t\t\tdistrictTemp[\"children\"] = [];\r\n\t\t\t\t\tconst lastCityIdx = locationOptionsParse.length - 1;\r\n\t\t\t\t\tlocationOptionsParse[lastCityIdx][\"children\"].push(districtTemp);\r\n\t\t\t\t\tconst lastDistrictIdx =\r\n\t\t\t\t\t\tlocationOptionsParse[lastCityIdx][\"children\"].length - 1;\r\n\t\t\t\t\tconst currentRoads = [];\r\n\t\t\t\t\tgetRoads(\r\n\t\t\t\t\t\tcityCode,\r\n\t\t\t\t\t\tdistrictCode,\r\n\t\t\t\t\t\tlastCityIdx,\r\n\t\t\t\t\t\tlastDistrictIdx,\r\n\t\t\t\t\t\tdistrictTemp,\r\n\t\t\t\t\t\tcurrentRoads\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\tconst getRoads = (cityCode, districtCode, lastCityIdx, lastDistrictIdx) => {\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}${currentURL}/${cityCode}/${districtCode}/roads`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tres.data.forEach((roadInfo) => {\r\n\t\t\t\t\tconst { roadCode, roadName } = roadInfo;\r\n\t\t\t\t\tconst roadTemp = {};\r\n\t\t\t\t\troadTemp[\"value\"] = roadCode;\r\n\t\t\t\t\troadTemp[\"label\"] = roadName;\r\n\t\t\t\t\troadTemp[\"children\"] = [];\r\n\t\t\t\t\tlocationOptionsParse[lastCityIdx][\"children\"][lastDistrictIdx][\r\n\t\t\t\t\t\t\"children\"\r\n\t\t\t\t\t].push(roadTemp);\r\n\t\t\t\t\tconst lastRoadIdx =\r\n\t\t\t\t\t\tlocationOptionsParse[lastCityIdx][\"children\"][lastDistrictIdx][\r\n\t\t\t\t\t\t\t\"children\"\r\n\t\t\t\t\t\t].length - 1;\r\n\t\t\t\t\tconst currentSpots = [];\r\n\r\n\t\t\t\t\tgetSpots(\r\n\t\t\t\t\t\tcityCode,\r\n\t\t\t\t\t\tdistrictCode,\r\n\t\t\t\t\t\troadCode,\r\n\t\t\t\t\t\tlastCityIdx,\r\n\t\t\t\t\t\tlastDistrictIdx,\r\n\t\t\t\t\t\tlastRoadIdx,\r\n\t\t\t\t\t\tcurrentSpots\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\tconst getSpots = (\r\n\t\tcityCode,\r\n\t\tdistrictCode,\r\n\t\troadCode,\r\n\t\tlastCityIdx,\r\n\t\tlastDistrictIdx,\r\n\t\tlastRoadIdx\r\n\t) => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${currentURL}/${cityCode}/${districtCode}/${roadCode}/spots`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tres.data.forEach((spotInfo) => {\r\n\t\t\t\t\tconst { spotCode, spotName } = spotInfo;\r\n\t\t\t\t\tconst spotTemp = {};\r\n\t\t\t\t\tspotTemp[\"value\"] = spotCode;\r\n\t\t\t\t\tspotTemp[\"label\"] = spotName;\r\n\t\t\t\t\tspotTemp[\"children\"] = [];\r\n\r\n\t\t\t\t\tlocationOptionsParse[lastCityIdx][\"children\"][lastDistrictIdx][\r\n\t\t\t\t\t\t\"children\"\r\n\t\t\t\t\t][lastRoadIdx][\"children\"].push(spotTemp);\r\n\t\t\t\t\tconst lastSpotIdx =\r\n\t\t\t\t\t\tlocationOptionsParse[lastCityIdx][\"children\"][lastDistrictIdx][\r\n\t\t\t\t\t\t\t\"children\"\r\n\t\t\t\t\t\t][lastRoadIdx][\"children\"].length - 1;\r\n\t\t\t\t\tconst currentCameras = [];\r\n\t\t\t\t\tgetCameras(\r\n\t\t\t\t\t\tcityCode,\r\n\t\t\t\t\t\tdistrictCode,\r\n\t\t\t\t\t\troadCode,\r\n\t\t\t\t\t\tspotCode,\r\n\t\t\t\t\t\tcurrentCameras\r\n\t\t\t\t\t);\r\n\t\t\t\t\tlocationOptionsParse[lastCityIdx][\"children\"][lastDistrictIdx][\r\n\t\t\t\t\t\t\"children\"\r\n\t\t\t\t\t][lastRoadIdx][\"children\"][lastSpotIdx][\"children\"] = currentCameras;\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\tconst getCameras = (\r\n\t\tcityCode,\r\n\t\tdistrictCode,\r\n\t\troadCode,\r\n\t\tspotCode,\r\n\t\tcurrentCameras\r\n\t) => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t// `${baseURL}${currentURL}/${cityCode}/${districtCode}/${roadCode}/${spotCode}/cameras`,\r\n\r\n\t\t\t\t`${baseURL}${currentURL}/${cityCode}/${districtCode}/${roadCode}/${spotCode}/cameras`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tres.data.forEach((cameraInfo) => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tcamCode,\r\n\t\t\t\t\t\tcamName,\r\n\t\t\t\t\t\tupboundFlag,\r\n\t\t\t\t\t\thttpStreamAddr,\r\n\t\t\t\t\t\tlanesTotal,\r\n\t\t\t\t\t} = cameraInfo;\r\n\t\t\t\t\tconst cameraTemp = {};\r\n\t\t\t\t\tcameraTemp[\"value\"] = camCode;\r\n\t\t\t\t\tupboundFlag\r\n\t\t\t\t\t\t? (cameraTemp[\"label\"] = camName + \" [상행]\")\r\n\t\t\t\t\t\t: (cameraTemp[\"label\"] = camName + \" [하행]\");\r\n\r\n\t\t\t\t\tcurrentCameras.push(cameraTemp);\r\n\t\t\t\t\tcameraAddress[camCode] = httpStreamAddr;\r\n\t\t\t\t\tcameraLanes[camCode] = lanesTotal;\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst onChange = (value, selectedOptions) => {\r\n\t\tconst optionVals = selectedOptions.map((item) => item.label);\r\n\t\tconst optionKeys = [\"city\", \"district\", \"road\", \"spot\", \"camera\"];\r\n\t\tconst selectedLocation = optionVals.reduce((obj, item, idx) => {\r\n\t\t\tobj[optionKeys[idx]] = item;\r\n\t\t\treturn obj;\r\n\t\t}, {});\r\n\r\n\t\tconst codeKeys = [\r\n\t\t\t\"cityCode\",\r\n\t\t\t\"districtCode\",\r\n\t\t\t\"roadCode\",\r\n\t\t\t\"spotCode\",\r\n\t\t\t\"cameraCode\",\r\n\t\t];\r\n\t\tconst selectedLocationCode = value.reduce((obj, item, idx) => {\r\n\t\t\tobj[codeKeys[idx]] = item;\r\n\t\t\treturn obj;\r\n\t\t}, {});\r\n\t\tselectedLocationCode[\"camAddress\"] = camAddress[value[4]];\r\n\t\tselectedLocationCode[\"camLanes\"] = camLanes[value[4]];\r\n\r\n\t\tsetSelectedLocation(selectedLocation);\r\n\t\tsetSelectedLocationCode(selectedLocationCode);\r\n\t\tif (setLocationChange) {\r\n\t\t\tsetLocationChange(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst filter = (inputValue, path) => {\r\n\t\treturn path.some(\r\n\t\t\t(option) =>\r\n\t\t\t\toption.label.toLowerCase().indexOf(inputValue.toLowerCase()) > -1\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Cascader\r\n\t\t\t\tsize={size}\r\n\t\t\t\texpandTrigger=\"hover\"\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tplaceholder={placeholdertxt ? placeholdertxt : \"위치 선택\"}\r\n\t\t\t\tshowSearch={{ filter }}\r\n\t\t\t\t// onPopupVisibleChange={getOptions}\r\n\t\t\t\toptions={parsedOptions}\r\n\t\t\t\tdefaultValue={defaultOption}\r\n\t\t\t\tdisabled={isDisabled && isDisabled}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcity: state.location.city,\r\n\t\tdistrict: state.location.district,\r\n\t\troad: state.location.road,\r\n\t\tspot: state.location.spot,\r\n\t\tcamera: state.location.camera,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationInfo: () => {\r\n\t\t\tdispatch(actions.getLocation());\r\n\t\t},\r\n\t\tgetBaseURL: () => {\r\n\t\t\tdispatch(actions.getURL());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCascader);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTAvgSpeed.js",["535"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js",["536"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js",["537","538","539"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\GenAvgSpeed.js",["540"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PeakHourFlowRate.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PHF.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTSecondTable.js",["541"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst DTSecondTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentLaneNum === 0) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseData();\r\n\t\t}\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"\",\r\n\t\t\tdataIndex: \"item\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"total\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tdataIndex: \"car\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tdataIndex: \"bus\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tdataIndex: \"truck\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tdataIndex: \"motor\",\r\n\t\t},\r\n\t];\r\n\r\n\tvar data = [\r\n\t\t{\r\n\t\t\tkey: \"0\",\r\n\t\t\titem: \"주간\",\r\n\t\t\ttotal: 0,\r\n\t\t\tcar: 0,\r\n\t\t\tbus: 0,\r\n\t\t\ttruck: 0,\r\n\t\t\tmotor: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"1\",\r\n\t\t\titem: \"야간\",\r\n\t\t\ttotal: 0,\r\n\t\t\tcar: 0,\r\n\t\t\tbus: 0,\r\n\t\t\ttruck: 0,\r\n\t\t\tmotor: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"3\",\r\n\t\t\titem: \"주야율\",\r\n\t\t\ttotal: 0,\r\n\t\t\tcar: 0,\r\n\t\t\tbus: 0,\r\n\t\t\ttruck: 0,\r\n\t\t\tmotor: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"4\",\r\n\t\t\titem: \"PHF\",\r\n\t\t\ttotal: 0,\r\n\t\t\tcar: \"/\",\r\n\t\t\tbus: \"/\",\r\n\t\t\ttruck: \"/\",\r\n\t\t\tmotor: \"/\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"5\",\r\n\t\t\titem: \"첨두시간\",\r\n\t\t\ttotal: \"\",\r\n\t\t\tcar: \"/\",\r\n\t\t\tbus: \"/\",\r\n\t\t\ttruck: \"/\",\r\n\t\t\tmotor: \"/\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"6\",\r\n\t\t\titem: \"첨두유율\",\r\n\t\t\ttotal: 0,\r\n\t\t\tcar: \"/\",\r\n\t\t\tbus: \"/\",\r\n\t\t\ttruck: \"/\",\r\n\t\t\tmotor: \"/\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"7\",\r\n\t\t\titem: \"집중율\",\r\n\t\t\ttotal: 0,\r\n\t\t\tcar: \"/\",\r\n\t\t\tbus: \"/\",\r\n\t\t\ttruck: \"/\",\r\n\t\t\tmotor: \"/\",\r\n\t\t},\r\n\t];\r\n\r\n\tconst parseData = () => {\r\n\t\tconsole.log(\"count 일간 2차 axios\");\r\n\t\tif (trafficTotalData.length !== 0) {\r\n\t\t\tconst trafficData = trafficTotalData[0];\r\n\t\t\tdata[0][\"total\"] = trafficData[\"totalVehicleDaytimeVolume\"];\r\n\t\t\tdata[0][\"car\"] = trafficData[\"carDaytimeVolume\"];\r\n\t\t\tdata[0][\"bus\"] = trafficData[\"mBusDaytimeVolume\"];\r\n\t\t\tdata[0][\"truck\"] = trafficData[\"mTruckDaytimeVolume\"];\r\n\t\t\tdata[0][\"motor\"] = trafficData[\"motorDaytimeVolume\"];\r\n\r\n\t\t\tdata[1][\"total\"] = trafficData[\"totalVehicleNighttimeVolume\"];\r\n\t\t\tdata[1][\"car\"] = trafficData[\"carNighttimeVolume\"];\r\n\t\t\tdata[1][\"bus\"] = trafficData[\"mBusNighttimeVolume\"];\r\n\t\t\tdata[1][\"truck\"] = trafficData[\"mTruckNighttimeVolume\"];\r\n\t\t\tdata[1][\"motor\"] = trafficData[\"motorNighttimeVolume\"];\r\n\r\n\t\t\tdata[2][\"total\"] = trafficData[\"totalVehicleDayNightRatio\"];\r\n\t\t\tdata[2][\"car\"] = trafficData[\"carDayNightRatio\"];\r\n\t\t\tdata[2][\"bus\"] = trafficData[\"mBusDayNightRatio\"];\r\n\t\t\tdata[2][\"truck\"] = trafficData[\"mTruckDayNightRatio\"];\r\n\t\t\tdata[2][\"motor\"] = trafficData[\"motorDayNightRatio\"];\r\n\r\n\t\t\tdata[3][\"total\"] = trafficData[\"totalVehiclePeakHourFactor\"];\r\n\r\n\t\t\tdata[4][\"total\"] = trafficData[\"totalVehiclePeak15MinuteTime\"];\r\n\r\n\t\t\tdata[5][\"total\"] = trafficData[\"totalVehiclePeakHourConcentrationRatio\"];\r\n\r\n\t\t\tdata[6][\"total\"] = trafficData[\"totalVehiclePeakHourFlowRate\"];\r\n\r\n\t\t\tsetData(data);\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default DTSecondTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleRatio.js",["542"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\dashLineChart\\DayPedestrians.js",["543","544"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\nimport { unstable_batchedUpdates } from \"react-dom\";\r\n\r\nconst Pedestrians = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar DTPedestrians = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"11\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\ttrafficTotalData.slice(1).forEach((pedestrianData) => {\r\n\t\t\tconst { recordTime, pedestrianVolume, jaywalkVolume } = pedestrianData;\r\n\r\n\t\t\tconst totalTemp = {};\r\n\t\t\tconst personTemp = {};\r\n\t\t\tconst jaywalkTemp = {};\r\n\r\n\t\t\tconst timeTemp = moment(recordTime).format(\"HH:mm\");\r\n\t\t\tconst personCnt = pedestrianVolume - jaywalkVolume;\r\n\r\n\t\t\ttotalTemp[\"date\"] = timeTemp;\r\n\t\t\ttotalTemp[\"type\"] = \"총 보행자\";\r\n\t\t\ttotalTemp[\"value\"] = pedestrianVolume;\r\n\r\n\t\t\tpersonTemp[\"date\"] = timeTemp;\r\n\t\t\tpersonTemp[\"type\"] = \"보행자\";\r\n\t\t\tpersonTemp[\"value\"] = personCnt;\r\n\r\n\t\t\tjaywalkTemp[\"date\"] = timeTemp;\r\n\t\t\tjaywalkTemp[\"type\"] = \"무단횡단\";\r\n\t\t\tjaywalkTemp[\"value\"] = jaywalkVolume;\r\n\r\n\t\t\tDTPedestrians.push(personTemp);\r\n\t\t\tDTPedestrians.push(totalTemp);\r\n\t\t\tDTPedestrians.push(jaywalkTemp);\r\n\t\t});\r\n\t\tsetData(DTPedestrians);\r\n\t\tsetLoading(false);\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"date\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"명\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tseriesField: \"type\",\r\n\t\tcolor: function color(_ref) {\r\n\t\t\tvar type = _ref.type;\r\n\t\t\treturn type === \"총 보행자\"\r\n\t\t\t\t? \"#F4664A\"\r\n\t\t\t\t: type === \"보행자\"\r\n\t\t\t\t? \"#30BF78\"\r\n\t\t\t\t: \"#FAAD14\";\r\n\t\t},\r\n\t\tlineStyle: function lineStyle(_ref2) {\r\n\t\t\tvar type = _ref2.type;\r\n\t\t\tif (type === \"총 보행자\") {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlineDash: [4, 4],\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn { opacity: 0.5 };\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default Pedestrians;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js",["545","546"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTOverSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 시간별 과속 parse\");\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = motorSpdVolume;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tseriesField: \"key\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTOverSpeed;\r\n",["547","548"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js",["549"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTPCU.js",["550"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\TimeTableCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleCnt.js",["551"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst VehicleCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"1\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 차선별 통행량 parse\");\r\n\t\tvar cntCar = [];\r\n\t\tvar cntBus = [];\r\n\t\tvar cntTruck = [];\r\n\t\tvar cntMotor = [];\r\n\t\tvar cntTotalData = [];\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\r\n\t\t\ttempCar[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carVolume;\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusVolume;\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckVolume;\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorVolume;\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\r\n\t\t\tcntCar.push(tempCar);\r\n\t\t\tcntBus.push(tempBus);\r\n\t\t\tcntTruck.push(tempTruck);\r\n\t\t\tcntMotor.push(tempMotor);\r\n\t\t});\r\n\t\tcntTotalData = cntCar.concat(cntBus.concat(cntTruck.concat(cntMotor)));\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"laneNum\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default VehicleCnt;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js",["552"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst MTFirstTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar countCol;\r\n\r\n\tuseEffect(() => {\r\n\t\tcountCol = 0;\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tvar columns;\r\n\tif (currentLaneNum === 0) {\r\n\t\tcolumns = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"시간\",\r\n\t\t\t\tdataIndex: \"time\",\r\n\t\t\t\tkey: \"time\",\r\n\t\t\t\twidth: 120,\r\n\t\t\t\ttextWrap: \"word-break\",\r\n\t\t\t\tellipsis: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"전체\",\r\n\t\t\t\tdataIndex: \"Total\",\r\n\t\t\t\tkey: \"Total\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\tkey: \"car\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"버스\",\r\n\t\t\t\tkey: \"bus\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\tkey: \"truck\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\tkey: \"motor\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"보행자\",\r\n\t\t\t\tkey: \"personTotal\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"수(명)\",\r\n\t\t\t\t\t\tdataIndex: \"person\",\r\n\t\t\t\t\t\tkey: \"person\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"무단횡단(명)\",\r\n\t\t\t\t\t\tdataIndex: \"jaywalk\",\r\n\t\t\t\t\t\tkey: \"jaywalk\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t];\r\n\t} else {\r\n\t\tcolumns = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"시간\",\r\n\t\t\t\tdataIndex: \"time\",\r\n\t\t\t\tkey: \"time\",\r\n\t\t\t\twidth: 70,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"전체\",\r\n\t\t\t\tdataIndex: \"Total\",\r\n\t\t\t\tkey: \"Total\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\tkey: \"car\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"버스\",\r\n\t\t\t\tkey: \"bus\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\tkey: \"truck\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\tkey: \"motor\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t];\r\n\t}\r\n\tconst axiosData = () => {\r\n\t\tvar TotalData = [];\r\n\t\tconsole.log(\"count table axios\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t\tpedestrianVolume,\r\n\t\t\t\tjaywalkVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (countCol < 3) {\r\n\t\t\t\tif (countCol === 0) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"월간전체\";\r\n\t\t\t\t} else if (countCol === 1) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"평일전체\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"주말전체\";\r\n\t\t\t\t}\r\n\t\t\t\tcountCol += 1;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"time\"] = moment(recordDate).format(\"YYYY년 MM월 DD일\");\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tif (currentLaneNum === 0) {\r\n\t\t\t\tdataTemp[\"person\"] = pedestrianVolume;\r\n\t\t\t\tdataTemp[\"jaywalk\"] = jaywalkVolume;\r\n\t\t\t}\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MTFirstTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTFirstTable.js",["553"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MLFirstTable.js",["554"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\GenOverSpeed.js",["555"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WMFlowRate.js",["556"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTConcentrationRatio.js",["557"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTPHF.js",["558"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTOverSpeed.js",["559"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js",["560"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst AvgSpeedLine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 차선별 평균속도 parse\");\r\n\t\tvar avgSpeedTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\r\n\t\t\ttempCar[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\tavgSpeedTotalData.push(tempCar);\r\n\t\t\tavgSpeedTotalData.push(tempBus);\r\n\t\t\tavgSpeedTotalData.push(tempTruck);\r\n\t\t\tavgSpeedTotalData.push(tempMotor);\r\n\t\t});\r\n\t\tsetData(avgSpeedTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"lane\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default AvgSpeedLine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTVehicleRatio.js",["561"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\n// import axios from \"axios\";\r\n// import { connect } from \"react-redux\";\r\n// import * as actions from \"../../../actions\";\r\n\r\nconst VehicleRatio = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"3\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 차종비율 parse\");\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = parseFloat((carVehicleRatio * 100).toFixed(2));\r\n\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = parseFloat((mBusVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = parseFloat((mTruckVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = parseFloat((motorVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"%\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default VehicleRatio;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\LaneTableCard.js",[],{"ruleId":"562","replacedBy":"563"},{"ruleId":"564","replacedBy":"565"},{"ruleId":"566","severity":1,"message":"567","line":19,"column":5,"nodeType":"568","endLine":19,"endColumn":40,"suggestions":"569"},{"ruleId":"566","severity":1,"message":"567","line":18,"column":5,"nodeType":"568","endLine":18,"endColumn":40,"suggestions":"570"},{"ruleId":"571","severity":1,"message":"572","line":3,"column":8,"nodeType":"573","messageId":"574","endLine":3,"endColumn":14},{"ruleId":"562","replacedBy":"575"},{"ruleId":"564","replacedBy":"576"},{"ruleId":"562","replacedBy":"577"},{"ruleId":"564","replacedBy":"578"},{"ruleId":"562","replacedBy":"579"},{"ruleId":"564","replacedBy":"580"},{"ruleId":"566","severity":1,"message":"581","line":15,"column":14,"nodeType":"582","endLine":15,"endColumn":18},{"ruleId":"562","replacedBy":"583"},{"ruleId":"564","replacedBy":"584"},{"ruleId":"566","severity":1,"message":"585","line":14,"column":5,"nodeType":"568","endLine":14,"endColumn":18,"suggestions":"586"},{"ruleId":"566","severity":1,"message":"567","line":29,"column":5,"nodeType":"568","endLine":29,"endColumn":40,"suggestions":"587"},{"ruleId":"566","severity":1,"message":"567","line":19,"column":5,"nodeType":"568","endLine":19,"endColumn":40,"suggestions":"588"},{"ruleId":"566","severity":1,"message":"589","line":30,"column":5,"nodeType":"568","endLine":30,"endColumn":37,"suggestions":"590"},{"ruleId":"566","severity":1,"message":"591","line":26,"column":5,"nodeType":"568","endLine":26,"endColumn":39,"suggestions":"592"},{"ruleId":"566","severity":1,"message":"593","line":26,"column":6,"nodeType":"594","endLine":26,"endColumn":38},{"ruleId":"566","severity":1,"message":"595","line":18,"column":15,"nodeType":"582","endLine":18,"endColumn":16},{"ruleId":"571","severity":1,"message":"596","line":4,"column":10,"nodeType":"573","messageId":"574","endLine":4,"endColumn":13},{"ruleId":"566","severity":1,"message":"567","line":19,"column":5,"nodeType":"568","endLine":19,"endColumn":40,"suggestions":"597"},{"ruleId":"571","severity":1,"message":"598","line":1,"column":17,"nodeType":"573","messageId":"574","endLine":1,"endColumn":25},{"ruleId":"562","replacedBy":"599"},{"ruleId":"564","replacedBy":"600"},{"ruleId":"566","severity":1,"message":"567","line":29,"column":5,"nodeType":"568","endLine":29,"endColumn":40,"suggestions":"601"},{"ruleId":"562","replacedBy":"602"},{"ruleId":"564","replacedBy":"603"},{"ruleId":"566","severity":1,"message":"589","line":28,"column":5,"nodeType":"568","endLine":28,"endColumn":23,"suggestions":"604"},{"ruleId":"566","severity":1,"message":"567","line":29,"column":5,"nodeType":"568","endLine":29,"endColumn":40,"suggestions":"605"},{"ruleId":"566","severity":1,"message":"567","line":18,"column":5,"nodeType":"568","endLine":18,"endColumn":40,"suggestions":"606"},{"ruleId":"562","replacedBy":"607"},{"ruleId":"564","replacedBy":"608"},{"ruleId":"562","replacedBy":"609"},{"ruleId":"564","replacedBy":"610"},{"ruleId":"566","severity":1,"message":"567","line":29,"column":5,"nodeType":"568","endLine":29,"endColumn":40,"suggestions":"611"},{"ruleId":"571","severity":1,"message":"612","line":6,"column":13,"nodeType":"573","messageId":"574","endLine":6,"endColumn":20},{"ruleId":"571","severity":1,"message":"613","line":10,"column":10,"nodeType":"573","messageId":"574","endLine":10,"endColumn":15},{"ruleId":"566","severity":1,"message":"614","line":48,"column":5,"nodeType":"568","endLine":48,"endColumn":13,"suggestions":"615"},{"ruleId":"566","severity":1,"message":"616","line":31,"column":5,"nodeType":"568","endLine":31,"endColumn":23,"suggestions":"617"},{"ruleId":"562","replacedBy":"618"},{"ruleId":"564","replacedBy":"619"},{"ruleId":"571","severity":1,"message":"620","line":1,"column":17,"nodeType":"573","messageId":"574","endLine":1,"endColumn":26},{"ruleId":"571","severity":1,"message":"621","line":66,"column":51,"nodeType":"573","messageId":"574","endLine":66,"endColumn":54},{"ruleId":"566","severity":1,"message":"622","line":33,"column":5,"nodeType":"568","endLine":33,"endColumn":42,"suggestions":"623"},{"ruleId":"566","severity":1,"message":"624","line":54,"column":5,"nodeType":"568","endLine":54,"endColumn":7,"suggestions":"625"},{"ruleId":"566","severity":1,"message":"624","line":63,"column":5,"nodeType":"568","endLine":63,"endColumn":14,"suggestions":"626"},{"ruleId":"571","severity":1,"message":"627","line":6,"column":2,"nodeType":"573","messageId":"574","endLine":6,"endColumn":18},{"ruleId":"571","severity":1,"message":"628","line":24,"column":9,"nodeType":"573","messageId":"574","endLine":24,"endColumn":20},{"ruleId":"566","severity":1,"message":"624","line":52,"column":5,"nodeType":"568","endLine":52,"endColumn":53,"suggestions":"629"},{"ruleId":"571","severity":1,"message":"630","line":2,"column":18,"nodeType":"573","messageId":"574","endLine":2,"endColumn":22},{"ruleId":"571","severity":1,"message":"631","line":18,"column":9,"nodeType":"573","messageId":"574","endLine":18,"endColumn":14},{"ruleId":"571","severity":1,"message":"632","line":2,"column":56,"nodeType":"573","messageId":"574","endLine":2,"endColumn":62},{"ruleId":"566","severity":1,"message":"633","line":92,"column":19,"nodeType":"582","endLine":92,"endColumn":20},{"ruleId":"566","severity":1,"message":"634","line":93,"column":20,"nodeType":"582","endLine":93,"endColumn":21},{"ruleId":"566","severity":1,"message":"635","line":94,"column":23,"nodeType":"582","endLine":94,"endColumn":24},{"ruleId":"636","severity":1,"message":"637","line":126,"column":38,"nodeType":"638","messageId":"639","endLine":126,"endColumn":40},{"ruleId":"562","replacedBy":"640"},{"ruleId":"564","replacedBy":"641"},{"ruleId":"566","severity":1,"message":"567","line":19,"column":5,"nodeType":"568","endLine":19,"endColumn":40,"suggestions":"642"},{"ruleId":"562","replacedBy":"643"},{"ruleId":"564","replacedBy":"644"},{"ruleId":"566","severity":1,"message":"645","line":15,"column":5,"nodeType":"568","endLine":15,"endColumn":18,"suggestions":"646"},{"ruleId":"571","severity":1,"message":"647","line":22,"column":10,"nodeType":"573","messageId":"574","endLine":22,"endColumn":14},{"ruleId":"566","severity":1,"message":"648","line":43,"column":5,"nodeType":"568","endLine":43,"endColumn":55,"suggestions":"649"},{"ruleId":"571","severity":1,"message":"650","line":2,"column":22,"nodeType":"573","messageId":"574","endLine":2,"endColumn":26},{"ruleId":"566","severity":1,"message":"581","line":15,"column":14,"nodeType":"582","endLine":15,"endColumn":18},{"ruleId":"571","severity":1,"message":"572","line":4,"column":8,"nodeType":"573","messageId":"574","endLine":4,"endColumn":14},{"ruleId":"566","severity":1,"message":"567","line":29,"column":5,"nodeType":"568","endLine":29,"endColumn":40,"suggestions":"651"},{"ruleId":"566","severity":1,"message":"567","line":24,"column":5,"nodeType":"568","endLine":24,"endColumn":40,"suggestions":"652"},{"ruleId":"571","severity":1,"message":"598","line":1,"column":17,"nodeType":"573","messageId":"574","endLine":1,"endColumn":25},{"ruleId":"566","severity":1,"message":"653","line":16,"column":5,"nodeType":"568","endLine":16,"endColumn":18,"suggestions":"654"},{"ruleId":"571","severity":1,"message":"655","line":12,"column":9,"nodeType":"573","messageId":"574","endLine":12,"endColumn":18},{"ruleId":"571","severity":1,"message":"656","line":13,"column":9,"nodeType":"573","messageId":"574","endLine":13,"endColumn":16},{"ruleId":"566","severity":1,"message":"567","line":19,"column":5,"nodeType":"568","endLine":19,"endColumn":40,"suggestions":"657"},{"ruleId":"566","severity":1,"message":"567","line":17,"column":5,"nodeType":"568","endLine":17,"endColumn":40,"suggestions":"658"},{"ruleId":"571","severity":1,"message":"612","line":10,"column":13,"nodeType":"573","messageId":"574","endLine":10,"endColumn":20},{"ruleId":"571","severity":1,"message":"620","line":1,"column":27,"nodeType":"573","messageId":"574","endLine":1,"endColumn":36},{"ruleId":"571","severity":1,"message":"659","line":3,"column":8,"nodeType":"573","messageId":"574","endLine":3,"endColumn":13},{"ruleId":"571","severity":1,"message":"598","line":1,"column":17,"nodeType":"573","messageId":"574","endLine":1,"endColumn":25},{"ruleId":"566","severity":1,"message":"660","line":14,"column":5,"nodeType":"568","endLine":14,"endColumn":18,"suggestions":"661"},{"ruleId":"566","severity":1,"message":"567","line":31,"column":5,"nodeType":"568","endLine":31,"endColumn":40,"suggestions":"662"},{"ruleId":"562","replacedBy":"663"},{"ruleId":"564","replacedBy":"664"},{"ruleId":"571","severity":1,"message":"665","line":2,"column":23,"nodeType":"573","messageId":"574","endLine":2,"endColumn":31},{"ruleId":"571","severity":1,"message":"666","line":46,"column":9,"nodeType":"573","messageId":"574","endLine":46,"endColumn":18},{"ruleId":"566","severity":1,"message":"667","line":41,"column":5,"nodeType":"568","endLine":41,"endColumn":7,"suggestions":"668"},{"ruleId":"566","severity":1,"message":"567","line":19,"column":5,"nodeType":"568","endLine":19,"endColumn":40,"suggestions":"669"},{"ruleId":"566","severity":1,"message":"567","line":19,"column":5,"nodeType":"568","endLine":19,"endColumn":40,"suggestions":"670"},{"ruleId":"571","severity":1,"message":"647","line":30,"column":10,"nodeType":"573","messageId":"574","endLine":30,"endColumn":14},{"ruleId":"566","severity":1,"message":"622","line":46,"column":5,"nodeType":"568","endLine":46,"endColumn":34,"suggestions":"671"},{"ruleId":"566","severity":1,"message":"622","line":55,"column":5,"nodeType":"568","endLine":55,"endColumn":14,"suggestions":"672"},{"ruleId":"566","severity":1,"message":"567","line":15,"column":5,"nodeType":"568","endLine":15,"endColumn":18,"suggestions":"673"},{"ruleId":"566","severity":1,"message":"616","line":17,"column":5,"nodeType":"568","endLine":17,"endColumn":23,"suggestions":"674"},{"ruleId":"566","severity":1,"message":"567","line":17,"column":5,"nodeType":"568","endLine":17,"endColumn":40,"suggestions":"675"},{"ruleId":"571","severity":1,"message":"676","line":6,"column":10,"nodeType":"573","messageId":"574","endLine":6,"endColumn":33},{"ruleId":"566","severity":1,"message":"567","line":21,"column":5,"nodeType":"568","endLine":21,"endColumn":40,"suggestions":"677"},{"ruleId":"566","severity":1,"message":"567","line":29,"column":5,"nodeType":"568","endLine":29,"endColumn":40,"suggestions":"678"},{"ruleId":"571","severity":1,"message":"679","line":42,"column":5,"nodeType":"573","messageId":"574","endLine":42,"endColumn":26},{"ruleId":"562","replacedBy":"680"},{"ruleId":"564","replacedBy":"681"},{"ruleId":"566","severity":1,"message":"682","line":45,"column":5,"nodeType":"568","endLine":45,"endColumn":13,"suggestions":"683"},{"ruleId":"566","severity":1,"message":"567","line":18,"column":5,"nodeType":"568","endLine":18,"endColumn":40,"suggestions":"684"},{"ruleId":"566","severity":1,"message":"567","line":18,"column":5,"nodeType":"568","endLine":18,"endColumn":40,"suggestions":"685"},{"ruleId":"566","severity":1,"message":"595","line":16,"column":14,"nodeType":"582","endLine":16,"endColumn":15},{"ruleId":"566","severity":1,"message":"581","line":20,"column":14,"nodeType":"582","endLine":20,"endColumn":18},{"ruleId":"566","severity":1,"message":"581","line":15,"column":14,"nodeType":"582","endLine":15,"endColumn":18},{"ruleId":"566","severity":1,"message":"567","line":15,"column":5,"nodeType":"568","endLine":15,"endColumn":18,"suggestions":"686"},{"ruleId":"566","severity":1,"message":"567","line":31,"column":5,"nodeType":"568","endLine":31,"endColumn":40,"suggestions":"687"},{"ruleId":"566","severity":1,"message":"567","line":30,"column":5,"nodeType":"568","endLine":30,"endColumn":40,"suggestions":"688"},{"ruleId":"566","severity":1,"message":"567","line":31,"column":5,"nodeType":"568","endLine":31,"endColumn":40,"suggestions":"689"},{"ruleId":"566","severity":1,"message":"567","line":19,"column":5,"nodeType":"568","endLine":19,"endColumn":40,"suggestions":"690"},{"ruleId":"566","severity":1,"message":"567","line":18,"column":5,"nodeType":"568","endLine":18,"endColumn":40,"suggestions":"691"},{"ruleId":"566","severity":1,"message":"567","line":24,"column":5,"nodeType":"568","endLine":24,"endColumn":40,"suggestions":"692"},"no-native-reassign",["693"],"no-negated-in-lhs",["694"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'parseTotalData'. Either include it or remove the dependency array.","ArrayExpression",["695"],["696"],"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar",["693"],["694"],["693"],["694"],["693"],["694"],"Assignments to the 'FristRow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal",["693"],["694"],"React Hook useEffect has a missing dependency: 'parseTrafficData'. Either include it or remove the dependency array.",["697"],["698"],["699"],"React Hook useEffect has a missing dependency: 'axiosData'. Either include it or remove the dependency array.",["700"],"React Hook useEffect has a missing dependency: 'loginStatus'. Either include it or remove the dependency array.",["701"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","Assignments to the 'countCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'act' is defined but never used.",["702"],"'useState' is defined but never used.",["693"],["694"],["703"],["693"],["694"],["704"],["705"],["706"],["693"],["694"],["693"],["694"],["707"],"'actions' is defined but never used.","'Title' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dayEndTime', 'dayStartDate', 'monthEndTime', 'monthStartDate', 'searchEndTime', 'searchStartDate', 'setTempEndTime', 'setTempStartDate', 'weekEndTime', and 'weekStartDate'. Either include them or remove the dependency array.",["708"],"React Hook useEffect has missing dependencies: 'currentLaneNum' and 'parseData'. Either include them or remove the dependency array.",["709"],["693"],["694"],"'useEffect' is defined but never used.","'ref' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTrafficData'. Either include it or remove the dependency array.",["710"],"React Hook useEffect has a missing dependency: 'axiosAsync'. Either include it or remove the dependency array.",["711"],["712"],"'PieChartOutlined' is defined but never used.","'isEmptyData' is assigned a value but never used.",["713"],"'Spin' is defined but never used.","'count' is assigned a value but never used.","'Select' is defined but never used.","Assignments to the 'countFirstCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'countSecondCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'countOverSpeedCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","array-callback-return","Array.prototype.some() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["693"],["694"],["714"],["693"],["694"],"React Hook useEffect has missing dependencies: 'page' and 'parseTraffic'. Either include them or remove the dependency array.",["715"],"'Text' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTrafficTotalData'. Either include it or remove the dependency array.",["716"],"'Link' is defined but never used.",["717"],["718"],"React Hook useEffect has a missing dependency: 'parseData'. Either include it or remove the dependency array.",["719"],"'startDate' is assigned a value but never used.","'endTime' is assigned a value but never used.",["720"],["721"],"'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'parseViolationData'. Either include it or remove the dependency array.",["722"],["723"],["693"],["694"],"'Checkbox' is defined but never used.","'clipboard' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOptions'. Either include it or remove the dependency array.",["724"],["725"],["726"],["727"],["728"],["729"],["730"],["731"],"'unstable_batchedUpdates' is defined but never used.",["732"],["733"],"'totalVehicleSpdVolume' is assigned a value but never used.",["693"],["694"],"React Hook useEffect has a missing dependency: 'setVideoSource'. Either include it or remove the dependency array.",["734"],["735"],["736"],["737"],["738"],["739"],["740"],["741"],["742"],["743"],"no-global-assign","no-unsafe-negation",{"desc":"744","fix":"745"},{"desc":"744","fix":"746"},{"desc":"747","fix":"748"},{"desc":"744","fix":"749"},{"desc":"744","fix":"750"},{"desc":"751","fix":"752"},{"desc":"753","fix":"754"},{"desc":"744","fix":"755"},{"desc":"744","fix":"756"},{"desc":"757","fix":"758"},{"desc":"744","fix":"759"},{"desc":"744","fix":"760"},{"desc":"744","fix":"761"},{"desc":"762","fix":"763"},{"desc":"764","fix":"765"},{"desc":"766","fix":"767"},{"desc":"768","fix":"769"},{"desc":"770","fix":"771"},{"desc":"772","fix":"773"},{"desc":"744","fix":"774"},{"desc":"775","fix":"776"},{"desc":"777","fix":"778"},{"desc":"744","fix":"779"},{"desc":"744","fix":"780"},{"desc":"781","fix":"782"},{"desc":"744","fix":"783"},{"desc":"744","fix":"784"},{"desc":"785","fix":"786"},{"desc":"744","fix":"787"},{"desc":"788","fix":"789"},{"desc":"744","fix":"790"},{"desc":"744","fix":"791"},{"desc":"792","fix":"793"},{"desc":"794","fix":"795"},{"desc":"796","fix":"797"},{"desc":"764","fix":"798"},{"desc":"744","fix":"799"},{"desc":"744","fix":"800"},{"desc":"744","fix":"801"},{"desc":"802","fix":"803"},{"desc":"744","fix":"804"},{"desc":"744","fix":"805"},{"desc":"796","fix":"806"},{"desc":"744","fix":"807"},{"desc":"744","fix":"808"},{"desc":"744","fix":"809"},{"desc":"744","fix":"810"},{"desc":"744","fix":"811"},{"desc":"744","fix":"812"},"Update the dependencies array to be: [trafficTotalData, activeVisualKey, parseTotalData]",{"range":"813","text":"814"},{"range":"815","text":"814"},"Update the dependencies array to be: [parseTrafficData, trafficData]",{"range":"816","text":"817"},{"range":"818","text":"814"},{"range":"819","text":"814"},"Update the dependencies array to be: [startDate, endTime, cameraCode, axiosData]",{"range":"820","text":"821"},"Update the dependencies array to be: [loginStatus]",{"range":"822","text":"823"},{"range":"824","text":"814"},{"range":"825","text":"814"},"Update the dependencies array to be: [axiosData, trafficTotalData]",{"range":"826","text":"827"},{"range":"828","text":"814"},{"range":"829","text":"814"},{"range":"830","text":"814"},"Update the dependencies array to be: [dayEndTime, dayStartDate, monthEndTime, monthStartDate, period, searchEndTime, searchStartDate, setTempEndTime, setTempStartDate, weekEndTime, weekStartDate]",{"range":"831","text":"832"},"Update the dependencies array to be: [currentLaneNum, parseData, trafficTotalData]",{"range":"833","text":"834"},"Update the dependencies array to be: [realtimeCamCode, startDate, endTime, getTrafficData]",{"range":"835","text":"836"},"Update the dependencies array to be: [axiosAsync]",{"range":"837","text":"838"},"Update the dependencies array to be: [axiosAsync, refresh]",{"range":"839","text":"840"},"Update the dependencies array to be: [cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",{"range":"841","text":"842"},{"range":"843","text":"814"},"Update the dependencies array to be: [page, parseTraffic, trafficData]",{"range":"844","text":"845"},"Update the dependencies array to be: [cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",{"range":"846","text":"847"},{"range":"848","text":"814"},{"range":"849","text":"814"},"Update the dependencies array to be: [parseData, trafficData]",{"range":"850","text":"851"},{"range":"852","text":"814"},{"range":"853","text":"814"},"Update the dependencies array to be: [parseViolationData, trafficData]",{"range":"854","text":"855"},{"range":"856","text":"814"},"Update the dependencies array to be: [getOptions]",{"range":"857","text":"858"},{"range":"859","text":"814"},{"range":"860","text":"814"},"Update the dependencies array to be: [camCode, startDate, endTime, getTrafficData]",{"range":"861","text":"862"},"Update the dependencies array to be: [getTrafficData, refresh]",{"range":"863","text":"864"},"Update the dependencies array to be: [parseTotalData, trafficData]",{"range":"865","text":"866"},{"range":"867","text":"834"},{"range":"868","text":"814"},{"range":"869","text":"814"},{"range":"870","text":"814"},"Update the dependencies array to be: [setVideoSource, source]",{"range":"871","text":"872"},{"range":"873","text":"814"},{"range":"874","text":"814"},{"range":"875","text":"866"},{"range":"876","text":"814"},{"range":"877","text":"814"},{"range":"878","text":"814"},{"range":"879","text":"814"},{"range":"880","text":"814"},{"range":"881","text":"814"},[462,497],"[trafficTotalData, activeVisualKey, parseTotalData]",[462,497],[383,396],"[parseTrafficData, trafficData]",[615,650],[464,499],[1026,1058],"[startDate, endTime, cameraCode, axiosData]",[1269,1303],"[loginStatus]",[515,550],[606,641],[575,593],"[axiosData, trafficTotalData]",[606,641],[432,467],[611,646],[1303,1311],"[dayEndTime, dayStartDate, monthEndTime, monthStartDate, period, searchEndTime, searchStartDate, setTempEndTime, setTempStartDate, weekEndTime, weekStartDate]",[617,635],"[currentLaneNum, parseData, trafficTotalData]",[1000,1037],"[realtimeCamCode, startDate, endTime, getTrafficData]",[1645,1647],"[axiosAsync]",[1808,1817],"[axiosAsync, refresh]",[1739,1787],"[cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",[470,505],[408,421],"[page, parseTraffic, trafficData]",[1447,1497],"[cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",[641,676],[596,631],[390,403],"[parseData, trafficData]",[469,504],[488,523],[386,399],"[parseViolationData, trafficData]",[673,708],[955,957],"[getOptions]",[467,502],[467,502],[1454,1483],"[camCode, startDate, endTime, getTrafficData]",[1636,1645],"[getTrafficData, refresh]",[385,398],"[parseTotalData, trafficData]",[417,435],[439,474],[549,584],[612,647],[1190,1198],"[setVideoSource, source]",[464,499],[439,474],[384,397],[645,680],[654,689],[640,675],[469,504],[439,474],[596,631]]