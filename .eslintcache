[{"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js":"1","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js":"2","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js":"3","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js":"4","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js":"5","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js":"6","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\GenOverSpeed.js":"7","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\GenAvgSpeed.js":"8","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js":"9","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js":"10","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js":"11","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTAvgSpeed.js":"12","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTVehicleRatio.js":"13","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js":"14","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js":"15","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js":"16","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleCnt.js":"17","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js":"18","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js":"19","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js":"20","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js":"21","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js":"22","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js":"23","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js":"24","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PeakHourFlowRate.js":"25","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\bidirectionalBar\\DayNight.js":"26","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js":"27","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PHF.js":"28","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js":"29","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js":"30","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js":"31","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js":"32","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\search\\OverspeedPage.js":"33","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\search\\SearchPage.js":"34","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\login\\LoginPage.js":"35","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js":"36","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SearchAccount.js":"37","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\PasswordPage.js":"38","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\reportWebVitals.js":"39","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js":"40","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js":"41","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MonthPeakTime.js":"42","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTCnt.js":"43","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js":"44","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js":"45","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js":"46","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js":"47","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js":"48","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js":"49","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js":"50","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\notificationButton\\NotificationButton.js":"51","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleRatio.js":"52","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js":"53","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js":"54","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StatContainer.js":"55","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js":"56","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTSecondTable.js":"57","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js":"58","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js":"59","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js":"60","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTPCU.js":"61","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js":"62","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\Peak15.js":"63","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js":"64","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\location.js":"65","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js":"66","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js":"67","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTCnt.js":"68","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\header\\index.js":"69","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js":"70","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\index.js":"71","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountTable\\AccountTable.js":"72","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WMFlowRate.js":"73","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js":"74","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js":"75","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js":"76","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\index.js":"77","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTVehicleRatio.js":"78","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js":"79","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js":"80","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js":"81"},{"size":653,"mtime":1624250338471,"results":"82","hashOfConfig":"83"},{"size":6421,"mtime":1624249825446,"results":"84","hashOfConfig":"83"},{"size":4854,"mtime":1624003733648,"results":"85","hashOfConfig":"83"},{"size":3282,"mtime":1624003749810,"results":"86","hashOfConfig":"83"},{"size":756,"mtime":1624076431170,"results":"87","hashOfConfig":"83"},{"size":4886,"mtime":1624171889169,"results":"88","hashOfConfig":"83"},{"size":2030,"mtime":1624093693728,"results":"89","hashOfConfig":"83"},{"size":2347,"mtime":1624076255187,"results":"90","hashOfConfig":"83"},{"size":3763,"mtime":1624076351187,"results":"91","hashOfConfig":"83"},{"size":7520,"mtime":1624249813725,"results":"92","hashOfConfig":"83"},{"size":2998,"mtime":1623818251754,"results":"93","hashOfConfig":"83"},{"size":2509,"mtime":1623659108900,"results":"94","hashOfConfig":"83"},{"size":2952,"mtime":1623659032045,"results":"95","hashOfConfig":"83"},{"size":3348,"mtime":1624164227077,"results":"96","hashOfConfig":"83"},{"size":2486,"mtime":1624099012114,"results":"97","hashOfConfig":"83"},{"size":6177,"mtime":1624233700637,"results":"98","hashOfConfig":"83"},{"size":2559,"mtime":1623661401399,"results":"99","hashOfConfig":"83"},{"size":2653,"mtime":1623658800169,"results":"100","hashOfConfig":"83"},{"size":4517,"mtime":1624249821671,"results":"101","hashOfConfig":"83"},{"size":22597,"mtime":1624250522664,"results":"102","hashOfConfig":"83"},{"size":3718,"mtime":1624162582970,"results":"103","hashOfConfig":"83"},{"size":7539,"mtime":1624250324644,"results":"104","hashOfConfig":"83"},{"size":687,"mtime":1623721576747,"results":"105","hashOfConfig":"83"},{"size":3355,"mtime":1624164223349,"results":"106","hashOfConfig":"83"},{"size":501,"mtime":1624094762881,"results":"107","hashOfConfig":"83"},{"size":2502,"mtime":1624094907165,"results":"108","hashOfConfig":"83"},{"size":5677,"mtime":1624242745005,"results":"109","hashOfConfig":"83"},{"size":453,"mtime":1617842235449,"results":"110","hashOfConfig":"83"},{"size":3879,"mtime":1624249786022,"results":"111","hashOfConfig":"83"},{"size":3788,"mtime":1624095881905,"results":"112","hashOfConfig":"83"},{"size":4002,"mtime":1624161626574,"results":"113","hashOfConfig":"83"},{"size":5507,"mtime":1624177673280,"results":"114","hashOfConfig":"83"},{"size":3349,"mtime":1624098204050,"results":"115","hashOfConfig":"83"},{"size":2344,"mtime":1624164532895,"results":"116","hashOfConfig":"83"},{"size":1299,"mtime":1624098258128,"results":"117","hashOfConfig":"83"},{"size":1361,"mtime":1624098270393,"results":"118","hashOfConfig":"83"},{"size":1241,"mtime":1624098287899,"results":"119","hashOfConfig":"83"},{"size":1211,"mtime":1624098296483,"results":"120","hashOfConfig":"83"},{"size":362,"mtime":1608013233748,"results":"121","hashOfConfig":"83"},{"size":8341,"mtime":1624249800105,"results":"122","hashOfConfig":"83"},{"size":2491,"mtime":1620720342553,"results":"123","hashOfConfig":"83"},{"size":2415,"mtime":1623660107847,"results":"124","hashOfConfig":"83"},{"size":2410,"mtime":1623651212940,"results":"125","hashOfConfig":"83"},{"size":2593,"mtime":1623823179440,"results":"126","hashOfConfig":"83"},{"size":410,"mtime":1623724067228,"results":"127","hashOfConfig":"83"},{"size":1405,"mtime":1623299522023,"results":"128","hashOfConfig":"83"},{"size":652,"mtime":1616735276373,"results":"129","hashOfConfig":"83"},{"size":2087,"mtime":1624250250014,"results":"130","hashOfConfig":"83"},{"size":3751,"mtime":1624242788241,"results":"131","hashOfConfig":"83"},{"size":1952,"mtime":1623299526947,"results":"132","hashOfConfig":"83"},{"size":630,"mtime":1623977338018,"results":"133","hashOfConfig":"83"},{"size":2795,"mtime":1623661431418,"results":"134","hashOfConfig":"83"},{"size":2590,"mtime":1623659513647,"results":"135","hashOfConfig":"83"},{"size":5684,"mtime":1623977384731,"results":"136","hashOfConfig":"83"},{"size":410,"mtime":1616232271503,"results":"137","hashOfConfig":"83"},{"size":506,"mtime":1623977513981,"results":"138","hashOfConfig":"83"},{"size":3449,"mtime":1624233585567,"results":"139","hashOfConfig":"83"},{"size":2646,"mtime":1623661568778,"results":"140","hashOfConfig":"83"},{"size":5711,"mtime":1623299474625,"results":"141","hashOfConfig":"83"},{"size":1848,"mtime":1623214846560,"results":"142","hashOfConfig":"83"},{"size":2508,"mtime":1623658811753,"results":"143","hashOfConfig":"83"},{"size":2684,"mtime":1623661445346,"results":"144","hashOfConfig":"83"},{"size":486,"mtime":1616236053868,"results":"145","hashOfConfig":"83"},{"size":6783,"mtime":1624249809366,"results":"146","hashOfConfig":"83"},{"size":446,"mtime":1616033614053,"results":"147","hashOfConfig":"83"},{"size":1673,"mtime":1623977340214,"results":"148","hashOfConfig":"83"},{"size":2314,"mtime":1623661438328,"results":"149","hashOfConfig":"83"},{"size":2604,"mtime":1623658738768,"results":"150","hashOfConfig":"83"},{"size":1393,"mtime":1621496922514,"results":"151","hashOfConfig":"83"},{"size":2509,"mtime":1623659091405,"results":"152","hashOfConfig":"83"},{"size":552,"mtime":1623977299580,"results":"153","hashOfConfig":"83"},{"size":5499,"mtime":1623995191105,"results":"154","hashOfConfig":"83"},{"size":2091,"mtime":1624249797647,"results":"155","hashOfConfig":"83"},{"size":2502,"mtime":1623658764138,"results":"156","hashOfConfig":"83"},{"size":6050,"mtime":1624233686778,"results":"157","hashOfConfig":"83"},{"size":745,"mtime":1617842272800,"results":"158","hashOfConfig":"83"},{"size":270,"mtime":1623139553556,"results":"159","hashOfConfig":"83"},{"size":2368,"mtime":1623977345055,"results":"160","hashOfConfig":"83"},{"size":3645,"mtime":1623299515541,"results":"161","hashOfConfig":"83"},{"size":2467,"mtime":1623659211703,"results":"162","hashOfConfig":"83"},{"size":2604,"mtime":1623659100302,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12xqqm0",{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"230"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"199"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"183"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"214"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"187"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"173"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"183"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"284"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"297"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"297"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"264"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"230"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"230"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"214"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"314"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"241"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js",["374","375"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js",[],["376","377"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js",[],["378","379"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js",["380","381","382"],"import React, { useEffect, useState } from \"react\";\r\nimport { Spin, message, Typography } from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport VisualizationCard from \"../../molecules/genVisualizationCard/GenVisualizationCard\";\r\nimport VehicleRatio from \"../../charts/doughnutChart/VehicleRatio\";\r\nimport AvgSpeedGauge from \"../../charts/gaugeChart/AvgSpeed\";\r\nimport AvgSpeedBar from \"../../charts/barChart/GenAvgSpeed\";\r\nimport OverSpeedBar from \"../../charts/barChart/GenOverSpeed\";\r\n\r\nimport NotificationButton from \"../../atoms/notificationButton/NotificationButton\";\r\nimport \"./style.less\";\r\n\r\nconst GeneralVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tpage,\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcurrentTime,\r\n\t\tcameraCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\trefresh,\r\n\t\tsetLoggedIn,\r\n\t} = props;\r\n\tconst { Paragraph, Text } = Typography;\r\n\r\n\tconst [isLoadingTraffic, setLoadingTraffic] = useState(true);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [trafficData, setTrafficData] = useState([]);\r\n\tconst [curEndTime, setCurEndTime] = useState(\"\");\r\n\r\n\tvar curTime = currentTime ? currentTime : \"23:59:59\";\r\n\tconst periodURL =\r\n\t\tperiod === \"DAY\" ? \"/daily\" : period === \"WEEK\" ? \"/weekly\" : \"/monthly\";\r\n\tconst title = page === \"REALSTATISTIC\" ? `| 00:00 ~ ${curEndTime} ` : \"\";\r\n\tconst descriptionText = (\r\n\t\t<>\r\n\t\t\t<Paragraph>\r\n\t\t\t\t해당하는 구간의 차종별 통계 정보와 평균 속도에 대한 정보를 그래프로\r\n\t\t\t\t표시합니다\r\n\t\t\t</Paragraph>\r\n\t\t\t<Paragraph>표시항목:</Paragraph>\r\n\t\t\t<Paragraph>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>통행량</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>차종 별 과속 차량 수</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>전체 차량 평균속도</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>차종 별 평균 속도</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<Paragraph>*항목별 상세사항은 매뉴얼에 기재 됨</Paragraph>\r\n\t\t\t</Paragraph>\r\n\t\t</>\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEmptyData(false);\r\n\t\tsetLoadingTraffic(true);\r\n\t\tsetTrafficData([]);\r\n\t\tgetTrafficData();\r\n\t}, [cameraCode, startDate, endTime, currentTime]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (refresh) {\r\n\t\t\tsetEmptyData(false);\r\n\t\t\tsetLoadingTraffic(true);\r\n\t\t\tsetTrafficData([]);\r\n\t\t\tgetTrafficData();\r\n\t\t}\r\n\t}, [refresh]);\r\n\r\n\tconst getTrafficData = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} ${curTime}&axis=time&laneNumber=0`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetTrafficData(res.data);\r\n\t\t\t\t\tsetCurEndTime(\r\n\t\t\t\t\t\tmoment(new Date(res.data[res.data.length - 1].recordTime))\r\n\t\t\t\t\t\t\t.add(15, \"m\")\r\n\t\t\t\t\t\t\t.format(\"HH:mm\")\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetLoadingTraffic(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isEmptyData && !isLoadingTraffic && (\r\n\t\t\t\t<NotificationButton description={descriptionText} />\r\n\t\t\t)}\r\n\t\t\t<div className=\"general-graph-layout\">\r\n\t\t\t\t{!isEmptyData ? (\r\n\t\t\t\t\tisLoadingTraffic ? (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\t\t\ttitle={`차종별 통행량 ${title}`}\r\n\t\t\t\t\t\t\t\t\tchart={<VehicleRatio trafficData={trafficData} page={page} />}\r\n\t\t\t\t\t\t\t\t\taxisInfo={false}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\t\t\ttitle={`차종별 과속차량 ${title}`}\r\n\t\t\t\t\t\t\t\t\tchart={<OverSpeedBar trafficData={trafficData} page={page} />}\r\n\t\t\t\t\t\t\t\t\taxisInfo={true}\r\n\t\t\t\t\t\t\t\t\tyAxis={\"대수(대)\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\t\t\ttitle={`평균속도 ${title}`}\r\n\t\t\t\t\t\t\t\t\tchart={\r\n\t\t\t\t\t\t\t\t\t\t<AvgSpeedGauge trafficData={trafficData} page={page} />\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\taxisInfo={false}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\t\t\ttitle={`차종별 평균속도 ${title}`}\r\n\t\t\t\t\t\t\t\t\tchart={<AvgSpeedBar trafficData={trafficData} page={page} />}\r\n\t\t\t\t\t\t\t\t\taxisInfo={true}\r\n\t\t\t\t\t\t\t\t\tyAxis={\"속도(km/h)\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(GeneralVisualization);\r\n",["383","384"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\GenOverSpeed.js",["385"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst GeneralAvgSpeed = (props) => {\r\n\tconst { trafficData, page } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\tparseTotalData();\r\n\t}, [trafficData]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar TotalData = [\r\n\t\t\t{ type: \"승용차\", value: 0 },\r\n\t\t\t{ type: \"버스\", value: 0 },\r\n\t\t\t{ type: \"화물차\", value: 0 },\r\n\t\t\t{ type: \"오토바이\", value: 0 },\r\n\t\t];\r\n\t\tvar data = {\r\n\t\t\tcarSpdVolume: 0,\r\n\t\t\tmBusSpdVolume: 0,\r\n\t\t\tmTruckSpdVolume: 0,\r\n\t\t\tmotorSpdVolume: 0,\r\n\t\t};\r\n\t\tif (page === \"STREAMING\") {\r\n\t\t\tdata = trafficData[trafficData.length - 1];\r\n\t\t} else if (page === \"REALSTATISTIC\") {\r\n\t\t\ttrafficData.forEach((eachData) => {\r\n\t\t\t\tdata[\"carSpdVolume\"] += eachData[\"carSpdVolume\"];\r\n\t\t\t\tdata[\"mBusSpdVolume\"] += eachData[\"mBusSpdVolume\"];\r\n\t\t\t\tdata[\"mTruckSpdVolume\"] += eachData[\"mTruckSpdVolume\"];\r\n\t\t\t\tdata[\"motorSpdVolume\"] += eachData[\"motorSpdVolume\"];\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdata = trafficData[0];\r\n\t\t}\r\n\t\tTotalData[0].value = data[\"carSpdVolume\"];\r\n\t\tTotalData[1].value = data[\"mBusSpdVolume\"];\r\n\t\tTotalData[2].value = data[\"mTruckSpdVolume\"];\r\n\t\tTotalData[3].value = data[\"motorSpdVolume\"];\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"type\",\r\n\t\tyField: \"value\",\r\n\t\tautoFit: true,\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfill: \"#FFFFFF\",\r\n\t\t\t\topacity: 0.6,\r\n\t\t\t},\r\n\t\t},\r\n\t\tmeta: {\r\n\t\t\ttype: { alias: \"차종\" },\r\n\t\t\tvalue: { alias: \"과속대수\" },\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default GeneralAvgSpeed;\r\n",["386","387"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\GenAvgSpeed.js",["388"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst GeneralOverSpeed = (props) => {\r\n\tconst { trafficData, page } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\tparseTotalData();\r\n\t}, [trafficData]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar TotalData = [\r\n\t\t\t{ type: \"승용차\", value: 0 },\r\n\t\t\t{ type: \"버스\", value: 0 },\r\n\t\t\t{ type: \"화물차\", value: 0 },\r\n\t\t\t{ type: \"오토바이\", value: 0 },\r\n\t\t];\r\n\t\tvar data = {\r\n\t\t\tcarAvgSpeed: 0,\r\n\t\t\tmBusAvgSpeed: 0,\r\n\t\t\tmTruckAvgSpeed: 0,\r\n\t\t\tmotorAvgSpeed: 0,\r\n\t\t};\r\n\t\tif (page === \"REALSTATISTIC\") {\r\n\t\t\ttrafficData.forEach((eachData) => {\r\n\t\t\t\tdata[\"carAvgSpeed\"] += eachData[\"carAvgSpeed\"];\r\n\t\t\t\tdata[\"mBusAvgSpeed\"] += eachData[\"mBusAvgSpeed\"];\r\n\t\t\t\tdata[\"mTruckAvgSpeed\"] += eachData[\"mTruckAvgSpeed\"];\r\n\t\t\t\tdata[\"motorAvgSpeed\"] += eachData[\"motorAvgSpeed\"];\r\n\t\t\t});\r\n\t\t\tlet length = trafficData.length;\r\n\t\t\tdata[\"carAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"carAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t\tdata[\"mBusAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"mBusAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t\tdata[\"mTruckAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"mTruckAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t\tdata[\"motorAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"motorAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tdata = trafficData[0];\r\n\t\t}\r\n\r\n\t\tTotalData[0].value = data[\"carAvgSpeed\"];\r\n\t\tTotalData[1].value = data[\"mBusAvgSpeed\"];\r\n\t\tTotalData[2].value = data[\"mTruckAvgSpeed\"];\r\n\t\tTotalData[3].value = data[\"motorAvgSpeed\"];\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"type\",\r\n\t\tyField: \"value\",\r\n\t\tautoFit: true,\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfill: \"#FFFFFF\",\r\n\t\t\t\topacity: 0.6,\r\n\t\t\t},\r\n\t\t},\r\n\t\tmeta: {\r\n\t\t\ttype: { alias: \"차종\" },\r\n\t\t\tvalue: { alias: \"평균속도\" },\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default GeneralOverSpeed;\r\n",["389","390"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js",["391","392"],"import React, { useEffect, useState } from \"react\";\r\nimport { Spin, message } from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nimport VisualizationCard from \"../../molecules/genVisualizationCard/GenVisualizationCard\";\r\nimport VehicleRatio from \"../../charts/doughnutChart/VehicleRatio\";\r\nimport OverSpeedBar from \"../../charts/barChart/GenOverSpeed\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst StreamingGeneralVisualization = (props) => {\r\n\tconst {\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcurrentTime,\r\n\t\trealtimeCamCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\tsetLoggedIn,\r\n\t} = props;\r\n\r\n\tconst [isLoadingTraffic, setLoadingTraffic] = useState(true);\r\n\tconst [trafficData, setTrafficData] = useState([]);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [curStartTime, setCurStartTime] = useState(\"\");\r\n\tconst [curEndTime, setCurEndTime] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingTraffic(true);\r\n\t\tsetEmptyData(false);\r\n\t\tsetTrafficData([]);\r\n\t\tgetTrafficData();\r\n\t}, [realtimeCamCode, startDate, endTime, currentTime]);\r\n\r\n\tconst getTrafficData = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${trafficURL}/daily?camCode=${realtimeCamCode}&startDate=${startDate}&endTime=${endTime} ${currentTime}&axis=time&laneNumber=0`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tvar tempStartTime = moment(\r\n\t\t\t\t\t\tres.data[res.data.length - 1].recordTime\r\n\t\t\t\t\t).format(\"HH:mm\");\r\n\t\t\t\t\tvar tempEndTime = moment(\r\n\t\t\t\t\t\tnew Date(res.data[res.data.length - 1].recordTime)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\t.add(15, \"m\")\r\n\t\t\t\t\t\t.format(\"HH:mm\");\r\n\r\n\t\t\t\t\tsetTrafficData(res.data);\r\n\t\t\t\t\tsetCurStartTime(tempStartTime);\r\n\t\t\t\t\tsetCurEndTime(tempEndTime);\r\n\t\t\t\t\tsetLoadingTraffic(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetLoadingTraffic(true);\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t}\r\n\t\t\t\tsetLoadingTraffic(true);\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"general-graph-layout\">\r\n\t\t\t{!isEmptyData ? (\r\n\t\t\t\tisLoadingTraffic ? (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\ttitle={`차종별 통행량 | ${curStartTime} ~ ${curEndTime}`}\r\n\t\t\t\t\t\t\tchart={\r\n\t\t\t\t\t\t\t\t<VehicleRatio trafficData={trafficData} page=\"STREAMING\" />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\taxisInfo={false}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\ttitle={`차종별 과속차량 | ${curStartTime} ~ ${curEndTime}`}\r\n\t\t\t\t\t\t\tchart={\r\n\t\t\t\t\t\t\t\t<OverSpeedBar trafficData={trafficData} page=\"STREAMING\" />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\taxisInfo={true}\r\n\t\t\t\t\t\t\tyAxis={\"대수(대)\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t<VisualizationCard title=\"차종별 통행량\" />\r\n\t\t\t\t\t<VisualizationCard title=\"차종별 과속차량\" />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationCodeInfo: () => {\r\n\t\t\tdispatch(actions.getLocationCode());\r\n\t\t},\r\n\t\tgetBaseURL: () => {\r\n\t\t\tdispatch(actions.getURL());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(StreamingGeneralVisualization);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js",[],["393","394"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTAvgSpeed.js",["395"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst MTAvgSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar avgSpeedTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleAvgSpeed;\r\n\t\t\ttempTotal[\"category\"] = \"천제\";\r\n\r\n\t\t\tavgSpeedTotalData.push(tempCar);\r\n\t\t\tavgSpeedTotalData.push(tempBus);\r\n\t\t\tavgSpeedTotalData.push(tempTruck);\r\n\t\t\tavgSpeedTotalData.push(tempMotor);\r\n\t\t\tavgSpeedTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(avgSpeedTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MTAvgSpeed;\r\n",["396","397"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTVehicleRatio.js",["398"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst VehicleRatio = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"3\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar carRatio = [];\r\n\t\tvar busRatio = [];\r\n\t\tvar truckRatio = [];\r\n\t\tvar motorRatio = [];\r\n\t\tvar RatioTotalData = [];\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\r\n\t\t\ttempCar[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempCar[\"value\"] = parseFloat((carVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempBus[\"value\"] = parseFloat((mBusVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempTruck[\"value\"] = parseFloat((mTruckVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempMotor[\"value\"] = parseFloat((motorVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\r\n\t\t\tcarRatio.push(tempCar);\r\n\t\t\tbusRatio.push(tempBus);\r\n\t\t\ttruckRatio.push(tempTruck);\r\n\t\t\tmotorRatio.push(tempMotor);\r\n\t\t});\r\n\t\tRatioTotalData = carRatio.concat(\r\n\t\t\tbusRatio.concat(truckRatio.concat(motorRatio))\r\n\t\t);\r\n\t\tsetData(RatioTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"%\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default VehicleRatio;\r\n",["399","400"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js",["401"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Spin } from \"antd\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport GeneralVisualization from \"../../organisms/generalVisualization/GeneralVisualization\";\r\nimport TimeStatistic from \"../../organisms/visualStatistic/timeStat/TimeStat\";\r\nimport LaneStatistic from \"../../organisms/visualStatistic/laneStat/LaneStat\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst WeekStatPage = (props) => {\r\n\tconst { setLoggedIn, isMaster, setRealFirstFilter } = props;\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [additionalFilter, setAddFilter] = useState(\"ALL\");\r\n\tconst [count, setCount] = useState(false);\r\n\tconst [emptyErr, setEmptyErr] = useState(false);\r\n\tconst [futureErr, setFutureErr] = useState(false);\r\n\r\n\tconst { Content } = Layout;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"statistic-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"통계 분석\", \"주간 별\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"WEEK\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tfirstFilter={firstFilter}\r\n\t\t\t\t\t\t\tsetAddFilter={setAddFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\temptyErr={emptyErr}\r\n\t\t\t\t\t\t\tfutureErr={futureErr}\r\n\t\t\t\t\t\t\tcascaderText=\"확인을 희망하는 구간을 선택하세요\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\tcount ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<GeneralVisualization\r\n\t\t\t\t\t\t\t\t\t\tperiod=\"WEEK\"\r\n\t\t\t\t\t\t\t\t\t\tpage=\"WEEK\"\r\n\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\trefresh={false}\r\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{timeClassification ? (\r\n\t\t\t\t\t\t\t\t\t\t<TimeStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"WEEK\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t\tsetEmptyErr={setEmptyErr}\r\n\t\t\t\t\t\t\t\t\t\t\tsetFutureErr={setFutureErr}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<LaneStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"WEEK\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\tadditionalFilter={additionalFilter}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t\tsetEmptyErr={setEmptyErr}\r\n\t\t\t\t\t\t\t\t\t\t\tsetFutureErr={setFutureErr}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WeekStatPage;\r\n",["402","403"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js",[],["404","405"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js",["406"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst MTFirstTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar countCol;\r\n\r\n\tuseEffect(() => {\r\n\t\tcountCol = 0;\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t\tkey: \"time\",\r\n\t\t\twidth: 120,\r\n\t\t\ttextWrap: \"word-break\",\r\n\t\t\tellipsis: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tkey: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tkey: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tkey: \"bus\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tkey: \"truck\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"오토바이\",\r\n\t\t\tkey: \"motor\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"motorpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\tvar TotalData = [];\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (countCol < 3) {\r\n\t\t\t\tif (countCol === 0) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"월간전체\";\r\n\t\t\t\t} else if (countCol === 1) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"평일전체\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"주말전체\";\r\n\t\t\t\t}\r\n\t\t\t\tcountCol += 1;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"time\"] = moment(recordDate).format(\"YYYY년 MM월 DD일\");\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tdataSource={Data}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tpagination={{ hideOnSinglePage: true }}\r\n\t\t\t\t\tbordered\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MTFirstTable;\r\n",["407","408"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleCnt.js",["409"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst VehicleCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"1\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar cntCar = [];\r\n\t\tvar cntBus = [];\r\n\t\tvar cntTruck = [];\r\n\t\tvar cntMotor = [];\r\n\t\tvar cntTotalData = [];\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst { laneNumber, carVolume, mBusVolume, mTruckVolume, motorVolume } =\r\n\t\t\t\tTrafficData;\r\n\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\r\n\t\t\ttempCar[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carVolume;\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusVolume;\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckVolume;\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorVolume;\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\r\n\t\t\tcntCar.push(tempCar);\r\n\t\t\tcntBus.push(tempBus);\r\n\t\t\tcntTruck.push(tempTruck);\r\n\t\t\tcntMotor.push(tempMotor);\r\n\t\t});\r\n\t\tcntTotalData = cntCar.concat(cntBus.concat(cntTruck.concat(cntMotor)));\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"laneNum\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default VehicleCnt;\r\n",["410","411"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js",["412"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTPCU = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar TotalData = [];\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tlet tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehiclePassengerCarUnit;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlegend: true,\r\n\t\tseriesField: \"key\",\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTPCU;\r\n",["413","414"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js",["415","416","417","418","419","420"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js",["421","422"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Spin } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport GeneralVisualization from \"../../organisms/generalVisualization/GeneralVisualization\";\r\nimport TimeStatistic from \"../../organisms/visualStatistic/timeStat/TimeStat\";\r\nimport LaneStatistic from \"../../organisms/visualStatistic/laneStat/LaneStat\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst DayStatPage = (props) => {\r\n\tconst { setLoggedIn, isMaster, setRealFirstFilter } = props;\r\n\tconst { Content } = Layout;\r\n\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [count, setCount] = useState(false);\r\n\tconst [emptyErr, setEmptyErr] = useState(false);\r\n\tconst [futureErr, setFutureErr] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"statistic-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"통계 분석\", \"일간 별\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tfirstFilter={firstFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\temptyErr={emptyErr}\r\n\t\t\t\t\t\t\tfutureErr={futureErr}\r\n\t\t\t\t\t\t\tcascaderText=\"확인을 희망하는 구간을 선택하세요\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\tcount ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<GeneralVisualization\r\n\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\tpage=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\trefresh={false}\r\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{timeClassification ? (\r\n\t\t\t\t\t\t\t\t\t\t<TimeStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t\tsetEmptyErr={setEmptyErr}\r\n\t\t\t\t\t\t\t\t\t\t\tsetFutureErr={setFutureErr}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<LaneStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t\tsetEmptyErr={setEmptyErr}\r\n\t\t\t\t\t\t\t\t\t\t\tsetFutureErr={setFutureErr}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcity: state.location.city,\r\n\t\tdistrict: state.location.district,\r\n\t\troad: state.location.road,\r\n\t\tspot: state.location.spot,\r\n\t\tcamera: state.location.camera,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationInfo: () => {\r\n\t\t\tdispatch(actions.getLocation());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DayStatPage);\r\n",["423","424"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js",["425"],"import React, { useState } from \"react\";\r\nimport { Radio, Typography } from \"antd\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst TimeFilter = (props) => {\r\n\tconst { value, setValue, setChanged } = props;\r\n\tconst { Text } = Typography;\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetValue(e.target.value);\r\n\t\tsetChanged(true);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"multi-radio-body\">\r\n\t\t\t<Text strong style={{ marginRight: 10, minWidth: 60 }}>\r\n\t\t\t\t선택사항\r\n\t\t\t</Text>\r\n\t\t\t<Radio.Group onChange={onChange} value={value}>\r\n\t\t\t\t<Radio value=\"ALL\">전체</Radio>\r\n\t\t\t\t<Radio value=\"DAY\">평일</Radio>\r\n\t\t\t\t<Radio value=\"END\">주말</Radio>\r\n\t\t\t</Radio.Group>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TimeFilter;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js",["426"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Spin } from \"antd\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport GeneralVisualization from \"../../organisms/generalVisualization/GeneralVisualization\";\r\nimport TimeStatistic from \"../../organisms/visualStatistic/timeStat/TimeStat\";\r\nimport LaneStatistic from \"../../organisms/visualStatistic/laneStat/LaneStat\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst MonthStatPage = (props) => {\r\n\tconst { setLoggedIn, isMaster, setRealFirstFilter } = props;\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [additionalFilter, setAddFilter] = useState(\"ALL\");\r\n\tconst [count, setCount] = useState(false);\r\n\tconst [emptyErr, setEmptyErr] = useState(false);\r\n\tconst [futureErr, setFutureErr] = useState(false);\r\n\r\n\tconst { Content } = Layout;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"statistic-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"통계 분석\", \"월간 별\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"MONTH\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tfirstFilter={firstFilter}\r\n\t\t\t\t\t\t\tsetAddFilter={setAddFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\temptyErr={emptyErr}\r\n\t\t\t\t\t\t\tfutureErr={futureErr}\r\n\t\t\t\t\t\t\tcascaderText=\"확인을 희망하는 구간을 선택하세요\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\tcount ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<GeneralVisualization\r\n\t\t\t\t\t\t\t\t\t\tperiod=\"MONTH\"\r\n\t\t\t\t\t\t\t\t\t\tpage=\"MONTH\"\r\n\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\trefresh={false}\r\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{timeClassification ? (\r\n\t\t\t\t\t\t\t\t\t\t<TimeStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"MONTH\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t\tsetEmptyErr={setEmptyErr}\r\n\t\t\t\t\t\t\t\t\t\t\tsetFutureErr={setFutureErr}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<LaneStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"MONTH\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\tadditionalFilter={additionalFilter}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t\tsetEmptyErr={setEmptyErr}\r\n\t\t\t\t\t\t\t\t\t\t\tsetFutureErr={setFutureErr}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MonthStatPage;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PeakHourFlowRate.js",[],["427","428"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\bidirectionalBar\\DayNight.js",["429"],"import React, { useState, useEffect } from \"react\";\r\nimport { BidirectionalBar } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst MyBidirectionalBar = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"6\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar dataSample = [\r\n\t\t\t{\r\n\t\t\t\t차종: \"승용차(대)\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t차종: \"버스(대)\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t차종: \"화물차(대)\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t차종: \"오토바이(대)\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t];\r\n\t\tvar trafficData = trafficTotalData[0];\r\n\r\n\t\tdataSample[0][\"야간 12시간 교통량\"] = trafficData[\"carNighttimeVolume\"];\r\n\t\tdataSample[1][\"야간 12시간 교통량\"] = trafficData[\"mBusNighttimeVolume\"];\r\n\t\tdataSample[2][\"야간 12시간 교통량\"] = trafficData[\"mTruckNighttimeVolume\"];\r\n\t\tdataSample[3][\"야간 12시간 교통량\"] = trafficData[\"motorNighttimeVolume\"];\r\n\r\n\t\tdataSample[0][\"주간 12시간 교통량\"] = trafficData[\"carDaytimeVolume\"];\r\n\t\tdataSample[1][\"주간 12시간 교통량\"] = trafficData[\"mBusDaytimeVolume\"];\r\n\t\tdataSample[2][\"주간 12시간 교통량\"] = trafficData[\"mTruckDaytimeVolume\"];\r\n\t\tdataSample[3][\"주간 12시간 교통량\"] = trafficData[\"motorDaytimeVolume\"];\r\n\t\tsetData(dataSample);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\twidth: 400,\r\n\t\theight: 400,\r\n\t\txField: \"차종\",\r\n\t\txAxis: { position: \"bottom\" },\r\n\t\tinteractions: [{ type: \"active-region\" }],\r\n\t\tyField: [\"주간 12시간 교통량\", \"야간 12시간 교통량\"],\r\n\t\ttooltip: {\r\n\t\t\tshared: true,\r\n\t\t\tshowMarkers: false,\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<BidirectionalBar {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MyBidirectionalBar;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js",["430","431"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\PHF.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js",["432"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js",["433"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js",["434","435"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Tooltip, Typography } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport VideoContainer from \"../../organisms/videoContainer/StreamingContainer\";\r\nimport CascaderBtn from \"../../atoms/cascaderBtn/CascaderBtn\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst RealtimeStreamingPage = (props) => {\r\n\tconst { setLoggedIn, isMaster, setRealFirstFilter, realFirstFilter } = props;\r\n\r\n\tconst { Content } = Layout;\r\n\tconst { Title } = Typography;\r\n\r\n\tconst [camNameAdd, setCamNameAdd] = useState({});\r\n\tconst [isLoadingNameAdd, setLoadingNameAdd] = useState(true);\r\n\tconst [currNameAdd, setCurrNameAdd] = useState({});\r\n\tconst [isCurrLoading, setCurrLoading] = useState(true);\r\n\r\n\tconst date = moment(new Date()).format(\"YYYY-MM-DD\");\r\n\tconst currentTime = moment(new Date()).format(\"HH:mm:ss\");\r\n\r\n\tvar timer;\r\n\tconst spinTimer = () => {\r\n\t\tsetCurrLoading(true);\r\n\t\tif (timer) {\r\n\t\t\tclearTimeout(timer);\r\n\t\t}\r\n\t\ttimer = setTimeout(() => {\r\n\t\t\tsetCurrNameAdd(camNameAdd);\r\n\t\t\tsetCurrLoading(false);\r\n\t\t}, 500);\r\n\t\treturn () => clearTimeout(timer);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isLoadingNameAdd) {\r\n\t\t\tspinTimer();\r\n\t\t}\r\n\t}, [isLoadingNameAdd]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"realtime-streaming-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider setLoggedIn={setLoggedIn} />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"실시간 영상\"]} />\r\n\t\t\t\t\t\t<div className=\"search-input\">\r\n\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\tplacement=\"rightBottom\"\r\n\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t\"지정한 구간의 실시간 영상 및 해당 구간의 간략한 정보를 확인 할 수 있습니다\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Title level={1} style={{ minWidth: 200, textAlign: \"center\" }}>\r\n\t\t\t\t\t\t\t\t\t실시간 영상\r\n\t\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t<CascaderBtn\r\n\t\t\t\t\t\t\t\tpage=\"STREAMING\"\r\n\t\t\t\t\t\t\t\tsetCamNameAdd={setCamNameAdd}\r\n\t\t\t\t\t\t\t\tsetLoadingNameAdd={setLoadingNameAdd}\r\n\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\ttooltipText=\"검색을 누르시면 해당 구간의 실시간 영상 페이지로 이동합니다\"\r\n\t\t\t\t\t\t\t\tcascaderText=\"검색 희망하는 구간을 선택하세요\"\r\n\t\t\t\t\t\t\t\tsetRealFirstFilter={setRealFirstFilter}\r\n\t\t\t\t\t\t\t\trealFirstFilter={realFirstFilter}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"video-container-4\">\r\n\t\t\t\t\t\t\t{!isCurrLoading &&\r\n\t\t\t\t\t\t\t\tObject.getOwnPropertyNames(currNameAdd).map(function (key) {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\t\t\tcamName={currNameAdd[key][0]}\r\n\t\t\t\t\t\t\t\t\t\t\thttpAddress={currNameAdd[key][1]}\r\n\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\t\t\trealtimeCamCode={key}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t{/* {address[0] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-1 [하행]\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[0]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{address[1] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-2 [하행]\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[1]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{address[2] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-3 [하행]\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[2]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RealtimeStreamingPage;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js",["436","437"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\search\\OverspeedPage.js",["438","439"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Typography } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport OverspeedTable from \"../../molecules/StatisticsTable/OverSpeedTable\";\r\nimport NotificationButton from \"../../atoms/notificationButton/NotificationButton\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst OverspeedPage = (props) => {\r\n\tconst { camera, setLoggedIn, isMaster, setRealFirstFilter } = props;\r\n\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [count, setCount] = useState(false);\r\n\tconst [isRefresh, setRefresh] = useState(false);\r\n\r\n\tconst { Content } = Layout;\r\n\tconst { Title, Paragraph, Text } = Typography;\r\n\tconst descriptionText = (\r\n\t\t<>\r\n\t\t\t<Paragraph>\r\n\t\t\t\t해당 구간에서 발생한 과속 차량에 대한 정보가 표시됩니다\r\n\t\t\t</Paragraph>\r\n\t\t\t<Paragraph>표시정보:</Paragraph>\r\n\t\t\t<Paragraph>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>과속 탐지 시간</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>차량 번호</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>위반 속도</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>위반 차선</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>차종</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Text>과속 차량 이미지</Text>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</Paragraph>\r\n\t\t</>\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"과속 데이터 조회\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"OVERSPEED\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\tsetRefresh={setRefresh}\r\n\t\t\t\t\t\t\tcascaderText=\"확인을 희망하는 구간을 선택하세요\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div className=\"table-title-text\">\r\n\t\t\t\t\t\t\t\t\t<Title\r\n\t\t\t\t\t\t\t\t\t\tlevel={5}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: 0,\r\n\t\t\t\t\t\t\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{camera}\r\n\t\t\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t\t\t\t<NotificationButton description={descriptionText} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<OverspeedTable\r\n\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\tisRefresh={isRefresh}\r\n\t\t\t\t\t\t\t\t\tsetRefresh={setRefresh}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcamera: state.location.camera,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(OverspeedPage);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\search\\SearchPage.js",["440","441"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport SearchCollapsedTable from \"../../organisms/searchCollapsedTable/SearchCollapsedTable\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst SearchDownloadPage = (props) => {\r\n\tconst { setLoggedIn, isMaster, setRealFirstFilter } = props;\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [count, setCount] = useState(false);\r\n\tconst [emptyErr, setEmptyErr] = useState(false);\r\n\tconst [futureErr, setFutureErr] = useState(false);\r\n\tconst [over31Err, setOver31Err] = useState(false);\r\n\r\n\tconst { Content } = Layout;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"기간 별 데이터 조회\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"SEARCH\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tfirstFilter={firstFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\temptyErr={emptyErr}\r\n\t\t\t\t\t\t\tfutureErr={futureErr}\r\n\t\t\t\t\t\t\tover31Err={over31Err}\r\n\t\t\t\t\t\t\tcascaderText=\"기간 별 조회를 희망하는 구간을 선택하세요\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\t<SearchCollapsedTable\r\n\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\tsetEmptyErr={setEmptyErr}\r\n\t\t\t\t\t\t\t\tsetFutureErr={setFutureErr}\r\n\t\t\t\t\t\t\t\tsetOver31Err={setOver31Err}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchDownloadPage;\r\n",["442","443"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\login\\LoginPage.js",["444"],"import React, { useEffect } from \"react\";\r\nimport { Layout, Typography } from \"antd\";\r\n\r\nimport Header from \"../../organisms/header\";\r\nimport LoginCard from \"../../organisms/loginCard/LoginCard\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst LoginPage = (props) => {\r\n\tconst { setLoggedIn, setRealFirstFilter } = props;\r\n\tconst { Content, Footer } = Layout;\r\n\tconst { Title, Text } = Typography;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"login-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header page=\"SIGNIN\" />\r\n\t\t\t\t\t<Content style={{ margin: \"0\" }}>\r\n\t\t\t\t\t\t<div className=\"site-layout-background\" style={{ minHeight: 720 }}>\r\n\t\t\t\t\t\t\t<Title level={2} style={{ marginTop: 20 }}>\r\n\t\t\t\t\t\t\t\t글로벌브릿지\r\n\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t\t<Title level={2} style={{ marginTop: 0, minWidth: 454 }}>\r\n\t\t\t\t\t\t\t\t인공지능 교통 데이터 수집 시스템\r\n\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t\t<Text type=\"secondary\">GBAI-ITS Ver.100-2020</Text>\r\n\t\t\t\t\t\t\t<LoginCard setLoggedIn={setLoggedIn} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t\t<Footer style={{ textAlign: \"center\" }}>\r\n\t\t\t\t\t\tGBAI-ITS Ver.100-2020 Created by Global Bridge Co., Ltd\r\n\t\t\t\t\t</Footer>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js",["445"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SearchAccount.js",["446"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\PasswordPage.js",["447"],"import React, { useEffect } from \"react\";\r\nimport { Layout, Typography, Divider } from \"antd\";\r\n\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport PasswordForm from \"../../organisms/accountForm/PasswordFrom\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst PasswordPage = (props) => {\r\n\tconst { setLoggedIn, isMaster, setRealFirstFilter } = props;\r\n\tconst { Content } = Layout;\r\n\tconst { Title } = Typography;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRealFirstFilter(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"account-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb\r\n\t\t\t\t\t\t\tpageHierarchy={[\"대시보드\", \"개인정보\", \"비밀번호 변경\"]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Title level={3} style={{ minWidth: 160 }}>\r\n\t\t\t\t\t\t\t비밀번호 변경\r\n\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t<PasswordForm isMaster={isMaster} setLoggedIn={setLoggedIn} />\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PasswordPage;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js",["448"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js",["449"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MonthPeakTime.js",["450"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst MonthPeakTime = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"7\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst { recordDate, totalVehiclePeak15MinuteTime } = TrafficData;\r\n\t\t\tconst tempMinute = new Date(totalVehiclePeak15MinuteTime).getMinutes();\r\n\r\n\t\t\tlet temp = {};\r\n\t\t\ttemp[\"date\"] = moment(recordDate).format(\"MM-DD\");\r\n\t\t\ttemp[\"value\"] = new Date(totalVehiclePeak15MinuteTime).getHours();\r\n\t\t\ttemp[\"minute\"] =\r\n\t\t\t\ttempMinute === 0 ? `${tempMinute}${tempMinute}` : tempMinute;\r\n\t\t\tTotalData.push(temp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"date\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: false,\r\n\r\n\t\tlabel: {\r\n\t\t\tformatter: function formatter(v) {\r\n\t\t\t\tlet timeStr = v[\"value\"] + \":\" + v[\"minute\"];\r\n\t\t\t\treturn \"\"\r\n\t\t\t\t\t.concat(timeStr)\r\n\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t},\r\n\t\tpoint: {\r\n\t\t\tsize: 5,\r\n\t\t\tshape: \"diamond\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfill: \"white\",\r\n\t\t\t\tstroke: \"#5B8FF9\",\r\n\t\t\t\tlineWidth: 2,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: false,\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t\tstate: {\r\n\t\t\tactive: {\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tshadowColor: \"yellow\",\r\n\t\t\t\t\tshadowBlur: 4,\r\n\t\t\t\t\tstroke: \"transparent\",\r\n\t\t\t\t\tfill: \"red\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\ttheme: {\r\n\t\t\tgeometries: {\r\n\t\t\t\tpoint: {\r\n\t\t\t\t\tdiamond: {\r\n\t\t\t\t\t\tactive: {\r\n\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\tshadowColor: \"#FCEBB9\",\r\n\t\t\t\t\t\t\t\tshadowBlur: 2,\r\n\t\t\t\t\t\t\t\tstroke: \"#F6BD16\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tinteractions: [{ type: \"marker-active\" }],\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MonthPeakTime;\r\n",["451","452"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTCnt.js",["453"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js",["454"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js",[],["455","456"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js",["457","458","459"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\notificationButton\\NotificationButton.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleRatio.js",["460"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst VehicleRatio = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"3\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar carRatio = [];\r\n\t\tvar busRatio = [];\r\n\t\tvar truckRatio = [];\r\n\t\tvar motorRatio = [];\r\n\t\tvar RatioTotalData = [];\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\r\n\t\t\ttempCar[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = parseFloat((carVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = parseFloat((mBusVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = parseFloat((mTruckVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = parseFloat((motorVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\r\n\t\t\tcarRatio.push(tempCar);\r\n\t\t\tbusRatio.push(tempBus);\r\n\t\t\ttruckRatio.push(tempTruck);\r\n\t\t\tmotorRatio.push(tempMotor);\r\n\t\t});\r\n\t\tRatioTotalData = carRatio.concat(\r\n\t\t\tbusRatio.concat(truckRatio.concat(motorRatio))\r\n\t\t);\r\n\t\tsetData(RatioTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"laneNum\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"%\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default VehicleRatio;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js",["461","462"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTOverSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar TotalData = [];\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = motorSpdVolume;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t\tseriesField: \"key\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTOverSpeed;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js",["463"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StatContainer.js",[],["464","465"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTSecondTable.js",["466"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js",["467"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js",["468"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst DLFisrtTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar FristRow;\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tFristRow = true;\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"lane\",\r\n\t\t\twidth: 60,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"오토바이\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (FristRow) {\r\n\t\t\t\tdataTemp[\"lane\"] = \"전체\";\r\n\t\t\t\tFristRow = false;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"lane\"] = `${laneNumber} 차선`;\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tdataSource={Data}\r\n\t\t\t\t\tpagination={{ hideOnSinglePage: true }}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tbordered\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default DLFisrtTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js",["469"],"/* eslint-disable jsx-a11y/media-has-caption */\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport Hls from \"hls.js\";\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst Video = (props) => {\r\n\tconst { source, showControls = false, setVideoSource } = props;\r\n\tconst videoRef = useRef();\r\n\tconst handleClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\te.target.requestFullscreen();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!videoRef) return;\r\n\r\n\t\tconst hls = new Hls({\r\n\t\t\txhrSetup: (xhr, url) => {\r\n\t\t\t\txhr.setRequestHeader(\r\n\t\t\t\t\t\"authorization\",\r\n\t\t\t\t\t`Bearer ${sessionStorage.getItem(\"token\")}`\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (videoRef.current.canPlayType(\"application/vnd.apple.mpegurl\")) {\r\n\t\t\tvideoRef.current.src = source;\r\n\t\t\tvideoRef.addEventListener(\"loadedmetadata\", () => {\r\n\t\t\t\tvideoRef.current.play();\r\n\t\t\t});\r\n\t\t} else if (Hls.isSupported()) {\r\n\t\t\thls.attachMedia(videoRef.current);\r\n\t\t\thls.on(Hls.Events.MEDIA_ATTACHED, () => {\r\n\t\t\t\thls.loadSource(source);\r\n\t\t\t\thls.on(Hls.Events.MANIFEST_PARSED, () => {\r\n\t\t\t\t\tsetVideoSource(true);\r\n\t\t\t\t\tvideoRef.current.play();\r\n\t\t\t\t});\r\n\t\t\t\thls.on(Hls.Events.ERROR, (_, data) => {\r\n\t\t\t\t\tif (data.response) {\r\n\t\t\t\t\t\tif (data.response.code === 404) {\r\n\t\t\t\t\t\t\tif (setVideoSource) {\r\n\t\t\t\t\t\t\t\tsetVideoSource(false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (data.response.code === 401) {\r\n\t\t\t\t\t\t\t// jwt가 invalid 할 때\r\n\t\t\t\t\t\t\tif (setVideoSource) {\r\n\t\t\t\t\t\t\t\tsetVideoSource(false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\talert(\"실시간 영상이 지원되지 않는 브라우저입니다\");\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\thls.destroy();\r\n\t\t};\r\n\t}, [source]);\r\n\r\n\treturn (\r\n\t\t<video\r\n\t\t\tref={videoRef}\r\n\t\t\tsrc={source}\r\n\t\t\tonClick={handleClick}\r\n\t\t\tmuted\r\n\t\t\tautoPlay\r\n\t\t\tcontrols={isMobile || showControls}\r\n\t\t\tpreload=\"auto\"\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Video;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTPCU.js",["470"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst MTPCULine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar PCUTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tlet tempTotal = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehiclePassengerCarUnit;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tPCUTotalData.push(tempCar);\r\n\t\t\tPCUTotalData.push(tempBus);\r\n\t\t\tPCUTotalData.push(tempTruck);\r\n\t\t\tPCUTotalData.push(tempMotor);\r\n\t\t\tPCUTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(PCUTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MTPCULine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js",["471","472"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport { act } from \"react-dom/cjs/react-dom-test-utils.production.min\";\r\n\r\nconst OverSpeedCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar cntCar = [];\r\n\t\tvar cntBus = [];\r\n\t\tvar cntTruck = [];\r\n\t\tvar cntMotor = [];\r\n\t\tvar cntTotalData = [];\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\r\n\t\t\ttempCar[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\t\t\tcntCar.push(tempCar);\r\n\t\t\tcntBus.push(tempBus);\r\n\t\t\tcntTruck.push(tempTruck);\r\n\t\t\tcntMotor.push(tempMotor);\r\n\t\t});\r\n\t\tcntTotalData = cntCar.concat(cntBus.concat(cntTruck.concat(cntMotor)));\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"laneNum\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default OverSpeedCnt;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\statisticText\\Peak15.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js",["473","474"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\location.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js",["475"],"import React, { useEffect, useState } from \"react\";\r\nimport { Gauge } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst AvgSpeedGauge = (props) => {\r\n\tconst { trafficData, page } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoadingData, setLoadingData] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingData(true);\r\n\t\tsetData([]);\r\n\r\n\t\tparseData();\r\n\t}, [trafficData]);\r\n\r\n\tconst parseData = () => {\r\n\t\tif (page === \"REALSTATISTIC\") {\r\n\t\t\tlet value = 0;\r\n\t\t\ttrafficData.forEach((data) => {\r\n\t\t\t\tvalue += data[\"totalVehicleAvgSpeed\"];\r\n\t\t\t});\r\n\t\t\tvalue = value / trafficData.length / 100;\r\n\t\t\tsetData(value);\r\n\t\t} else {\r\n\t\t\tsetData(trafficData[0][\"totalVehicleAvgSpeed\"] / 100);\r\n\t\t}\r\n\t\tsetLoadingData(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tpercent: Data,\r\n\t\trange: {\r\n\t\t\tticks: [0, 1 / 3, 2 / 3, 1],\r\n\t\t\tcolor: [\"#595c97\"],\r\n\t\t},\r\n\t\tindicator: {\r\n\t\t\tpointer: { style: { stroke: \"#D0D0D0\", lineWidth: 2 } },\r\n\t\t\tpin: null,\r\n\t\t},\r\n\t\taxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn Number(v) * 100;\r\n\t\t\t\t},\r\n\t\t\t\tstyle: { fontSize: 10 },\r\n\t\t\t},\r\n\t\t},\r\n\t\tstatistic: {\r\n\t\t\tcontent: {\r\n\t\t\t\tformatter: function formatter(_ref) {\r\n\t\t\t\t\treturn (_ref.percent * 100).toFixed(2) + \" km/h\";\r\n\t\t\t\t},\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfontSize: \"14px\",\r\n\t\t\t\t\tlineHeight: \"30px\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoadingData ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Gauge {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AvgSpeedGauge;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js",["476"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst AvgSpeedLine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar avgSpeedTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\r\n\t\t\ttempCar[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\tavgSpeedTotalData.push(tempCar);\r\n\t\t\tavgSpeedTotalData.push(tempBus);\r\n\t\t\tavgSpeedTotalData.push(tempTruck);\r\n\t\t\tavgSpeedTotalData.push(tempMotor);\r\n\t\t});\r\n\t\tsetData(avgSpeedTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"lane\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tstyle: {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"95%\",\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default AvgSpeedLine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTCnt.js",["477"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\header\\index.js",["478"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js",["479"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountTable\\AccountTable.js",["480","481","482"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n\tTable,\r\n\tTag,\r\n\tmessage,\r\n\tSpin,\r\n\tTypography,\r\n\tPopconfirm,\r\n\tDivider,\r\n} from \"antd\";\r\nimport {\r\n\tCheckCircleOutlined,\r\n\tExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst AccountTable = (props) => {\r\n\tconst { baseURL } = props;\r\n\tconst { Text } = Typography;\r\n\tconst { setLoggedIn } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoadingData, setLoadingData] = useState(false);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingData(true);\r\n\t\tsetEmptyData(false);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, []);\r\n\tconst handleUnlock = (key, username) => {\r\n\t\taxios\r\n\t\t\t.delete(`${baseURL}/users/${username}/lock`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst dataSource = [...Data];\r\n\t\t\t\tdataSource[key][\"locked\"] = false;\r\n\t\t\t\tsetData(dataSource);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t} else if (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\r\n\t\t\t\t\t\t\"네트워크 문제 혹은 일시적인 오류로 데이터를 불러올 수 없습니다\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleDelete = (key, username) => {\r\n\t\taxios\r\n\t\t\t.delete(`${baseURL}/users/${username}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst dataSource = [...Data];\r\n\t\t\t\tsetData(dataSource.filter((item) => item.key !== key));\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t} else if (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\r\n\t\t\t\t\t\t\"네트워크 문제 혹은 일시적인 오류로 데이터를 불러올 수 없습니다\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"아이디\",\r\n\t\t\tdataIndex: \"username\",\r\n\t\t\tkey: \"username\",\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\ttitle: \"소속\",\r\n\t\t\tdataIndex: \"affiliate\",\r\n\t\t\tkey: \"affiliate\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"상태\",\r\n\t\t\tkey: \"locked\",\r\n\t\t\tdataIndex: \"locked\",\r\n\t\t\trender: (text, record) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{record.locked ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Tag icon={<ExclamationCircleOutlined />} color=\"red\">\r\n\t\t\t\t\t\t\t\t잠김\r\n\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t\t<Divider type=\"vertical\" />\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\ttitle=\"잠금을 해체하시겠습니까?\"\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleUnlock(record.key, record.username)}\r\n\t\t\t\t\t\t\t\tokText=\"예\"\r\n\t\t\t\t\t\t\t\tcancelText=\"아니요\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#688df2\",\r\n\t\t\t\t\t\t\t\t\t\tmarginLeft: 7,\r\n\t\t\t\t\t\t\t\t\t\talignSelf: \"baseline\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t잠금 해제\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Tag icon={<CheckCircleOutlined />} color=\"green\">\r\n\t\t\t\t\t\t\t\t정상\r\n\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t\t<Divider type=\"vertical\" />\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tcolor: \"#dcdee0\",\r\n\t\t\t\t\t\t\t\t\tmarginLeft: 7,\r\n\t\t\t\t\t\t\t\t\talignSelf: \"baseline\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t잠금 해제\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"\",\r\n\t\t\tdataIndex: \"deleteAcc\",\r\n\r\n\t\t\tkey: \"deleteAcc\",\r\n\t\t\trender: (text, record) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\ttitle=\"계정을 삭제하시겠습니까?\"\r\n\t\t\t\t\t\tonConfirm={() => handleDelete(record.key, record.username)}\r\n\t\t\t\t\t\tokText=\"예\"\r\n\t\t\t\t\t\tcancelText=\"아니요\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tcolor: \"#688df2\",\r\n\t\t\t\t\t\t\t\talignSelf: \"baseline\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t계정 삭제\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t</>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}/users`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${sessionStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tres.data.forEach((eachData, index) => {\r\n\t\t\t\t\t\tconst { username, affiliate, locked } = eachData;\r\n\t\t\t\t\t\tlet dataTemp = {};\r\n\r\n\t\t\t\t\t\tdataTemp[\"key\"] = index;\r\n\t\t\t\t\t\tdataTemp[\"username\"] = username;\r\n\t\t\t\t\t\tdataTemp[\"affiliate\"] = affiliate;\r\n\t\t\t\t\t\tdataTemp[\"locked\"] = locked;\r\n\t\t\t\t\t\tTotalData.push(dataTemp);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetData(TotalData);\r\n\t\t\t\t\tsetLoadingData(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t} else if (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\r\n\t\t\t\t\t\t\"네트워크 문제 혹은 일시적인 오류로 데이터를 불러올 수 없습니다\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"account-table\">\r\n\t\t\t{isEmptyData ? (\r\n\t\t\t\t<div className=\"empty-data-text\">\r\n\t\t\t\t\t<Text strong>발급된 계정이 없습니다</Text>\r\n\t\t\t\t</div>\r\n\t\t\t) : isLoadingData ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table\r\n\t\t\t\t\tpagination={{ hideOnSinglePage: true }}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tdataSource={Data}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(AccountTable);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WMFlowRate.js",["483"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js",["484"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js",["485"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTVehicleRatio.js",["486"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js",["487"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js",["488"],{"ruleId":"489","severity":1,"message":"490","line":36,"column":8,"nodeType":"491","messageId":"492","endLine":36,"endColumn":15},{"ruleId":"493","severity":1,"message":"494","line":60,"column":5,"nodeType":"495","endLine":60,"endColumn":53,"suggestions":"496"},{"ruleId":"497","replacedBy":"498"},{"ruleId":"499","replacedBy":"500"},{"ruleId":"497","replacedBy":"501"},{"ruleId":"499","replacedBy":"502"},{"ruleId":"489","severity":1,"message":"503","line":2,"column":16,"nodeType":"491","messageId":"492","endLine":2,"endColumn":23},{"ruleId":"493","severity":1,"message":"504","line":72,"column":5,"nodeType":"495","endLine":72,"endColumn":50,"suggestions":"505"},{"ruleId":"493","severity":1,"message":"504","line":81,"column":5,"nodeType":"495","endLine":81,"endColumn":14,"suggestions":"506"},{"ruleId":"497","replacedBy":"507"},{"ruleId":"499","replacedBy":"508"},{"ruleId":"493","severity":1,"message":"509","line":15,"column":5,"nodeType":"495","endLine":15,"endColumn":18,"suggestions":"510"},{"ruleId":"497","replacedBy":"511"},{"ruleId":"499","replacedBy":"512"},{"ruleId":"493","severity":1,"message":"509","line":15,"column":5,"nodeType":"495","endLine":15,"endColumn":18,"suggestions":"513"},{"ruleId":"497","replacedBy":"514"},{"ruleId":"499","replacedBy":"515"},{"ruleId":"489","severity":1,"message":"503","line":2,"column":16,"nodeType":"491","messageId":"492","endLine":2,"endColumn":23},{"ruleId":"493","severity":1,"message":"504","line":36,"column":5,"nodeType":"495","endLine":36,"endColumn":55,"suggestions":"516"},{"ruleId":"497","replacedBy":"517"},{"ruleId":"499","replacedBy":"518"},{"ruleId":"493","severity":1,"message":"509","line":19,"column":5,"nodeType":"495","endLine":19,"endColumn":40,"suggestions":"519"},{"ruleId":"497","replacedBy":"520"},{"ruleId":"499","replacedBy":"521"},{"ruleId":"493","severity":1,"message":"509","line":29,"column":5,"nodeType":"495","endLine":29,"endColumn":40,"suggestions":"522"},{"ruleId":"497","replacedBy":"523"},{"ruleId":"499","replacedBy":"524"},{"ruleId":"493","severity":1,"message":"525","line":29,"column":5,"nodeType":"495","endLine":29,"endColumn":7,"suggestions":"526"},{"ruleId":"497","replacedBy":"527"},{"ruleId":"499","replacedBy":"528"},{"ruleId":"497","replacedBy":"529"},{"ruleId":"499","replacedBy":"530"},{"ruleId":"493","severity":1,"message":"531","line":16,"column":14,"nodeType":"532","endLine":16,"endColumn":15},{"ruleId":"497","replacedBy":"533"},{"ruleId":"499","replacedBy":"534"},{"ruleId":"493","severity":1,"message":"509","line":18,"column":5,"nodeType":"495","endLine":18,"endColumn":40,"suggestions":"535"},{"ruleId":"497","replacedBy":"536"},{"ruleId":"499","replacedBy":"537"},{"ruleId":"493","severity":1,"message":"509","line":29,"column":5,"nodeType":"495","endLine":29,"endColumn":40,"suggestions":"538"},{"ruleId":"497","replacedBy":"539"},{"ruleId":"499","replacedBy":"540"},{"ruleId":"493","severity":1,"message":"541","line":126,"column":19,"nodeType":"532","endLine":126,"endColumn":20},{"ruleId":"493","severity":1,"message":"542","line":127,"column":20,"nodeType":"532","endLine":127,"endColumn":21},{"ruleId":"493","severity":1,"message":"543","line":128,"column":23,"nodeType":"532","endLine":128,"endColumn":24},{"ruleId":"493","severity":1,"message":"544","line":129,"column":28,"nodeType":"545","endLine":129,"endColumn":30},{"ruleId":"546","severity":1,"message":"547","line":261,"column":38,"nodeType":"548","messageId":"549","endLine":261,"endColumn":40},{"ruleId":"546","severity":1,"message":"550","line":502,"column":38,"nodeType":"548","messageId":"551","endLine":502,"endColumn":40},{"ruleId":"489","severity":1,"message":"552","line":3,"column":8,"nodeType":"491","messageId":"492","endLine":3,"endColumn":13},{"ruleId":"493","severity":1,"message":"525","line":31,"column":5,"nodeType":"495","endLine":31,"endColumn":7,"suggestions":"553"},{"ruleId":"497","replacedBy":"554"},{"ruleId":"499","replacedBy":"555"},{"ruleId":"489","severity":1,"message":"556","line":1,"column":17,"nodeType":"491","messageId":"492","endLine":1,"endColumn":25},{"ruleId":"493","severity":1,"message":"525","line":29,"column":5,"nodeType":"495","endLine":29,"endColumn":7,"suggestions":"557"},{"ruleId":"497","replacedBy":"558"},{"ruleId":"499","replacedBy":"559"},{"ruleId":"493","severity":1,"message":"509","line":16,"column":5,"nodeType":"495","endLine":16,"endColumn":40,"suggestions":"560"},{"ruleId":"489","severity":1,"message":"561","line":29,"column":9,"nodeType":"491","messageId":"492","endLine":29,"endColumn":20},{"ruleId":"493","severity":1,"message":"562","line":100,"column":5,"nodeType":"495","endLine":100,"endColumn":53,"suggestions":"563"},{"ruleId":"493","severity":1,"message":"531","line":18,"column":15,"nodeType":"532","endLine":18,"endColumn":16},{"ruleId":"493","severity":1,"message":"564","line":31,"column":5,"nodeType":"495","endLine":31,"endColumn":23,"suggestions":"565"},{"ruleId":"493","severity":1,"message":"566","line":44,"column":5,"nodeType":"495","endLine":44,"endColumn":23,"suggestions":"567"},{"ruleId":"493","severity":1,"message":"525","line":48,"column":5,"nodeType":"495","endLine":48,"endColumn":7,"suggestions":"568"},{"ruleId":"493","severity":1,"message":"569","line":28,"column":5,"nodeType":"495","endLine":28,"endColumn":41,"suggestions":"570"},{"ruleId":"493","severity":1,"message":"571","line":28,"column":6,"nodeType":"572","endLine":28,"endColumn":40},{"ruleId":"489","severity":1,"message":"573","line":21,"column":9,"nodeType":"491","messageId":"492","endLine":21,"endColumn":14},{"ruleId":"493","severity":1,"message":"525","line":59,"column":5,"nodeType":"495","endLine":59,"endColumn":7,"suggestions":"574"},{"ruleId":"489","severity":1,"message":"573","line":18,"column":9,"nodeType":"491","messageId":"492","endLine":18,"endColumn":14},{"ruleId":"493","severity":1,"message":"525","line":27,"column":5,"nodeType":"495","endLine":27,"endColumn":7,"suggestions":"575"},{"ruleId":"497","replacedBy":"576"},{"ruleId":"499","replacedBy":"577"},{"ruleId":"493","severity":1,"message":"525","line":16,"column":5,"nodeType":"495","endLine":16,"endColumn":7,"suggestions":"578"},{"ruleId":"493","severity":1,"message":"525","line":18,"column":5,"nodeType":"495","endLine":18,"endColumn":7,"suggestions":"579"},{"ruleId":"493","severity":1,"message":"525","line":18,"column":5,"nodeType":"495","endLine":18,"endColumn":7,"suggestions":"580"},{"ruleId":"493","severity":1,"message":"525","line":18,"column":5,"nodeType":"495","endLine":18,"endColumn":7,"suggestions":"581"},{"ruleId":"493","severity":1,"message":"582","line":50,"column":5,"nodeType":"495","endLine":50,"endColumn":48,"suggestions":"583"},{"ruleId":"493","severity":1,"message":"584","line":14,"column":5,"nodeType":"495","endLine":14,"endColumn":18,"suggestions":"585"},{"ruleId":"493","severity":1,"message":"509","line":19,"column":5,"nodeType":"495","endLine":19,"endColumn":40,"suggestions":"586"},{"ruleId":"497","replacedBy":"587"},{"ruleId":"499","replacedBy":"588"},{"ruleId":"493","severity":1,"message":"509","line":18,"column":5,"nodeType":"495","endLine":18,"endColumn":40,"suggestions":"589"},{"ruleId":"489","severity":1,"message":"490","line":19,"column":8,"nodeType":"491","messageId":"492","endLine":19,"endColumn":15},{"ruleId":"497","replacedBy":"590"},{"ruleId":"499","replacedBy":"591"},{"ruleId":"489","severity":1,"message":"592","line":9,"column":8,"nodeType":"491","messageId":"492","endLine":9,"endColumn":26},{"ruleId":"489","severity":1,"message":"593","line":26,"column":10,"nodeType":"491","messageId":"492","endLine":26,"endColumn":14},{"ruleId":"493","severity":1,"message":"594","line":46,"column":5,"nodeType":"495","endLine":46,"endColumn":55,"suggestions":"595"},{"ruleId":"493","severity":1,"message":"509","line":17,"column":5,"nodeType":"495","endLine":17,"endColumn":40,"suggestions":"596"},{"ruleId":"493","severity":1,"message":"509","line":29,"column":5,"nodeType":"495","endLine":29,"endColumn":40,"suggestions":"597"},{"ruleId":"489","severity":1,"message":"598","line":40,"column":5,"nodeType":"491","messageId":"492","endLine":40,"endColumn":26},{"ruleId":"493","severity":1,"message":"599","line":13,"column":14,"nodeType":"532","endLine":13,"endColumn":18},{"ruleId":"497","replacedBy":"600"},{"ruleId":"499","replacedBy":"601"},{"ruleId":"493","severity":1,"message":"564","line":17,"column":5,"nodeType":"495","endLine":17,"endColumn":23,"suggestions":"602"},{"ruleId":"493","severity":1,"message":"509","line":18,"column":5,"nodeType":"495","endLine":18,"endColumn":40,"suggestions":"603"},{"ruleId":"493","severity":1,"message":"599","line":15,"column":14,"nodeType":"532","endLine":15,"endColumn":18},{"ruleId":"493","severity":1,"message":"604","line":63,"column":5,"nodeType":"495","endLine":63,"endColumn":13,"suggestions":"605"},{"ruleId":"493","severity":1,"message":"509","line":18,"column":5,"nodeType":"495","endLine":18,"endColumn":40,"suggestions":"606"},{"ruleId":"489","severity":1,"message":"607","line":4,"column":10,"nodeType":"491","messageId":"492","endLine":4,"endColumn":13},{"ruleId":"493","severity":1,"message":"509","line":19,"column":5,"nodeType":"495","endLine":19,"endColumn":40,"suggestions":"608"},{"ruleId":"489","severity":1,"message":"609","line":2,"column":40,"nodeType":"491","messageId":"492","endLine":2,"endColumn":45},{"ruleId":"489","severity":1,"message":"490","line":45,"column":8,"nodeType":"491","messageId":"492","endLine":45,"endColumn":15},{"ruleId":"493","severity":1,"message":"610","line":16,"column":5,"nodeType":"495","endLine":16,"endColumn":18,"suggestions":"611"},{"ruleId":"493","severity":1,"message":"509","line":18,"column":5,"nodeType":"495","endLine":18,"endColumn":40,"suggestions":"612"},{"ruleId":"493","severity":1,"message":"509","line":29,"column":5,"nodeType":"495","endLine":29,"endColumn":40,"suggestions":"613"},{"ruleId":"489","severity":1,"message":"614","line":2,"column":22,"nodeType":"491","messageId":"492","endLine":2,"endColumn":26},{"ruleId":"493","severity":1,"message":"509","line":19,"column":5,"nodeType":"495","endLine":19,"endColumn":40,"suggestions":"615"},{"ruleId":"493","severity":1,"message":"582","line":34,"column":5,"nodeType":"495","endLine":34,"endColumn":7,"suggestions":"616"},{"ruleId":"617","severity":1,"message":"618","line":111,"column":9,"nodeType":"619","endLine":117,"endColumn":10},{"ruleId":"617","severity":1,"message":"618","line":155,"column":7,"nodeType":"619","endLine":160,"endColumn":8},{"ruleId":"493","severity":1,"message":"509","line":30,"column":5,"nodeType":"495","endLine":30,"endColumn":40,"suggestions":"620"},{"ruleId":"493","severity":1,"message":"509","line":17,"column":5,"nodeType":"495","endLine":17,"endColumn":40,"suggestions":"621"},{"ruleId":"493","severity":1,"message":"582","line":28,"column":5,"nodeType":"495","endLine":28,"endColumn":23,"suggestions":"622"},{"ruleId":"493","severity":1,"message":"509","line":19,"column":5,"nodeType":"495","endLine":19,"endColumn":40,"suggestions":"623"},{"ruleId":"493","severity":1,"message":"509","line":19,"column":5,"nodeType":"495","endLine":19,"endColumn":40,"suggestions":"624"},{"ruleId":"493","severity":1,"message":"509","line":29,"column":5,"nodeType":"495","endLine":29,"endColumn":40,"suggestions":"625"},"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosAsync', 'camera', 'city', 'district', 'road', and 'spot'. Either include them or remove the dependency array.","ArrayExpression",["626"],"no-native-reassign",["627"],"no-negated-in-lhs",["628"],["627"],["628"],"'message' is defined but never used.","React Hook useEffect has a missing dependency: 'getTrafficData'. Either include it or remove the dependency array.",["629"],["630"],["627"],["628"],"React Hook useEffect has a missing dependency: 'parseTotalData'. Either include it or remove the dependency array.",["631"],["627"],["628"],["632"],["627"],["628"],["633"],["627"],["628"],["634"],["627"],["628"],["635"],["627"],["628"],"React Hook useEffect has a missing dependency: 'setRealFirstFilter'. Either include it or remove the dependency array.",["636"],["627"],["628"],["627"],["628"],"Assignments to the 'countCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal",["627"],["628"],["637"],["627"],["628"],["638"],["627"],["628"],"Assignments to the 'countFirstCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'countSecondCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'countOverSpeedCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'firstDataLaneTotalTemp' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","array-callback-return","Array.prototype.some() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.some() expects a value to be returned at the end of arrow function.","expectedAtEnd","'axios' is defined but never used.",["639"],["627"],["628"],"'useState' is defined but never used.",["640"],["627"],["628"],["641"],"'isEmptyData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'axiosAsync'. Either include it or remove the dependency array.",["642"],"React Hook useEffect has missing dependencies: 'currentLaneNum' and 'parseData'. Either include them or remove the dependency array.",["643"],"React Hook useEffect has a missing dependency: 'spinTimer'. Either include it or remove the dependency array.",["644"],["645"],"React Hook useEffect has a missing dependency: 'loginStatus'. Either include it or remove the dependency array.",["646"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'count' is assigned a value but never used.",["647"],["648"],["627"],["628"],["649"],["650"],["651"],["652"],"React Hook useEffect has a missing dependency: 'axiosData'. Either include it or remove the dependency array.",["653"],"React Hook useEffect has a missing dependency: 'parseTraffic'. Either include it or remove the dependency array.",["654"],["655"],["627"],["628"],["656"],["627"],["628"],"'NotificationButton' is defined but never used.","'Text' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTrafficTotalData'. Either include it or remove the dependency array.",["657"],["658"],["659"],"'totalVehicleSpdVolume' is assigned a value but never used.","Assignments to the 'FristRow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.",["627"],["628"],["660"],["661"],"React Hook useEffect has a missing dependency: 'setVideoSource'. Either include it or remove the dependency array.",["662"],["663"],"'act' is defined but never used.",["664"],"'Modal' is defined but never used.","React Hook useEffect has a missing dependency: 'parseData'. Either include it or remove the dependency array.",["665"],["666"],["667"],"'Link' is defined but never used.",["668"],["669"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["670"],["671"],["672"],["673"],["674"],["675"],{"desc":"676","fix":"677"},"no-global-assign","no-unsafe-negation",{"desc":"678","fix":"679"},{"desc":"680","fix":"681"},{"desc":"682","fix":"683"},{"desc":"682","fix":"684"},{"desc":"685","fix":"686"},{"desc":"687","fix":"688"},{"desc":"687","fix":"689"},{"desc":"690","fix":"691"},{"desc":"687","fix":"692"},{"desc":"687","fix":"693"},{"desc":"690","fix":"694"},{"desc":"690","fix":"695"},{"desc":"687","fix":"696"},{"desc":"697","fix":"698"},{"desc":"699","fix":"700"},{"desc":"701","fix":"702"},{"desc":"690","fix":"703"},{"desc":"704","fix":"705"},{"desc":"690","fix":"706"},{"desc":"690","fix":"707"},{"desc":"690","fix":"708"},{"desc":"690","fix":"709"},{"desc":"690","fix":"710"},{"desc":"690","fix":"711"},{"desc":"712","fix":"713"},{"desc":"714","fix":"715"},{"desc":"687","fix":"716"},{"desc":"687","fix":"717"},{"desc":"718","fix":"719"},{"desc":"687","fix":"720"},{"desc":"687","fix":"721"},{"desc":"699","fix":"722"},{"desc":"687","fix":"723"},{"desc":"724","fix":"725"},{"desc":"687","fix":"726"},{"desc":"687","fix":"727"},{"desc":"728","fix":"729"},{"desc":"687","fix":"730"},{"desc":"687","fix":"731"},{"desc":"687","fix":"732"},{"desc":"733","fix":"734"},{"desc":"687","fix":"735"},{"desc":"687","fix":"736"},{"desc":"737","fix":"738"},{"desc":"687","fix":"739"},{"desc":"687","fix":"740"},{"desc":"687","fix":"741"},"Update the dependencies array to be: [cameraCode, currTime, refresh, realFirstFilter, axiosAsync, city, district, road, spot, camera]",{"range":"742","text":"743"},"Update the dependencies array to be: [cameraCode, startDate, endTime, currentTime, getTrafficData]",{"range":"744","text":"745"},"Update the dependencies array to be: [getTrafficData, refresh]",{"range":"746","text":"747"},"Update the dependencies array to be: [parseTotalData, trafficData]",{"range":"748","text":"749"},{"range":"750","text":"749"},"Update the dependencies array to be: [realtimeCamCode, startDate, endTime, currentTime, getTrafficData]",{"range":"751","text":"752"},"Update the dependencies array to be: [trafficTotalData, activeVisualKey, parseTotalData]",{"range":"753","text":"754"},{"range":"755","text":"754"},"Update the dependencies array to be: [setRealFirstFilter]",{"range":"756","text":"757"},{"range":"758","text":"754"},{"range":"759","text":"754"},{"range":"760","text":"757"},{"range":"761","text":"757"},{"range":"762","text":"754"},"Update the dependencies array to be: [cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",{"range":"763","text":"764"},"Update the dependencies array to be: [currentLaneNum, parseData, trafficTotalData]",{"range":"765","text":"766"},"Update the dependencies array to be: [isLoadingNameAdd, spinTimer]",{"range":"767","text":"768"},{"range":"769","text":"757"},"Update the dependencies array to be: [loginStatus]",{"range":"770","text":"771"},{"range":"772","text":"757"},{"range":"773","text":"757"},{"range":"774","text":"757"},{"range":"775","text":"757"},{"range":"776","text":"757"},{"range":"777","text":"757"},"Update the dependencies array to be: [startDate, endTime, cameraCode, isRefresh, axiosData]",{"range":"778","text":"779"},"Update the dependencies array to be: [parseTraffic, trafficData]",{"range":"780","text":"781"},{"range":"782","text":"754"},{"range":"783","text":"754"},"Update the dependencies array to be: [cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",{"range":"784","text":"785"},{"range":"786","text":"754"},{"range":"787","text":"754"},{"range":"788","text":"766"},{"range":"789","text":"754"},"Update the dependencies array to be: [setVideoSource, source]",{"range":"790","text":"791"},{"range":"792","text":"754"},{"range":"793","text":"754"},"Update the dependencies array to be: [parseData, trafficData]",{"range":"794","text":"795"},{"range":"796","text":"754"},{"range":"797","text":"754"},{"range":"798","text":"754"},"Update the dependencies array to be: [axiosData]",{"range":"799","text":"800"},{"range":"801","text":"754"},{"range":"802","text":"754"},"Update the dependencies array to be: [axiosData, trafficTotalData]",{"range":"803","text":"804"},{"range":"805","text":"754"},{"range":"806","text":"754"},{"range":"807","text":"754"},[1837,1885],"[cameraCode, currTime, refresh, realFirstFilter, axiosAsync, city, district, road, spot, camera]",[1968,2013],"[cameraCode, startDate, endTime, currentTime, getTrafficData]",[2166,2175],"[getTrafficData, refresh]",[384,397],"[parseTotalData, trafficData]",[385,398],[1082,1132],"[realtimeCamCode, startDate, endTime, currentTime, getTrafficData]",[467,502],"[trafficTotalData, activeVisualKey, parseTotalData]",[615,650],[1211,1213],"[setRealFirstFilter]",[439,474],[606,641],[1270,1272],[1212,1214],[453,488],[2679,2727],"[cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",[617,635],"[currentLaneNum, parseData, trafficTotalData]",[1332,1350],"[isLoadingNameAdd, spinTimer]",[1410,1412],[1372,1408],"[loginStatus]",[1612,1614],[1043,1045],[442,444],[557,559],[565,567],[563,565],[1165,1208],"[startDate, endTime, cameraCode, isRefresh, axiosData]",[386,399],"[parseTraffic, trafficData]",[470,505],[462,497],[1529,1579],"[cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",[439,474],[612,647],[417,435],[432,467],[1585,1593],"[setVideoSource, source]",[464,499],[515,550],[390,403],"[parseData, trafficData]",[439,474],[606,641],[467,502],[751,753],"[axiosData]",[643,678],[460,495],[559,577],"[axiosData, trafficTotalData]",[469,504],[469,504],[611,646]]