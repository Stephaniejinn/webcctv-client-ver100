[{"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js":"1","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js":"2","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js":"3","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js":"4","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleCnt.js":"5","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js":"6","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js":"7","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js":"8","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js":"9","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js":"10","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js":"11","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\userInfo.js":"12","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js":"13","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js":"14","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js":"15","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js":"16","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js":"17","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js":"18","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StreamingContainer.js":"19","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js":"20","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\LaneTableCard.js":"21","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTVehicleRatio.js":"22","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js":"23","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js":"24","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js":"25","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js":"26","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js":"27","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js":"28","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js":"29","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js":"30","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js":"31","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTPCU.js":"32","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js":"33","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js":"34","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js":"35","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js":"36","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js":"37","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js":"38","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js":"39","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js":"40","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js":"41","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js":"42","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js":"43","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js":"44","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTOverSpeed.js":"45","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js":"46","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\search\\OverspeedPage.js":"47","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js":"48","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\TimeTableCard.js":"49","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js":"50","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\date.js":"51","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js":"52","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTFirstTable.js":"53","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js":"54","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\reportWebVitals.js":"55","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTConcentrationRatio.js":"56","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js":"57","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleRatio.js":"58","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js":"59","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js":"60","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js":"61","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js":"62","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js":"63","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js":"64","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js":"65"},{"size":5117,"mtime":1618967791920,"results":"66","hashOfConfig":"67"},{"size":6288,"mtime":1618469228470,"results":"68","hashOfConfig":"67"},{"size":3505,"mtime":1617942423872,"results":"69","hashOfConfig":"67"},{"size":1846,"mtime":1619140625638,"results":"70","hashOfConfig":"67"},{"size":2586,"mtime":1617952242868,"results":"71","hashOfConfig":"67"},{"size":2609,"mtime":1617955556798,"results":"72","hashOfConfig":"67"},{"size":4073,"mtime":1619510189028,"results":"73","hashOfConfig":"67"},{"size":4459,"mtime":1619744443356,"results":"74","hashOfConfig":"67"},{"size":3935,"mtime":1618889043596,"results":"75","hashOfConfig":"67"},{"size":2797,"mtime":1619397588528,"results":"76","hashOfConfig":"67"},{"size":4183,"mtime":1619506827581,"results":"77","hashOfConfig":"67"},{"size":459,"mtime":1617066391537,"results":"78","hashOfConfig":"67"},{"size":2458,"mtime":1617952444674,"results":"79","hashOfConfig":"67"},{"size":2504,"mtime":1617952388594,"results":"80","hashOfConfig":"67"},{"size":3271,"mtime":1619397574507,"results":"81","hashOfConfig":"67"},{"size":2804,"mtime":1619397589891,"results":"82","hashOfConfig":"67"},{"size":588,"mtime":1618474102823,"results":"83","hashOfConfig":"67"},{"size":2875,"mtime":1618880987561,"results":"84","hashOfConfig":"67"},{"size":1537,"mtime":1618820831700,"results":"85","hashOfConfig":"67"},{"size":1240,"mtime":1617695212432,"results":"86","hashOfConfig":"67"},{"size":936,"mtime":1616394535146,"results":"87","hashOfConfig":"67"},{"size":2490,"mtime":1617952452122,"results":"88","hashOfConfig":"67"},{"size":745,"mtime":1617842272800,"results":"89","hashOfConfig":"67"},{"size":997,"mtime":1615964214432,"results":"90","hashOfConfig":"67"},{"size":4462,"mtime":1619403911634,"results":"91","hashOfConfig":"67"},{"size":3626,"mtime":1619403902324,"results":"92","hashOfConfig":"67"},{"size":1622,"mtime":1616400207822,"results":"93","hashOfConfig":"67"},{"size":5698,"mtime":1617942455513,"results":"94","hashOfConfig":"67"},{"size":8065,"mtime":1619417065166,"results":"95","hashOfConfig":"67"},{"size":7419,"mtime":1618453985516,"results":"96","hashOfConfig":"67"},{"size":9759,"mtime":1617942470631,"results":"97","hashOfConfig":"67"},{"size":2525,"mtime":1617952447991,"results":"98","hashOfConfig":"67"},{"size":415,"mtime":1618821981384,"results":"99","hashOfConfig":"67"},{"size":3326,"mtime":1619144283452,"results":"100","hashOfConfig":"67"},{"size":21535,"mtime":1619081167238,"results":"101","hashOfConfig":"67"},{"size":2329,"mtime":1618209865516,"results":"102","hashOfConfig":"67"},{"size":2491,"mtime":1618464202222,"results":"103","hashOfConfig":"67"},{"size":2319,"mtime":1617952421240,"results":"104","hashOfConfig":"67"},{"size":2610,"mtime":1617955639588,"results":"105","hashOfConfig":"67"},{"size":7919,"mtime":1617696349831,"results":"106","hashOfConfig":"67"},{"size":2450,"mtime":1618900404845,"results":"107","hashOfConfig":"67"},{"size":1729,"mtime":1618281941189,"results":"108","hashOfConfig":"67"},{"size":1874,"mtime":1618301947326,"results":"109","hashOfConfig":"67"},{"size":6483,"mtime":1616475606541,"results":"110","hashOfConfig":"67"},{"size":2458,"mtime":1617952402469,"results":"111","hashOfConfig":"67"},{"size":1324,"mtime":1618205775634,"results":"112","hashOfConfig":"67"},{"size":2067,"mtime":1619424097274,"results":"113","hashOfConfig":"67"},{"size":7000,"mtime":1619511025016,"results":"114","hashOfConfig":"67"},{"size":3508,"mtime":1619510549554,"results":"115","hashOfConfig":"67"},{"size":918,"mtime":1619417688911,"results":"116","hashOfConfig":"67"},{"size":1141,"mtime":1619417784648,"results":"117","hashOfConfig":"67"},{"size":5695,"mtime":1619503579688,"results":"118","hashOfConfig":"67"},{"size":9798,"mtime":1619503570043,"results":"119","hashOfConfig":"67"},{"size":2349,"mtime":1619511583793,"results":"120","hashOfConfig":"67"},{"size":362,"mtime":1608013233748,"results":"121","hashOfConfig":"67"},{"size":1970,"mtime":1617952254615,"results":"122","hashOfConfig":"67"},{"size":2651,"mtime":1617955635022,"results":"123","hashOfConfig":"67"},{"size":2800,"mtime":1617952245379,"results":"124","hashOfConfig":"67"},{"size":2436,"mtime":1617952240226,"results":"125","hashOfConfig":"67"},{"size":2693,"mtime":1617676080949,"results":"126","hashOfConfig":"67"},{"size":2683,"mtime":1617952237288,"results":"127","hashOfConfig":"67"},{"size":410,"mtime":1613529006303,"results":"128","hashOfConfig":"67"},{"size":652,"mtime":1616735276373,"results":"129","hashOfConfig":"67"},{"size":654,"mtime":1615877296950,"results":"130","hashOfConfig":"67"},{"size":2521,"mtime":1617952408073,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12xqqm0",{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"176"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"169"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"150"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"144"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"144"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"140"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"140"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"150"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js",["283","284"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js",[],["285","286"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js",["287"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst MTSecondTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tvar TotalData = [];\r\n\r\n\tvar countCol;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentLaneNum === 0) {\r\n\t\t\tcountCol = 0;\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseData();\r\n\t\t}\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"totalDayNightRatio\",\r\n\t\t\t\t\tkey: \"totalNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"totalPHF\",\r\n\t\t\t\t\tkey: \"totalPHF\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"totalPeekHourCnt\",\r\n\t\t\t\t\tkey: \"totalPeekHourCnt\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"집중률\",\r\n\t\t\t\t\tdataIndex: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t\tkey: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"차종별 주야율\",\r\n\t\t\tdataIndex: \"TypeDayNightRatio\",\r\n\t\t\tkey: \"TypeNightRatio\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\t\tdataIndex: \"carDayNightRatio\",\r\n\t\t\t\t\tkey: \"carNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"버스\",\r\n\t\t\t\t\tdataIndex: \"busDayNightRatio\",\r\n\t\t\t\t\tkey: \"busNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\t\tdataIndex: \"truckDayNightRatio\",\r\n\t\t\t\t\tkey: \"truckNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\t\tdataIndex: \"motorDayNightRatio\",\r\n\t\t\t\t\tkey: \"motorNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\tconst parseData = () => {\r\n\t\tconsole.log(\"count table axios\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehicleDayNightRatio,\r\n\t\t\t\ttotalVehiclePeakHourFactor,\r\n\t\t\t\ttotalVehiclePeakHourConcentrationRatio,\r\n\t\t\t\ttotalVehiclePeakHourFlowRate,\r\n\t\t\t\tcarDayNightRatio,\r\n\t\t\t\tmBusDayNightRatio,\r\n\t\t\t\tmTruckDayNightRatio,\r\n\t\t\t\tmotorDayNightRatio,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (countCol < 3) {\r\n\t\t\t\tif (countCol === 0) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"월간전체\";\r\n\t\t\t\t} else if (countCol === 1) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"평일전체\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"주말전체\";\r\n\t\t\t\t}\r\n\t\t\t\tcountCol += 1;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"time\"] = moment(recordDate).format(\"YYYY년 MM월 DD일\");\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalDayNightRatio\"] = totalVehicleDayNightRatio;\r\n\t\t\tdataTemp[\"totalPHF\"] = totalVehiclePeakHourFactor;\r\n\t\t\tdataTemp[\"totalPeekHourCnt\"] = totalVehiclePeakHourFlowRate;\r\n\t\t\tdataTemp[\r\n\t\t\t\t\"totalVehiclePeakHourConcentrationRatio\"\r\n\t\t\t] = totalVehiclePeakHourConcentrationRatio;\r\n\r\n\t\t\tdataTemp[\"carDayNightRatio\"] = carDayNightRatio;\r\n\t\t\tdataTemp[\"busDayNightRatio\"] = mBusDayNightRatio;\r\n\t\t\tdataTemp[\"truckDayNightRatio\"] = mTruckDayNightRatio;\r\n\t\t\tdataTemp[\"motorDayNightRatio\"] = motorDayNightRatio;\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MTSecondTable;\r\n",["288","289"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js",["290"],"/* eslint-disable jsx-a11y/media-has-caption */\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport Hls from \"hls.js\";\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst Video = (props) => {\r\n\tconst { source, showControls = false, setVideoSource } = props;\r\n\tconst videoRef = useRef();\r\n\tconst handleClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\te.target.requestFullscreen();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!videoRef) return;\r\n\r\n\t\tconst hls = new Hls({\r\n\t\t\txhrSetup: (xhr, url) => {\r\n\t\t\t\txhr.setRequestHeader(\r\n\t\t\t\t\t\"authorization\",\r\n\t\t\t\t\t`Bearer ${localStorage.getItem(\"token\")}`\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (videoRef.current.canPlayType(\"application/vnd.apple.mpegurl\")) {\r\n\t\t\tvideoRef.current.src = source;\r\n\t\t\tvideoRef.addEventListener(\"loadedmetadata\", () => {\r\n\t\t\t\tvideoRef.current.play();\r\n\t\t\t});\r\n\t\t} else if (Hls.isSupported()) {\r\n\t\t\thls.attachMedia(videoRef.current);\r\n\t\t\thls.on(Hls.Events.MEDIA_ATTACHED, () => {\r\n\t\t\t\thls.loadSource(source);\r\n\t\t\t\thls.on(Hls.Events.MANIFEST_PARSED, () => {\r\n\t\t\t\t\tsetVideoSource(true);\r\n\t\t\t\t\tvideoRef.current.play();\r\n\t\t\t\t});\r\n\t\t\t\thls.on(Hls.Events.ERROR, (_, data) => {\r\n\t\t\t\t\tif (data.response) {\r\n\t\t\t\t\t\tif (data.response.code === 404) {\r\n\t\t\t\t\t\t\tif (setVideoSource) {\r\n\t\t\t\t\t\t\t\tsetVideoSource(false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (data.response.code === 401) {\r\n\t\t\t\t\t\t\t// jwt가 invalid 할 때\r\n\t\t\t\t\t\t\tif (setVideoSource) {\r\n\t\t\t\t\t\t\t\tsetVideoSource(false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\talert(\"실시간 영상이 지원되지 않는 브라우저입니다\");\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\thls.destroy();\r\n\t\t};\r\n\t}, [source]);\r\n\r\n\treturn (\r\n\t\t<video\r\n\t\t\tref={videoRef}\r\n\t\t\tsrc={source}\r\n\t\t\tonClick={handleClick}\r\n\t\t\tmuted\r\n\t\t\tautoPlay\r\n\t\t\tcontrols={isMobile || showControls}\r\n\t\t\tpreload=\"auto\"\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Video;\r\n",["291","292"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleCnt.js",["293"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js",["294"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTAvgSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 평균속도 그래프 parse\");\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleAvgSpeed;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tseriesField: \"key\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTAvgSpeed;\r\n",["295","296"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js",["297"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js",["298","299"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js",["300"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js",["301","302"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\userInfo.js",[],["303","304"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js",["305"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js",["306"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst DTAvgSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 평균속도 parse\");\r\n\t\tvar avgSpeedTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordTime,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst Time = moment(recordTime).format(\"HH:mm\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleAvgSpeed;\r\n\t\t\ttempTotal[\"category\"] = \"천제\";\r\n\r\n\t\t\tavgSpeedTotalData.push(tempCar);\r\n\t\t\tavgSpeedTotalData.push(tempBus);\r\n\t\t\tavgSpeedTotalData.push(tempTruck);\r\n\t\t\tavgSpeedTotalData.push(tempMotor);\r\n\t\t\tavgSpeedTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(avgSpeedTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default DTAvgSpeed;\r\n",["307","308"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js",["309","310"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js",[],["311","312"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js",["313"],"import React, { useEffect, useState } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport VideoContainer from \"../../organisms/videoContainer/StreamingContainer\";\r\nimport SearchInput from \"../../atoms/cascaderBtn/CascaderBtn\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst RealtimeStreamingPage = (props) => {\r\n\tconst { Content } = Layout;\r\n\tconst { setLoggedIn, isMaster, baseURL } = props;\r\n\tconst [address, setAddress] = useState([]);\r\n\tconst date = moment(new Date()).format(\"YYYY-MM-DD\");\r\n\tconst currentTime = moment(new Date()).format(\"HH:mm:ss\");\r\n\tvar addArr = [];\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}/locations/ICN/28110/2008001/001/cameras`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tres.data.forEach((address) => {\r\n\t\t\t\t\t\taddArr.push(address.httpStreamAddr);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tsetAddress(addArr);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"realtime-streaming-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider setLoggedIn={setLoggedIn} />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"실시간 영상\"]} />\r\n\t\t\t\t\t\t<div className=\"search-input\">\r\n\t\t\t\t\t\t\t<SearchInput />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"video-container-4\">\r\n\t\t\t\t\t\t\t{address[0] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-1 [하행]\"\r\n\t\t\t\t\t\t\t\t\t// httpAddress=\"https://globalbridge.synology.me:4000/m3u8VideoStream.m3u8\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[0]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{address[1] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-2 [하행]\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[1]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{address[2] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-3 [하행]\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[2]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(RealtimeStreamingPage);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StreamingContainer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js",[],["314","315"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\LaneTableCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTVehicleRatio.js",["316"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\n// import axios from \"axios\";\r\n// import { connect } from \"react-redux\";\r\n// import * as actions from \"../../../actions\";\r\n\r\nconst VehicleRatio = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"3\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 차종비율 parse\");\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = parseFloat((carVehicleRatio * 100).toFixed(2));\r\n\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = parseFloat((mBusVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = parseFloat((mTruckVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = parseFloat((motorVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"%\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default VehicleRatio;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js",[],["317","318"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js",["319","320"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js",["321"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\n// import \"../style.less\";\r\n\r\nconst WLFisrtTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar FristRow;\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tFristRow = true;\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"lane\",\r\n\t\t\twidth: 60,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\tconsole.log(\"count 주간 차선별 1차데이블 parse\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (FristRow) {\r\n\t\t\t\tdataTemp[\"lane\"] = \"전체\";\r\n\t\t\t\tFristRow = false;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"lane\"] = `${laneNumber} 차선`;\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WLFisrtTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js",["322"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js",["323","324"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js",["325"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTPCU.js",["326"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst MTPCULine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 PCU parse\");\r\n\t\tvar PCUTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tlet tempTotal = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehiclePassengerCarUnit;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tPCUTotalData.push(tempCar);\r\n\t\t\tPCUTotalData.push(tempBus);\r\n\t\t\tPCUTotalData.push(tempTruck);\r\n\t\t\tPCUTotalData.push(tempMotor);\r\n\t\t\tPCUTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(PCUTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\t// xAxis: { type: \"time\" },\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MTPCULine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js",["327","328"],"import React, { useState, useEffect } from \"react\";\r\nimport { Spin, Typography, message } from \"antd\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LaneTableCard from \"../../../molecules/tableCard/LaneTableCard\";\r\nimport LaneDataVisualization from \"../../../molecules/dataVisualization/LaneDataVisualization\";\r\nimport \"../style.less\";\r\n\r\nconst LaneVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcameraCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\tadditionalFilter,\r\n\t\tsetLoggedIn,\r\n\t} = props;\r\n\tconst { Text } = Typography;\r\n\r\n\tconst [activeVisualKey, setActiveVisualKey] = useState(\"1\");\r\n\r\n\tconst [isLoadingTrafficTotal, setLoadingTrafficTotal] = useState(true);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [trafficTotalData, setTrafficTotalData] = useState([]);\r\n\r\n\tconst periodURL =\r\n\t\tperiod === \"DAY\" ? \"/daily\" : period === \"WEEK\" ? \"/weekly\" : \"/monthly\";\r\n\r\n\tconst currentURL =\r\n\t\tperiod === \"DAY\"\r\n\t\t\t? `${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane`\r\n\t\t\t: `${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane&weekOption=${additionalFilter}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEmptyData(false);\r\n\t\tsetLoadingTrafficTotal(true);\r\n\t\tsetTrafficTotalData([]);\r\n\t\tgetTrafficTotalData();\r\n\t}, [cameraCode, startDate, endTime, additionalFilter]);\r\n\r\n\tconst getTrafficTotalData = () => {\r\n\t\taxios\r\n\t\t\t.get(`${currentURL}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetTrafficTotalData(res.data);\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetLoadingTrafficTotal(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t\tmessage.warning(\"해당 기간 차선 별 데이터가 없습니다\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t} else if (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\"네트워크 문제 혹은 일시적인 오류로 페이지를 불러올 수 없습니다\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmessage.warning(\"해당 기간 차선 별 데이터가 없습니다\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isEmptyData ? (\r\n\t\t\t\tisLoadingTrafficTotal ? (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<LaneDataVisualization\r\n\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\tsetActiveVisualKey={setActiveVisualKey}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<LaneTableCard\r\n\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\ttableKey=\"first\"\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tcamLanes: state.locationCode.camLanes,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(LaneVisualization);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js",["329","330","331","332","333"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js",["334"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js",["335"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst AvgSpeedLine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 차선별 평균속도 parse\");\r\n\t\tvar avgSpeedTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\r\n\t\t\ttempCar[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\tavgSpeedTotalData.push(tempCar);\r\n\t\t\tavgSpeedTotalData.push(tempBus);\r\n\t\t\tavgSpeedTotalData.push(tempTruck);\r\n\t\t\tavgSpeedTotalData.push(tempMotor);\r\n\t\t});\r\n\t\tsetData(avgSpeedTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"lane\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default AvgSpeedLine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js",["336","337"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTOverSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 시간별 과속 parse\");\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = motorSpdVolume;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tseriesField: \"key\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTOverSpeed;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js",["338"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js",["339"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js",["340"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst SearchFisrtTable = (props) => {\r\n\tconst { firstData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData(firstData);\r\n\t}, [firstData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t\tkey: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tkey: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tkey: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tkey: \"bus\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tkey: \"truck\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tkey: \"motor\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"motorpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"보행자\",\r\n\t\t\tkey: \"totalPerson\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"수(명)\",\r\n\t\t\t\t\tdataIndex: \"person\",\r\n\t\t\t\t\tkey: \"person\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"무단횡단(명)\",\r\n\t\t\t\t\tdataIndex: \"jaywalk\",\r\n\t\t\t\t\tkey: \"jaywalk\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\t// const axiosData = () => {\r\n\t// \tconsole.log(\"count table axios\");\r\n\t// \ttrafficTotalData.some((eachData, index) => {\r\n\t// \t\tconst {\r\n\t// \t\t\trecordTime,\r\n\t// \t\t\ttotalVehicleVolume,\r\n\t// \t\t\ttotalVehicleAvgSpeed,\r\n\t// \t\t\ttotalVehiclePassengerCarUnit,\r\n\t// \t\t\ttotalVehicleSpdVolume,\r\n\t// \t\t\tcarVolume,\r\n\t// \t\t\tcarAvgSpeed,\r\n\t// \t\t\tcarPassengerCarUnit,\r\n\t// \t\t\tcarVehicleRatio,\r\n\t// \t\t\tcarSpdVolume,\r\n\t// \t\t\tmBusVolume,\r\n\t// \t\t\tmBusAvgSpeed,\r\n\t// \t\t\tmBusPassengerCarUnit,\r\n\t// \t\t\tmBusVehicleRatio,\r\n\t// \t\t\tmBusSpdVolume,\r\n\t// \t\t\tmTruckVolume,\r\n\t// \t\t\tmTruckAvgSpeed,\r\n\t// \t\t\tmTruckPassengerCarUnit,\r\n\t// \t\t\tmTruckVehicleRatio,\r\n\t// \t\t\tmTruckSpdVolume,\r\n\t// \t\t\tmotorVolume,\r\n\t// \t\t\tmotorAvgSpeed,\r\n\t// \t\t\tmotorPassengerCarUnit,\r\n\t// \t\t\tmotorVehicleRatio,\r\n\t// \t\t\tmotorSpdVolume,\r\n\t// \t\t\tpedestrianVolume,\r\n\t// \t\t\tjaywalkVolume,\r\n\t// \t\t} = eachData;\r\n\t// \t\tif (recordTime === \"ALL\") {\r\n\t// \t\t\treturn false;\r\n\t// \t\t}\r\n\t// \t\tif (countCol === 6) {\r\n\t// \t\t\treturn true;\r\n\t// \t\t}\r\n\t// \t\tcountCol += 1;\r\n\r\n\t// \t\tlet dataTemp = {};\r\n\r\n\t// \t\tdataTemp[\"key\"] = index + 1;\r\n\t// \t\tdataTemp[\"time\"] = moment(recordTime).format(\"YYYY년 MM월 DD일 HH:mm:ss\");\r\n\r\n\t// \t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t// \t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t// \t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t// \t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"carCount\"] = carVolume;\r\n\t// \t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t// \t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t// \t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t// \t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t// \t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t// \t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t// \t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t// \t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t// \t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t// \t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t// \t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t// \t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t// \t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t// \t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t// \t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t// \t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t// \t\tdataTemp[\"person\"] = pedestrianVolume;\r\n\t// \t\tdataTemp[\"jaywalk\"] = jaywalkVolume;\r\n\r\n\t// \t\tTotalData.push(dataTemp);\r\n\t// \t});\r\n\t// \tsetFirstData(TotalData);\r\n\t// \tsetData(TotalData);\r\n\t// \tsetLoading(false);\r\n\t// \tsetLoadingFirst(false);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{Data.length === 0 ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SearchFisrtTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTOverSpeed.js",["341"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\search\\OverspeedPage.js",["342"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\TimeTableCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\date.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js",["343"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTFirstTable.js",["344"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js",["345"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTConcentrationRatio.js",["346"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js",["347"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleRatio.js",["348"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js",["349"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js",["350","351"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js",["352","353"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js",["354"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js",["355"],{"ruleId":"356","severity":1,"message":"357","line":81,"column":5,"nodeType":"358","endLine":81,"endColumn":27,"suggestions":"359"},{"ruleId":"356","severity":1,"message":"360","line":89,"column":5,"nodeType":"358","endLine":89,"endColumn":14,"suggestions":"361"},{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","replacedBy":"365"},{"ruleId":"356","severity":1,"message":"366","line":18,"column":15,"nodeType":"367","endLine":18,"endColumn":16},{"ruleId":"362","replacedBy":"368"},{"ruleId":"364","replacedBy":"369"},{"ruleId":"356","severity":1,"message":"370","line":63,"column":5,"nodeType":"358","endLine":63,"endColumn":13,"suggestions":"371"},{"ruleId":"362","replacedBy":"372"},{"ruleId":"364","replacedBy":"373"},{"ruleId":"356","severity":1,"message":"374","line":18,"column":5,"nodeType":"358","endLine":18,"endColumn":40,"suggestions":"375"},{"ruleId":"356","severity":1,"message":"374","line":29,"column":5,"nodeType":"358","endLine":29,"endColumn":40,"suggestions":"376"},{"ruleId":"362","replacedBy":"377"},{"ruleId":"364","replacedBy":"378"},{"ruleId":"356","severity":1,"message":"379","line":53,"column":5,"nodeType":"358","endLine":53,"endColumn":13,"suggestions":"380"},{"ruleId":"356","severity":1,"message":"381","line":45,"column":5,"nodeType":"358","endLine":45,"endColumn":47,"suggestions":"382"},{"ruleId":"356","severity":1,"message":"381","line":54,"column":5,"nodeType":"358","endLine":54,"endColumn":14,"suggestions":"383"},{"ruleId":"356","severity":1,"message":"381","line":36,"column":5,"nodeType":"358","endLine":36,"endColumn":55,"suggestions":"384"},{"ruleId":"385","severity":1,"message":"386","line":24,"column":9,"nodeType":"387","messageId":"388","endLine":24,"endColumn":20},{"ruleId":"356","severity":1,"message":"360","line":52,"column":5,"nodeType":"358","endLine":52,"endColumn":53,"suggestions":"389"},{"ruleId":"362","replacedBy":"390"},{"ruleId":"364","replacedBy":"391"},{"ruleId":"356","severity":1,"message":"374","line":19,"column":5,"nodeType":"358","endLine":19,"endColumn":40,"suggestions":"392"},{"ruleId":"356","severity":1,"message":"374","line":19,"column":5,"nodeType":"358","endLine":19,"endColumn":40,"suggestions":"393"},{"ruleId":"362","replacedBy":"394"},{"ruleId":"364","replacedBy":"395"},{"ruleId":"385","severity":1,"message":"396","line":1,"column":27,"nodeType":"387","messageId":"388","endLine":1,"endColumn":36},{"ruleId":"385","severity":1,"message":"397","line":3,"column":8,"nodeType":"387","messageId":"388","endLine":3,"endColumn":13},{"ruleId":"362","replacedBy":"398"},{"ruleId":"364","replacedBy":"399"},{"ruleId":"356","severity":1,"message":"400","line":42,"column":5,"nodeType":"358","endLine":42,"endColumn":7,"suggestions":"401"},{"ruleId":"362","replacedBy":"402"},{"ruleId":"364","replacedBy":"403"},{"ruleId":"356","severity":1,"message":"374","line":24,"column":5,"nodeType":"358","endLine":24,"endColumn":40,"suggestions":"404"},{"ruleId":"362","replacedBy":"405"},{"ruleId":"364","replacedBy":"406"},{"ruleId":"356","severity":1,"message":"407","line":27,"column":5,"nodeType":"358","endLine":27,"endColumn":39,"suggestions":"408"},{"ruleId":"356","severity":1,"message":"409","line":27,"column":6,"nodeType":"410","endLine":27,"endColumn":38},{"ruleId":"356","severity":1,"message":"411","line":15,"column":14,"nodeType":"367","endLine":15,"endColumn":18},{"ruleId":"356","severity":1,"message":"412","line":46,"column":5,"nodeType":"358","endLine":46,"endColumn":37,"suggestions":"413"},{"ruleId":"385","severity":1,"message":"414","line":2,"column":23,"nodeType":"387","messageId":"388","endLine":2,"endColumn":31},{"ruleId":"385","severity":1,"message":"415","line":46,"column":9,"nodeType":"387","messageId":"388","endLine":46,"endColumn":18},{"ruleId":"356","severity":1,"message":"412","line":28,"column":5,"nodeType":"358","endLine":28,"endColumn":23,"suggestions":"416"},{"ruleId":"356","severity":1,"message":"374","line":18,"column":5,"nodeType":"358","endLine":18,"endColumn":40,"suggestions":"417"},{"ruleId":"385","severity":1,"message":"418","line":22,"column":10,"nodeType":"387","messageId":"388","endLine":22,"endColumn":14},{"ruleId":"356","severity":1,"message":"419","line":43,"column":5,"nodeType":"358","endLine":43,"endColumn":55,"suggestions":"420"},{"ruleId":"356","severity":1,"message":"421","line":109,"column":19,"nodeType":"367","endLine":109,"endColumn":20},{"ruleId":"356","severity":1,"message":"422","line":110,"column":20,"nodeType":"367","endLine":110,"endColumn":21},{"ruleId":"356","severity":1,"message":"423","line":111,"column":23,"nodeType":"367","endLine":111,"endColumn":24},{"ruleId":"424","severity":1,"message":"425","line":242,"column":38,"nodeType":"426","messageId":"427","endLine":242,"endColumn":40},{"ruleId":"424","severity":1,"message":"428","line":475,"column":38,"nodeType":"426","messageId":"429","endLine":475,"endColumn":40},{"ruleId":"356","severity":1,"message":"430","line":14,"column":5,"nodeType":"358","endLine":14,"endColumn":18,"suggestions":"431"},{"ruleId":"356","severity":1,"message":"374","line":18,"column":5,"nodeType":"358","endLine":18,"endColumn":40,"suggestions":"432"},{"ruleId":"356","severity":1,"message":"374","line":29,"column":5,"nodeType":"358","endLine":29,"endColumn":40,"suggestions":"433"},{"ruleId":"385","severity":1,"message":"434","line":42,"column":5,"nodeType":"387","messageId":"388","endLine":42,"endColumn":26},{"ruleId":"356","severity":1,"message":"435","line":41,"column":5,"nodeType":"358","endLine":41,"endColumn":7,"suggestions":"436"},{"ruleId":"356","severity":1,"message":"437","line":16,"column":5,"nodeType":"358","endLine":16,"endColumn":18,"suggestions":"438"},{"ruleId":"385","severity":1,"message":"439","line":3,"column":8,"nodeType":"387","messageId":"388","endLine":3,"endColumn":14},{"ruleId":"356","severity":1,"message":"374","line":19,"column":5,"nodeType":"358","endLine":19,"endColumn":40,"suggestions":"440"},{"ruleId":"385","severity":1,"message":"441","line":21,"column":9,"nodeType":"387","messageId":"388","endLine":21,"endColumn":14},{"ruleId":"356","severity":1,"message":"411","line":15,"column":14,"nodeType":"367","endLine":15,"endColumn":18},{"ruleId":"356","severity":1,"message":"411","line":20,"column":14,"nodeType":"367","endLine":20,"endColumn":18},{"ruleId":"385","severity":1,"message":"442","line":10,"column":13,"nodeType":"387","messageId":"388","endLine":10,"endColumn":20},{"ruleId":"356","severity":1,"message":"374","line":30,"column":5,"nodeType":"358","endLine":30,"endColumn":40,"suggestions":"443"},{"ruleId":"356","severity":1,"message":"374","line":29,"column":5,"nodeType":"358","endLine":29,"endColumn":40,"suggestions":"444"},{"ruleId":"356","severity":1,"message":"374","line":17,"column":5,"nodeType":"358","endLine":17,"endColumn":40,"suggestions":"445"},{"ruleId":"356","severity":1,"message":"374","line":18,"column":5,"nodeType":"358","endLine":18,"endColumn":40,"suggestions":"446"},{"ruleId":"385","severity":1,"message":"442","line":6,"column":13,"nodeType":"387","messageId":"388","endLine":6,"endColumn":20},{"ruleId":"385","severity":1,"message":"447","line":10,"column":10,"nodeType":"387","messageId":"388","endLine":10,"endColumn":15},{"ruleId":"385","severity":1,"message":"448","line":4,"column":10,"nodeType":"387","messageId":"388","endLine":4,"endColumn":13},{"ruleId":"356","severity":1,"message":"374","line":19,"column":5,"nodeType":"358","endLine":19,"endColumn":40,"suggestions":"449"},{"ruleId":"385","severity":1,"message":"450","line":1,"column":17,"nodeType":"387","messageId":"388","endLine":1,"endColumn":25},{"ruleId":"356","severity":1,"message":"374","line":18,"column":5,"nodeType":"358","endLine":18,"endColumn":40,"suggestions":"451"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosAsync', 'baseURL', 'camAddress', 'camera.length', and 'setLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["452"],"React Hook useEffect has a missing dependency: 'axiosAsync'. Either include it or remove the dependency array.",["453"],"no-native-reassign",["454"],"no-negated-in-lhs",["455"],"Assignments to the 'countCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal",["454"],["455"],"React Hook useEffect has a missing dependency: 'setVideoSource'. Either include it or remove the dependency array.",["456"],["454"],["455"],"React Hook useEffect has a missing dependency: 'parseTotalData'. Either include it or remove the dependency array.",["457"],["458"],["454"],["455"],"React Hook useEffect has missing dependencies: 'dayEndTime', 'dayStartDate', 'monthEndTime', 'monthStartDate', 'overSpeedEndTime', 'overSpeedStartDate', 'searchEndTime', 'searchStartDate', 'setTempEndTime', 'setTempStartDate', 'weekEndTime', and 'weekStartDate'. Either include them or remove the dependency array.",["459"],"React Hook useEffect has a missing dependency: 'getTrafficData'. Either include it or remove the dependency array.",["460"],["461"],["462"],"no-unused-vars","'isEmptyData' is assigned a value but never used.","Identifier","unusedVar",["463"],["454"],["455"],["464"],["465"],["454"],["455"],"'useEffect' is defined but never used.","'axios' is defined but never used.",["454"],["455"],"React Hook useEffect has missing dependencies: 'addArr' and 'baseURL'. Either include them or remove the dependency array.",["466"],["454"],["455"],["467"],["454"],["455"],"React Hook useEffect has a missing dependency: 'loginStatus'. Either include it or remove the dependency array.",["468"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","Assignments to the 'FristRow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'axiosData'. Either include it or remove the dependency array.",["469"],"'Checkbox' is defined but never used.","'clipboard' is assigned a value but never used.",["470"],["471"],"'Text' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTrafficTotalData'. Either include it or remove the dependency array.",["472"],"Assignments to the 'countFirstCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'countSecondCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'countOverSpeedCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","array-callback-return","Array.prototype.some() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.some() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'parseTraffic'. Either include it or remove the dependency array.",["473"],["474"],["475"],"'totalVehicleSpdVolume' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOptions'. Either include it or remove the dependency array.",["476"],"React Hook useEffect has a missing dependency: 'parseData'. Either include it or remove the dependency array.",["477"],"'moment' is defined but never used.",["478"],"'count' is assigned a value but never used.","'actions' is defined but never used.",["479"],["480"],["481"],["482"],"'Title' is assigned a value but never used.","'act' is defined but never used.",["483"],"'useState' is defined but never used.",["484"],{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},"no-global-assign","no-unsafe-negation",{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"491","fix":"493"},{"desc":"494","fix":"495"},{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"491","fix":"504"},{"desc":"491","fix":"505"},{"desc":"506","fix":"507"},{"desc":"491","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"491","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"491","fix":"520"},{"desc":"491","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"491","fix":"526"},{"desc":"491","fix":"527"},{"desc":"491","fix":"528"},{"desc":"491","fix":"529"},{"desc":"491","fix":"530"},{"desc":"491","fix":"531"},{"desc":"491","fix":"532"},"Update the dependencies array to be: [axiosAsync, baseURL, camAddress, camCode, camera.length, currTimeStr, setLoggedIn]",{"range":"533","text":"534"},"Update the dependencies array to be: [axiosAsync, refresh]",{"range":"535","text":"536"},"Update the dependencies array to be: [setVideoSource, source]",{"range":"537","text":"538"},"Update the dependencies array to be: [trafficTotalData, activeVisualKey, parseTotalData]",{"range":"539","text":"540"},{"range":"541","text":"540"},"Update the dependencies array to be: [dayEndTime, dayStartDate, monthEndTime, monthStartDate, overSpeedEndTime, overSpeedStartDate, period, searchEndTime, searchStartDate, setTempEndTime, setTempStartDate, weekEndTime, weekStartDate]",{"range":"542","text":"543"},"Update the dependencies array to be: [camCode, startDate, endTime, currentTime, getTrafficData]",{"range":"544","text":"545"},"Update the dependencies array to be: [getTrafficData, refresh]",{"range":"546","text":"547"},"Update the dependencies array to be: [realtimeCamCode, startDate, endTime, currentTime, getTrafficData]",{"range":"548","text":"549"},"Update the dependencies array to be: [cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",{"range":"550","text":"551"},{"range":"552","text":"540"},{"range":"553","text":"540"},"Update the dependencies array to be: [addArr, baseURL]",{"range":"554","text":"555"},{"range":"556","text":"540"},"Update the dependencies array to be: [loginStatus]",{"range":"557","text":"558"},"Update the dependencies array to be: [startDate, endTime, cameraCode, axiosData]",{"range":"559","text":"560"},"Update the dependencies array to be: [axiosData, trafficTotalData]",{"range":"561","text":"562"},{"range":"563","text":"540"},"Update the dependencies array to be: [cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",{"range":"564","text":"565"},"Update the dependencies array to be: [parseTraffic, trafficData]",{"range":"566","text":"567"},{"range":"568","text":"540"},{"range":"569","text":"540"},"Update the dependencies array to be: [getOptions]",{"range":"570","text":"571"},"Update the dependencies array to be: [parseData, trafficData]",{"range":"572","text":"573"},{"range":"574","text":"540"},{"range":"575","text":"540"},{"range":"576","text":"540"},{"range":"577","text":"540"},{"range":"578","text":"540"},{"range":"579","text":"540"},{"range":"580","text":"540"},[2420,2442],"[axiosAsync, baseURL, camAddress, camCode, camera.length, currTimeStr, setLoggedIn]",[2567,2576],"[axiosAsync, refresh]",[1583,1591],"[setVideoSource, source]",[439,474],"[trafficTotalData, activeVisualKey, parseTotalData]",[611,646],[1489,1497],"[dayEndTime, dayStartDate, monthEndTime, monthStartDate, overSpeedEndTime, overSpeedStartDate, period, searchEndTime, searchStartDate, setTempEndTime, setTempStartDate, weekEndTime, weekStartDate]",[1411,1453],"[camCode, startDate, endTime, currentTime, getTrafficData]",[1606,1615],"[getTrafficData, refresh]",[1082,1132],"[realtimeCamCode, startDate, endTime, currentTime, getTrafficData]",[1700,1748],"[cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",[469,504],[467,502],[1285,1287],"[addArr, baseURL]",[596,631],[1324,1358],"[loginStatus]",[1107,1139],"[startDate, endTime, cameraCode, axiosData]",[575,593],"[axiosData, trafficTotalData]",[464,499],[1408,1458],"[cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",[386,399],"[parseTraffic, trafficData]",[439,474],[612,647],[955,957],"[getOptions]",[390,403],"[parseData, trafficData]",[469,504],[654,689],[606,641],[439,474],[432,467],[515,550],[462,497]]